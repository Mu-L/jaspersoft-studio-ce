/*******************************************************************************
 * Copyright Â© 2010-2023. Cloud Software Group, Inc. All rights reserved.
 *******************************************************************************/
package com.jaspersoft.studio.data.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.jaspersoft.studio.data.services.SqlGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSqlParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "MINUTE_MICROSECOND", "SECOND_MICROSECOND", "HOUR_MICROSECOND", "DAY_MICROSECOND", "MINUTE_SECOND", "STRAIGHT_JOIN", "HOUR_MINUTE", "HOUR_SECOND", "MICROSECOND", "DAY_MINUTE", "DAY_SECOND", "YEAR_MONTH", "BETWEEN_4", "KW_FOLLOWING", "INTERSECT", "PARTITION", "PRECEDING", "UNBOUNDED", "BETWEEN_2", "NOTEQUAL", "BETWEEN_3", "GREATER_1", "DAY_HOUR", "DISTINCT", "SIBLINGS", "BETWEEN_1", "GREATER", "BETWEEN", "CURRENT", "EXCLUDE", "EXTRACT", "INCLUDE", "NATURAL", "PERCENT", "QUARTER", "UNPIVOT", "EXCEPT", "EXISTS", "HAVING", "MINUTE", "OFFSET", "SECOND", "SELECT", "VALUES", "EQUAL", "LESS_1", "NOTIN", "CAST", "CROSS", "FETCH", "FIRST", "GROUP", "INNER", "LIMIT", "MINUS", "MONTH", "NULLS", "ORDER", "OUTER", "PIVOT", "RANGE", "RIGHT", "UNION", "USING", "WHERE", "LESS", "CASE", "DESC", "ELSE", "FROM", "FULL", "HOUR", "JOIN", "LAST", "LEFT", "LIKE", "NOT_1", "NULL", "ONLY", "OVER", "ROWS", "SOME", "THEN", "TIES", "WEEK", "WHEN", "WITH", "YEAR", "LeftParenthesisPlusSignRightParenthesis", "ALL", "AND", "ANY", "ASC", "DAY", "END", "FOR", "NOT", "ROW", "TOP", "XML", "IN_1", "ExclamationMarkEqualsSign", "X", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AS", "BY", "IN", "IS", "ON", "OR", "CircumflexAccentEqualsSign", "VerticalLineVerticalLine", "LeftParenthesis", "RightParenthesis", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "LessThanSign", "EqualsSign", "GreaterThanSign", "VerticalLine", "RightCurlyBracket", "RULE_JRPARAM", "RULE_JRNPARAM", "RULE_STAR", "RULE_UNSIGNED", "RULE_INT", "RULE_SIGNED_DOUBLE", "RULE_DATE", "RULE_TIME", "RULE_TIMESTAMP", "RULE_STRING_CORE", "RULE_STRING_", "RULE_STRING", "RULE_DBNAME", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LessThanSignGreaterThanSign=108;
    public static final int MONTH=59;
    public static final int JOIN=76;
    public static final int BETWEEN=31;
    public static final int LessThanSign=125;
    public static final int MINUS=58;
    public static final int LeftParenthesisPlusSignRightParenthesis=92;
    public static final int WHEN=89;
    public static final int QUARTER=38;
    public static final int LeftParenthesis=118;
    public static final int YEAR=91;
    public static final int ELSE=72;
    public static final int RULE_TIME=137;
    public static final int HOUR_MINUTE=10;
    public static final int PARTITION=19;
    public static final int INCLUDE=35;
    public static final int DAY_MINUTE=13;
    public static final int INNER=56;
    public static final int CAST=51;
    public static final int GreaterThanSign=127;
    public static final int LEFT=78;
    public static final int RULE_ID=143;
    public static final int IN=112;
    public static final int DISTINCT=27;
    public static final int IS=113;
    public static final int WHERE=68;
    public static final int CASE=70;
    public static final int GreaterThanSignEqualsSign=109;
    public static final int AS=110;
    public static final int RULE_DATE=136;
    public static final int TOP=102;
    public static final int VerticalLine=128;
    public static final int PlusSign=120;
    public static final int RULE_INT=134;
    public static final int RULE_ML_COMMENT=144;
    public static final int THEN=86;
    public static final int UNPIVOT=39;
    public static final int RULE_JRPARAM=130;
    public static final int MICROSECOND=12;
    public static final int VerticalLineVerticalLine=117;
    public static final int DAY_HOUR=26;
    public static final int RULE_DBNAME=142;
    public static final int GROUP=55;
    public static final int ORDER=61;
    public static final int ASC=96;
    public static final int Comma=121;
    public static final int HyphenMinus=122;
    public static final int STRAIGHT_JOIN=9;
    public static final int BY=111;
    public static final int X=106;
    public static final int OFFSET=44;
    public static final int RIGHT=65;
    public static final int VALUES=47;
    public static final int LessThanSignEqualsSign=107;
    public static final int Solidus=124;
    public static final int RightCurlyBracket=129;
    public static final int RULE_SIGNED_DOUBLE=135;
    public static final int FETCH=53;
    public static final int FullStop=123;
    public static final int RULE_UNSIGNED=133;
    public static final int SIBLINGS=28;
    public static final int GREATER=30;
    public static final int NOTIN=50;
    public static final int SECOND_MICROSECOND=5;
    public static final int FIRST=54;
    public static final int RULE_STRING_=140;
    public static final int SELECT=46;
    public static final int PRECEDING=20;
    public static final int RULE_JRNPARAM=131;
    public static final int PERCENT=37;
    public static final int ExclamationMarkEqualsSign=105;
    public static final int UNION=66;
    public static final int DAY=97;
    public static final int ALL=93;
    public static final int ONLY=82;
    public static final int FROM=73;
    public static final int DESC=71;
    public static final int MINUTE_MICROSECOND=4;
    public static final int UNBOUNDED=21;
    public static final int KW_FOLLOWING=17;
    public static final int MINUTE=43;
    public static final int RULE_STAR=132;
    public static final int HOUR_MICROSECOND=6;
    public static final int EXTRACT=34;
    public static final int NULL=81;
    public static final int DAY_MICROSECOND=7;
    public static final int LESS_1=49;
    public static final int FOR=99;
    public static final int RightParenthesis=119;
    public static final int PIVOT=63;
    public static final int EXCEPT=40;
    public static final int CURRENT=32;
    public static final int FULL=74;
    public static final int NOTEQUAL=23;
    public static final int USING=67;
    public static final int NOT=100;
    public static final int LIKE=79;
    public static final int LAST=77;
    public static final int IN_1=104;
    public static final int EXCLUDE=33;
    public static final int AND=94;
    public static final int CircumflexAccentEqualsSign=116;
    public static final int MINUTE_SECOND=8;
    public static final int YEAR_MONTH=15;
    public static final int LESS=69;
    public static final int END=98;
    public static final int ROW=101;
    public static final int HAVING=42;
    public static final int DAY_SECOND=14;
    public static final int RANGE=64;
    public static final int TIES=87;
    public static final int HOUR=75;
    public static final int LIMIT=57;
    public static final int RULE_STRING=141;
    public static final int ANY=95;
    public static final int RULE_SL_COMMENT=145;
    public static final int NATURAL=36;
    public static final int EqualsSign=126;
    public static final int SOME=85;
    public static final int NOT_1=80;
    public static final int BETWEEN_2=22;
    public static final int GREATER_1=25;
    public static final int BETWEEN_1=29;
    public static final int OUTER=62;
    public static final int WEEK=88;
    public static final int EOF=-1;
    public static final int BETWEEN_4=16;
    public static final int NULLS=60;
    public static final int BETWEEN_3=24;
    public static final int ON=114;
    public static final int OR=115;
    public static final int EXISTS=41;
    public static final int RULE_WS=146;
    public static final int EQUAL=48;
    public static final int RULE_ANY_OTHER=147;
    public static final int INTERSECT=18;
    public static final int WITH=90;
    public static final int OVER=83;
    public static final int CROSS=52;
    public static final int XML=103;
    public static final int SECOND=45;
    public static final int RULE_STRING_CORE=139;
    public static final int HOUR_SECOND=11;
    public static final int RULE_TIMESTAMP=138;
    public static final int ROWS=84;

    // delegates
    // delegators


        public InternalSqlParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSqlParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSqlParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSqlParser.g"; }


     
     	private SqlGrammarAccess grammarAccess;
     	
     	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
     	
     	{
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("VerticalLine", "'|'");
    		tokenNameToValue.put("RightCurlyBracket", "'}'");
    		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
    		tokenNameToValue.put("X", "'\u0024X'");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AS", "'AS'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("IN", "'IN'");
    		tokenNameToValue.put("IS", "'IS'");
    		tokenNameToValue.put("ON", "'ON'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("CircumflexAccentEqualsSign", "'^='");
    		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
    		tokenNameToValue.put("LeftParenthesisPlusSignRightParenthesis", "'(+)'");
    		tokenNameToValue.put("ALL", "'ALL'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("ANY", "'ANY'");
    		tokenNameToValue.put("ASC", "'ASC'");
    		tokenNameToValue.put("DAY", "'DAY'");
    		tokenNameToValue.put("END", "'END'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("ROW", "'ROW'");
    		tokenNameToValue.put("TOP", "'TOP'");
    		tokenNameToValue.put("XML", "'XML'");
    		tokenNameToValue.put("IN_1", "'{IN'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("DESC", "'DESC'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("FROM", "'FROM'");
    		tokenNameToValue.put("FULL", "'FULL'");
    		tokenNameToValue.put("HOUR", "'HOUR'");
    		tokenNameToValue.put("JOIN", "'JOIN'");
    		tokenNameToValue.put("LAST", "'LAST'");
    		tokenNameToValue.put("LEFT", "'LEFT'");
    		tokenNameToValue.put("LIKE", "'LIKE'");
    		tokenNameToValue.put("NOT_1", "'NOT\n'");
    		tokenNameToValue.put("NULL", "'NULL'");
    		tokenNameToValue.put("ONLY", "'ONLY'");
    		tokenNameToValue.put("OVER", "'OVER'");
    		tokenNameToValue.put("ROWS", "'ROWS'");
    		tokenNameToValue.put("SOME", "'SOME'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TIES", "'TIES'");
    		tokenNameToValue.put("WEEK", "'WEEK'");
    		tokenNameToValue.put("WHEN", "'WHEN'");
    		tokenNameToValue.put("WITH", "'WITH'");
    		tokenNameToValue.put("YEAR", "'YEAR'");
    		tokenNameToValue.put("CAST", "'CAST('");
    		tokenNameToValue.put("CROSS", "'CROSS'");
    		tokenNameToValue.put("FETCH", "'FETCH'");
    		tokenNameToValue.put("FIRST", "'FIRST'");
    		tokenNameToValue.put("GROUP", "'GROUP'");
    		tokenNameToValue.put("INNER", "'INNER'");
    		tokenNameToValue.put("LIMIT", "'LIMIT'");
    		tokenNameToValue.put("MINUS", "'MINUS'");
    		tokenNameToValue.put("MONTH", "'MONTH'");
    		tokenNameToValue.put("NULLS", "'NULLS'");
    		tokenNameToValue.put("ORDER", "'ORDER'");
    		tokenNameToValue.put("OUTER", "'OUTER'");
    		tokenNameToValue.put("PIVOT", "'PIVOT'");
    		tokenNameToValue.put("RANGE", "'RANGE'");
    		tokenNameToValue.put("RIGHT", "'RIGHT'");
    		tokenNameToValue.put("UNION", "'UNION'");
    		tokenNameToValue.put("USING", "'USING'");
    		tokenNameToValue.put("WHERE", "'WHERE'");
    		tokenNameToValue.put("LESS", "'{LESS'");
    		tokenNameToValue.put("EXCEPT", "'EXCEPT'");
    		tokenNameToValue.put("EXISTS", "'EXISTS'");
    		tokenNameToValue.put("HAVING", "'HAVING'");
    		tokenNameToValue.put("MINUTE", "'MINUTE'");
    		tokenNameToValue.put("OFFSET", "'OFFSET'");
    		tokenNameToValue.put("SECOND", "'SECOND'");
    		tokenNameToValue.put("SELECT", "'SELECT'");
    		tokenNameToValue.put("VALUES", "'VALUES'");
    		tokenNameToValue.put("EQUAL", "'{EQUAL'");
    		tokenNameToValue.put("LESS_1", "'{LESS]'");
    		tokenNameToValue.put("NOTIN", "'{NOTIN'");
    		tokenNameToValue.put("BETWEEN", "'BETWEEN'");
    		tokenNameToValue.put("CURRENT", "'CURRENT'");
    		tokenNameToValue.put("EXCLUDE", "'EXCLUDE'");
    		tokenNameToValue.put("EXTRACT", "'EXTRACT'");
    		tokenNameToValue.put("INCLUDE", "'INCLUDE'");
    		tokenNameToValue.put("NATURAL", "'NATURAL'");
    		tokenNameToValue.put("PERCENT", "'PERCENT'");
    		tokenNameToValue.put("QUARTER", "'QUARTER'");
    		tokenNameToValue.put("UNPIVOT", "'UNPIVOT'");
    		tokenNameToValue.put("DAY_HOUR", "'DAY_HOUR'");
    		tokenNameToValue.put("DISTINCT", "'DISTINCT'");
    		tokenNameToValue.put("SIBLINGS", "'SIBLINGS'");
    		tokenNameToValue.put("BETWEEN_1", "'{BETWEEN'");
    		tokenNameToValue.put("GREATER", "'{GREATER'");
    		tokenNameToValue.put("KW_FOLLOWING", "'FOLLOWING'");
    		tokenNameToValue.put("INTERSECT", "'INTERSECT'");
    		tokenNameToValue.put("PARTITION", "'PARTITION'");
    		tokenNameToValue.put("PRECEDING", "'PRECEDING'");
    		tokenNameToValue.put("UNBOUNDED", "'UNBOUNDED'");
    		tokenNameToValue.put("BETWEEN_2", "'{BETWEEN]'");
    		tokenNameToValue.put("NOTEQUAL", "'{NOTEQUAL'");
    		tokenNameToValue.put("BETWEEN_3", "'{[BETWEEN'");
    		tokenNameToValue.put("GREATER_1", "'{[GREATER'");
    		tokenNameToValue.put("DAY_MINUTE", "'DAY_MINUTE'");
    		tokenNameToValue.put("DAY_SECOND", "'DAY_SECOND'");
    		tokenNameToValue.put("YEAR_MONTH", "'YEAR_MONTH'");
    		tokenNameToValue.put("BETWEEN_4", "'{[BETWEEN]'");
    		tokenNameToValue.put("HOUR_MINUTE", "'HOUR_MINUTE'");
    		tokenNameToValue.put("HOUR_SECOND", "'HOUR_SECOND'");
    		tokenNameToValue.put("MICROSECOND", "'MICROSECOND'");
    		tokenNameToValue.put("MINUTE_SECOND", "'MINUTE_SECOND'");
    		tokenNameToValue.put("STRAIGHT_JOIN", "'STRAIGHT_JOIN'");
    		tokenNameToValue.put("DAY_MICROSECOND", "'DAY_MICROSECOND'");
    		tokenNameToValue.put("HOUR_MICROSECOND", "'HOUR_MICROSECOND'");
    		tokenNameToValue.put("MINUTE_MICROSECOND", "'MINUTE_MICROSECOND'");
    		tokenNameToValue.put("SECOND_MICROSECOND", "'SECOND_MICROSECOND'");
     	}
     	
        public void setGrammarAccess(SqlGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }

    	@Override
        protected String getValueForTokenName(String tokenName) {
        	String result = tokenNameToValue.get(tokenName);
        	if (result == null)
        		result = tokenName;
        	return result;
        }



    // $ANTLR start "entryRuleModel"
    // InternalSqlParser.g:190:1: entryRuleModel : ruleModel EOF ;
    public final void entryRuleModel() throws RecognitionException {
        try {
            // InternalSqlParser.g:191:1: ( ruleModel EOF )
            // InternalSqlParser.g:192:1: ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleModel();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalSqlParser.g:199:1: ruleModel : ( ( rule__Model__Group__0 ) ) ;
    public final void ruleModel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:203:5: ( ( ( rule__Model__Group__0 ) ) )
            // InternalSqlParser.g:204:1: ( ( rule__Model__Group__0 ) )
            {
            // InternalSqlParser.g:204:1: ( ( rule__Model__Group__0 ) )
            // InternalSqlParser.g:205:1: ( rule__Model__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getGroup()); 
            }
            // InternalSqlParser.g:206:1: ( rule__Model__Group__0 )
            // InternalSqlParser.g:206:2: rule__Model__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleWithQuery"
    // InternalSqlParser.g:218:1: entryRuleWithQuery : ruleWithQuery EOF ;
    public final void entryRuleWithQuery() throws RecognitionException {
        try {
            // InternalSqlParser.g:219:1: ( ruleWithQuery EOF )
            // InternalSqlParser.g:220:1: ruleWithQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithQuery"


    // $ANTLR start "ruleWithQuery"
    // InternalSqlParser.g:227:1: ruleWithQuery : ( ( rule__WithQuery__Group__0 ) ) ;
    public final void ruleWithQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:231:5: ( ( ( rule__WithQuery__Group__0 ) ) )
            // InternalSqlParser.g:232:1: ( ( rule__WithQuery__Group__0 ) )
            {
            // InternalSqlParser.g:232:1: ( ( rule__WithQuery__Group__0 ) )
            // InternalSqlParser.g:233:1: ( rule__WithQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup()); 
            }
            // InternalSqlParser.g:234:1: ( rule__WithQuery__Group__0 )
            // InternalSqlParser.g:234:2: rule__WithQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithQuery"


    // $ANTLR start "entryRuleWithColumns"
    // InternalSqlParser.g:246:1: entryRuleWithColumns : ruleWithColumns EOF ;
    public final void entryRuleWithColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:247:1: ( ruleWithColumns EOF )
            // InternalSqlParser.g:248:1: ruleWithColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWithColumns"


    // $ANTLR start "ruleWithColumns"
    // InternalSqlParser.g:255:1: ruleWithColumns : ( ( rule__WithColumns__Group__0 ) ) ;
    public final void ruleWithColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:259:5: ( ( ( rule__WithColumns__Group__0 ) ) )
            // InternalSqlParser.g:260:1: ( ( rule__WithColumns__Group__0 ) )
            {
            // InternalSqlParser.g:260:1: ( ( rule__WithColumns__Group__0 ) )
            // InternalSqlParser.g:261:1: ( rule__WithColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getGroup()); 
            }
            // InternalSqlParser.g:262:1: ( rule__WithColumns__Group__0 )
            // InternalSqlParser.g:262:2: rule__WithColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWithColumns"


    // $ANTLR start "entryRuleFetchFirst"
    // InternalSqlParser.g:274:1: entryRuleFetchFirst : ruleFetchFirst EOF ;
    public final void entryRuleFetchFirst() throws RecognitionException {
        try {
            // InternalSqlParser.g:275:1: ( ruleFetchFirst EOF )
            // InternalSqlParser.g:276:1: ruleFetchFirst EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFetchFirst"


    // $ANTLR start "ruleFetchFirst"
    // InternalSqlParser.g:283:1: ruleFetchFirst : ( ( rule__FetchFirst__Group__0 ) ) ;
    public final void ruleFetchFirst() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:287:5: ( ( ( rule__FetchFirst__Group__0 ) ) )
            // InternalSqlParser.g:288:1: ( ( rule__FetchFirst__Group__0 ) )
            {
            // InternalSqlParser.g:288:1: ( ( rule__FetchFirst__Group__0 ) )
            // InternalSqlParser.g:289:1: ( rule__FetchFirst__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getGroup()); 
            }
            // InternalSqlParser.g:290:1: ( rule__FetchFirst__Group__0 )
            // InternalSqlParser.g:290:2: rule__FetchFirst__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFetchFirst"


    // $ANTLR start "entryRuleOffset"
    // InternalSqlParser.g:302:1: entryRuleOffset : ruleOffset EOF ;
    public final void entryRuleOffset() throws RecognitionException {
        try {
            // InternalSqlParser.g:303:1: ( ruleOffset EOF )
            // InternalSqlParser.g:304:1: ruleOffset EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOffset"


    // $ANTLR start "ruleOffset"
    // InternalSqlParser.g:311:1: ruleOffset : ( ( rule__Offset__OffsetAssignment ) ) ;
    public final void ruleOffset() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:315:5: ( ( ( rule__Offset__OffsetAssignment ) ) )
            // InternalSqlParser.g:316:1: ( ( rule__Offset__OffsetAssignment ) )
            {
            // InternalSqlParser.g:316:1: ( ( rule__Offset__OffsetAssignment ) )
            // InternalSqlParser.g:317:1: ( rule__Offset__OffsetAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }
            // InternalSqlParser.g:318:1: ( rule__Offset__OffsetAssignment )
            // InternalSqlParser.g:318:2: rule__Offset__OffsetAssignment
            {
            pushFollow(FOLLOW_2);
            rule__Offset__OffsetAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOffset"


    // $ANTLR start "entryRuleLimit"
    // InternalSqlParser.g:330:1: entryRuleLimit : ruleLimit EOF ;
    public final void entryRuleLimit() throws RecognitionException {
        try {
            // InternalSqlParser.g:331:1: ( ruleLimit EOF )
            // InternalSqlParser.g:332:1: ruleLimit EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLimit"


    // $ANTLR start "ruleLimit"
    // InternalSqlParser.g:339:1: ruleLimit : ( ( rule__Limit__Alternatives ) ) ;
    public final void ruleLimit() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:343:5: ( ( ( rule__Limit__Alternatives ) ) )
            // InternalSqlParser.g:344:1: ( ( rule__Limit__Alternatives ) )
            {
            // InternalSqlParser.g:344:1: ( ( rule__Limit__Alternatives ) )
            // InternalSqlParser.g:345:1: ( rule__Limit__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:346:1: ( rule__Limit__Alternatives )
            // InternalSqlParser.g:346:2: rule__Limit__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLimit"


    // $ANTLR start "entryRuleSelectQuery"
    // InternalSqlParser.g:358:1: entryRuleSelectQuery : ruleSelectQuery EOF ;
    public final void entryRuleSelectQuery() throws RecognitionException {
        try {
            // InternalSqlParser.g:359:1: ( ruleSelectQuery EOF )
            // InternalSqlParser.g:360:1: ruleSelectQuery EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectQuery"


    // $ANTLR start "ruleSelectQuery"
    // InternalSqlParser.g:367:1: ruleSelectQuery : ( ( rule__SelectQuery__Group__0 ) ) ;
    public final void ruleSelectQuery() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:371:5: ( ( ( rule__SelectQuery__Group__0 ) ) )
            // InternalSqlParser.g:372:1: ( ( rule__SelectQuery__Group__0 ) )
            {
            // InternalSqlParser.g:372:1: ( ( rule__SelectQuery__Group__0 ) )
            // InternalSqlParser.g:373:1: ( rule__SelectQuery__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getGroup()); 
            }
            // InternalSqlParser.g:374:1: ( rule__SelectQuery__Group__0 )
            // InternalSqlParser.g:374:2: rule__SelectQuery__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectQuery"


    // $ANTLR start "entryRuleSelectSubSet"
    // InternalSqlParser.g:386:1: entryRuleSelectSubSet : ruleSelectSubSet EOF ;
    public final void entryRuleSelectSubSet() throws RecognitionException {
        try {
            // InternalSqlParser.g:387:1: ( ruleSelectSubSet EOF )
            // InternalSqlParser.g:388:1: ruleSelectSubSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelectSubSet"


    // $ANTLR start "ruleSelectSubSet"
    // InternalSqlParser.g:395:1: ruleSelectSubSet : ( ( rule__SelectSubSet__Group__0 ) ) ;
    public final void ruleSelectSubSet() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:399:5: ( ( ( rule__SelectSubSet__Group__0 ) ) )
            // InternalSqlParser.g:400:1: ( ( rule__SelectSubSet__Group__0 ) )
            {
            // InternalSqlParser.g:400:1: ( ( rule__SelectSubSet__Group__0 ) )
            // InternalSqlParser.g:401:1: ( rule__SelectSubSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }
            // InternalSqlParser.g:402:1: ( rule__SelectSubSet__Group__0 )
            // InternalSqlParser.g:402:2: rule__SelectSubSet__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelectSubSet"


    // $ANTLR start "entryRuleSelect"
    // InternalSqlParser.g:414:1: entryRuleSelect : ruleSelect EOF ;
    public final void entryRuleSelect() throws RecognitionException {
        try {
            // InternalSqlParser.g:415:1: ( ruleSelect EOF )
            // InternalSqlParser.g:416:1: ruleSelect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSelect"


    // $ANTLR start "ruleSelect"
    // InternalSqlParser.g:423:1: ruleSelect : ( ( rule__Select__Group__0 ) ) ;
    public final void ruleSelect() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:427:5: ( ( ( rule__Select__Group__0 ) ) )
            // InternalSqlParser.g:428:1: ( ( rule__Select__Group__0 ) )
            {
            // InternalSqlParser.g:428:1: ( ( rule__Select__Group__0 ) )
            // InternalSqlParser.g:429:1: ( rule__Select__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup()); 
            }
            // InternalSqlParser.g:430:1: ( rule__Select__Group__0 )
            // InternalSqlParser.g:430:2: rule__Select__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSelect"


    // $ANTLR start "entryRuleColumns"
    // InternalSqlParser.g:442:1: entryRuleColumns : ruleColumns EOF ;
    public final void entryRuleColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:443:1: ( ruleColumns EOF )
            // InternalSqlParser.g:444:1: ruleColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumns"


    // $ANTLR start "ruleColumns"
    // InternalSqlParser.g:451:1: ruleColumns : ( ( rule__Columns__Group__0 ) ) ;
    public final void ruleColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:455:5: ( ( ( rule__Columns__Group__0 ) ) )
            // InternalSqlParser.g:456:1: ( ( rule__Columns__Group__0 ) )
            {
            // InternalSqlParser.g:456:1: ( ( rule__Columns__Group__0 ) )
            // InternalSqlParser.g:457:1: ( rule__Columns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup()); 
            }
            // InternalSqlParser.g:458:1: ( rule__Columns__Group__0 )
            // InternalSqlParser.g:458:2: rule__Columns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumns"


    // $ANTLR start "entryRuleColumnOrAlias"
    // InternalSqlParser.g:470:1: entryRuleColumnOrAlias : ruleColumnOrAlias EOF ;
    public final void entryRuleColumnOrAlias() throws RecognitionException {
        try {
            // InternalSqlParser.g:471:1: ( ruleColumnOrAlias EOF )
            // InternalSqlParser.g:472:1: ruleColumnOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOrAlias"


    // $ANTLR start "ruleColumnOrAlias"
    // InternalSqlParser.g:479:1: ruleColumnOrAlias : ( ( rule__ColumnOrAlias__Alternatives ) ) ;
    public final void ruleColumnOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:483:5: ( ( ( rule__ColumnOrAlias__Alternatives ) ) )
            // InternalSqlParser.g:484:1: ( ( rule__ColumnOrAlias__Alternatives ) )
            {
            // InternalSqlParser.g:484:1: ( ( rule__ColumnOrAlias__Alternatives ) )
            // InternalSqlParser.g:485:1: ( rule__ColumnOrAlias__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:486:1: ( rule__ColumnOrAlias__Alternatives )
            // InternalSqlParser.g:486:2: rule__ColumnOrAlias__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOrAlias"


    // $ANTLR start "entryRuleColumnFull"
    // InternalSqlParser.g:498:1: entryRuleColumnFull : ruleColumnFull EOF ;
    public final void entryRuleColumnFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:499:1: ( ruleColumnFull EOF )
            // InternalSqlParser.g:500:1: ruleColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnFull"


    // $ANTLR start "ruleColumnFull"
    // InternalSqlParser.g:507:1: ruleColumnFull : ( ( rule__ColumnFull__Group__0 ) ) ;
    public final void ruleColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:511:5: ( ( ( rule__ColumnFull__Group__0 ) ) )
            // InternalSqlParser.g:512:1: ( ( rule__ColumnFull__Group__0 ) )
            {
            // InternalSqlParser.g:512:1: ( ( rule__ColumnFull__Group__0 ) )
            // InternalSqlParser.g:513:1: ( rule__ColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup()); 
            }
            // InternalSqlParser.g:514:1: ( rule__ColumnFull__Group__0 )
            // InternalSqlParser.g:514:2: rule__ColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnFull"


    // $ANTLR start "entryRuleTables"
    // InternalSqlParser.g:526:1: entryRuleTables : ruleTables EOF ;
    public final void entryRuleTables() throws RecognitionException {
        try {
            // InternalSqlParser.g:527:1: ( ruleTables EOF )
            // InternalSqlParser.g:528:1: ruleTables EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTables"


    // $ANTLR start "ruleTables"
    // InternalSqlParser.g:535:1: ruleTables : ( ( rule__Tables__Group__0 ) ) ;
    public final void ruleTables() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:539:5: ( ( ( rule__Tables__Group__0 ) ) )
            // InternalSqlParser.g:540:1: ( ( rule__Tables__Group__0 ) )
            {
            // InternalSqlParser.g:540:1: ( ( rule__Tables__Group__0 ) )
            // InternalSqlParser.g:541:1: ( rule__Tables__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup()); 
            }
            // InternalSqlParser.g:542:1: ( rule__Tables__Group__0 )
            // InternalSqlParser.g:542:2: rule__Tables__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTables"


    // $ANTLR start "entryRuleFromTable"
    // InternalSqlParser.g:554:1: entryRuleFromTable : ruleFromTable EOF ;
    public final void entryRuleFromTable() throws RecognitionException {
        try {
            // InternalSqlParser.g:555:1: ( ruleFromTable EOF )
            // InternalSqlParser.g:556:1: ruleFromTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTable"


    // $ANTLR start "ruleFromTable"
    // InternalSqlParser.g:563:1: ruleFromTable : ( ( rule__FromTable__Group__0 ) ) ;
    public final void ruleFromTable() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:567:5: ( ( ( rule__FromTable__Group__0 ) ) )
            // InternalSqlParser.g:568:1: ( ( rule__FromTable__Group__0 ) )
            {
            // InternalSqlParser.g:568:1: ( ( rule__FromTable__Group__0 ) )
            // InternalSqlParser.g:569:1: ( rule__FromTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getGroup()); 
            }
            // InternalSqlParser.g:570:1: ( rule__FromTable__Group__0 )
            // InternalSqlParser.g:570:2: rule__FromTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTable"


    // $ANTLR start "entryRuleFromTableJoin"
    // InternalSqlParser.g:582:1: entryRuleFromTableJoin : ruleFromTableJoin EOF ;
    public final void entryRuleFromTableJoin() throws RecognitionException {
        try {
            // InternalSqlParser.g:583:1: ( ruleFromTableJoin EOF )
            // InternalSqlParser.g:584:1: ruleFromTableJoin EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromTableJoin"


    // $ANTLR start "ruleFromTableJoin"
    // InternalSqlParser.g:591:1: ruleFromTableJoin : ( ( rule__FromTableJoin__Group__0 ) ) ;
    public final void ruleFromTableJoin() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:595:5: ( ( ( rule__FromTableJoin__Group__0 ) ) )
            // InternalSqlParser.g:596:1: ( ( rule__FromTableJoin__Group__0 ) )
            {
            // InternalSqlParser.g:596:1: ( ( rule__FromTableJoin__Group__0 ) )
            // InternalSqlParser.g:597:1: ( rule__FromTableJoin__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }
            // InternalSqlParser.g:598:1: ( rule__FromTableJoin__Group__0 )
            // InternalSqlParser.g:598:2: rule__FromTableJoin__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromTableJoin"


    // $ANTLR start "entryRuleJoinCondition"
    // InternalSqlParser.g:610:1: entryRuleJoinCondition : ruleJoinCondition EOF ;
    public final void entryRuleJoinCondition() throws RecognitionException {
        try {
            // InternalSqlParser.g:611:1: ( ruleJoinCondition EOF )
            // InternalSqlParser.g:612:1: ruleJoinCondition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinCondition"


    // $ANTLR start "ruleJoinCondition"
    // InternalSqlParser.g:619:1: ruleJoinCondition : ( ( rule__JoinCondition__Group__0 ) ) ;
    public final void ruleJoinCondition() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:623:5: ( ( ( rule__JoinCondition__Group__0 ) ) )
            // InternalSqlParser.g:624:1: ( ( rule__JoinCondition__Group__0 ) )
            {
            // InternalSqlParser.g:624:1: ( ( rule__JoinCondition__Group__0 ) )
            // InternalSqlParser.g:625:1: ( rule__JoinCondition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getGroup()); 
            }
            // InternalSqlParser.g:626:1: ( rule__JoinCondition__Group__0 )
            // InternalSqlParser.g:626:2: rule__JoinCondition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinCondition"


    // $ANTLR start "entryRuleUsingCols"
    // InternalSqlParser.g:638:1: entryRuleUsingCols : ruleUsingCols EOF ;
    public final void entryRuleUsingCols() throws RecognitionException {
        try {
            // InternalSqlParser.g:639:1: ( ruleUsingCols EOF )
            // InternalSqlParser.g:640:1: ruleUsingCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUsingCols"


    // $ANTLR start "ruleUsingCols"
    // InternalSqlParser.g:647:1: ruleUsingCols : ( ( rule__UsingCols__Group__0 ) ) ;
    public final void ruleUsingCols() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:651:5: ( ( ( rule__UsingCols__Group__0 ) ) )
            // InternalSqlParser.g:652:1: ( ( rule__UsingCols__Group__0 ) )
            {
            // InternalSqlParser.g:652:1: ( ( rule__UsingCols__Group__0 ) )
            // InternalSqlParser.g:653:1: ( rule__UsingCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup()); 
            }
            // InternalSqlParser.g:654:1: ( rule__UsingCols__Group__0 )
            // InternalSqlParser.g:654:2: rule__UsingCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUsingCols"


    // $ANTLR start "entryRuleTableOrAlias"
    // InternalSqlParser.g:666:1: entryRuleTableOrAlias : ruleTableOrAlias EOF ;
    public final void entryRuleTableOrAlias() throws RecognitionException {
        try {
            // InternalSqlParser.g:667:1: ( ruleTableOrAlias EOF )
            // InternalSqlParser.g:668:1: ruleTableOrAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableOrAlias"


    // $ANTLR start "ruleTableOrAlias"
    // InternalSqlParser.g:675:1: ruleTableOrAlias : ( ( rule__TableOrAlias__Group__0 ) ) ;
    public final void ruleTableOrAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:679:5: ( ( ( rule__TableOrAlias__Group__0 ) ) )
            // InternalSqlParser.g:680:1: ( ( rule__TableOrAlias__Group__0 ) )
            {
            // InternalSqlParser.g:680:1: ( ( rule__TableOrAlias__Group__0 ) )
            // InternalSqlParser.g:681:1: ( rule__TableOrAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }
            // InternalSqlParser.g:682:1: ( rule__TableOrAlias__Group__0 )
            // InternalSqlParser.g:682:2: rule__TableOrAlias__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableOrAlias"


    // $ANTLR start "entryRuleFromValues"
    // InternalSqlParser.g:694:1: entryRuleFromValues : ruleFromValues EOF ;
    public final void entryRuleFromValues() throws RecognitionException {
        try {
            // InternalSqlParser.g:695:1: ( ruleFromValues EOF )
            // InternalSqlParser.g:696:1: ruleFromValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValues"


    // $ANTLR start "ruleFromValues"
    // InternalSqlParser.g:703:1: ruleFromValues : ( ( rule__FromValues__Group__0 ) ) ;
    public final void ruleFromValues() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:707:5: ( ( ( rule__FromValues__Group__0 ) ) )
            // InternalSqlParser.g:708:1: ( ( rule__FromValues__Group__0 ) )
            {
            // InternalSqlParser.g:708:1: ( ( rule__FromValues__Group__0 ) )
            // InternalSqlParser.g:709:1: ( rule__FromValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getGroup()); 
            }
            // InternalSqlParser.g:710:1: ( rule__FromValues__Group__0 )
            // InternalSqlParser.g:710:2: rule__FromValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValues"


    // $ANTLR start "entryRuleFromValuesColumns"
    // InternalSqlParser.g:722:1: entryRuleFromValuesColumns : ruleFromValuesColumns EOF ;
    public final void entryRuleFromValuesColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:723:1: ( ruleFromValuesColumns EOF )
            // InternalSqlParser.g:724:1: ruleFromValuesColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumns"


    // $ANTLR start "ruleFromValuesColumns"
    // InternalSqlParser.g:731:1: ruleFromValuesColumns : ( ( rule__FromValuesColumns__Group__0 ) ) ;
    public final void ruleFromValuesColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:735:5: ( ( ( rule__FromValuesColumns__Group__0 ) ) )
            // InternalSqlParser.g:736:1: ( ( rule__FromValuesColumns__Group__0 ) )
            {
            // InternalSqlParser.g:736:1: ( ( rule__FromValuesColumns__Group__0 ) )
            // InternalSqlParser.g:737:1: ( rule__FromValuesColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }
            // InternalSqlParser.g:738:1: ( rule__FromValuesColumns__Group__0 )
            // InternalSqlParser.g:738:2: rule__FromValuesColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumns"


    // $ANTLR start "entryRuleFromValuesColumnNames"
    // InternalSqlParser.g:750:1: entryRuleFromValuesColumnNames : ruleFromValuesColumnNames EOF ;
    public final void entryRuleFromValuesColumnNames() throws RecognitionException {
        try {
            // InternalSqlParser.g:751:1: ( ruleFromValuesColumnNames EOF )
            // InternalSqlParser.g:752:1: ruleFromValuesColumnNames EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFromValuesColumnNames"


    // $ANTLR start "ruleFromValuesColumnNames"
    // InternalSqlParser.g:759:1: ruleFromValuesColumnNames : ( ( rule__FromValuesColumnNames__Group__0 ) ) ;
    public final void ruleFromValuesColumnNames() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:763:5: ( ( ( rule__FromValuesColumnNames__Group__0 ) ) )
            // InternalSqlParser.g:764:1: ( ( rule__FromValuesColumnNames__Group__0 ) )
            {
            // InternalSqlParser.g:764:1: ( ( rule__FromValuesColumnNames__Group__0 ) )
            // InternalSqlParser.g:765:1: ( rule__FromValuesColumnNames__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }
            // InternalSqlParser.g:766:1: ( rule__FromValuesColumnNames__Group__0 )
            // InternalSqlParser.g:766:2: rule__FromValuesColumnNames__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFromValuesColumnNames"


    // $ANTLR start "entryRuleColumnName"
    // InternalSqlParser.g:778:1: entryRuleColumnName : ruleColumnName EOF ;
    public final void entryRuleColumnName() throws RecognitionException {
        try {
            // InternalSqlParser.g:779:1: ( ruleColumnName EOF )
            // InternalSqlParser.g:780:1: ruleColumnName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnName"


    // $ANTLR start "ruleColumnName"
    // InternalSqlParser.g:787:1: ruleColumnName : ( ( rule__ColumnName__ColNameAssignment ) ) ;
    public final void ruleColumnName() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:791:5: ( ( ( rule__ColumnName__ColNameAssignment ) ) )
            // InternalSqlParser.g:792:1: ( ( rule__ColumnName__ColNameAssignment ) )
            {
            // InternalSqlParser.g:792:1: ( ( rule__ColumnName__ColNameAssignment ) )
            // InternalSqlParser.g:793:1: ( rule__ColumnName__ColNameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }
            // InternalSqlParser.g:794:1: ( rule__ColumnName__ColNameAssignment )
            // InternalSqlParser.g:794:2: rule__ColumnName__ColNameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ColumnName__ColNameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnName"


    // $ANTLR start "entryRuleValues"
    // InternalSqlParser.g:806:1: entryRuleValues : ruleValues EOF ;
    public final void entryRuleValues() throws RecognitionException {
        try {
            // InternalSqlParser.g:807:1: ( ruleValues EOF )
            // InternalSqlParser.g:808:1: ruleValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleValues"


    // $ANTLR start "ruleValues"
    // InternalSqlParser.g:815:1: ruleValues : ( ( rule__Values__Group__0 ) ) ;
    public final void ruleValues() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:819:5: ( ( ( rule__Values__Group__0 ) ) )
            // InternalSqlParser.g:820:1: ( ( rule__Values__Group__0 ) )
            {
            // InternalSqlParser.g:820:1: ( ( rule__Values__Group__0 ) )
            // InternalSqlParser.g:821:1: ( rule__Values__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getGroup()); 
            }
            // InternalSqlParser.g:822:1: ( rule__Values__Group__0 )
            // InternalSqlParser.g:822:2: rule__Values__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValues"


    // $ANTLR start "entryRuleRows"
    // InternalSqlParser.g:834:1: entryRuleRows : ruleRows EOF ;
    public final void entryRuleRows() throws RecognitionException {
        try {
            // InternalSqlParser.g:835:1: ( ruleRows EOF )
            // InternalSqlParser.g:836:1: ruleRows EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRows"


    // $ANTLR start "ruleRows"
    // InternalSqlParser.g:843:1: ruleRows : ( ( rule__Rows__Group__0 ) ) ;
    public final void ruleRows() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:847:5: ( ( ( rule__Rows__Group__0 ) ) )
            // InternalSqlParser.g:848:1: ( ( rule__Rows__Group__0 ) )
            {
            // InternalSqlParser.g:848:1: ( ( rule__Rows__Group__0 ) )
            // InternalSqlParser.g:849:1: ( rule__Rows__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup()); 
            }
            // InternalSqlParser.g:850:1: ( rule__Rows__Group__0 )
            // InternalSqlParser.g:850:2: rule__Rows__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRows"


    // $ANTLR start "entryRuleRow"
    // InternalSqlParser.g:862:1: entryRuleRow : ruleRow EOF ;
    public final void entryRuleRow() throws RecognitionException {
        try {
            // InternalSqlParser.g:863:1: ( ruleRow EOF )
            // InternalSqlParser.g:864:1: ruleRow EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRow"


    // $ANTLR start "ruleRow"
    // InternalSqlParser.g:871:1: ruleRow : ( ( rule__Row__Group__0 ) ) ;
    public final void ruleRow() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:875:5: ( ( ( rule__Row__Group__0 ) ) )
            // InternalSqlParser.g:876:1: ( ( rule__Row__Group__0 ) )
            {
            // InternalSqlParser.g:876:1: ( ( rule__Row__Group__0 ) )
            // InternalSqlParser.g:877:1: ( rule__Row__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getGroup()); 
            }
            // InternalSqlParser.g:878:1: ( rule__Row__Group__0 )
            // InternalSqlParser.g:878:2: rule__Row__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRow"


    // $ANTLR start "entryRuleRowValues"
    // InternalSqlParser.g:890:1: entryRuleRowValues : ruleRowValues EOF ;
    public final void entryRuleRowValues() throws RecognitionException {
        try {
            // InternalSqlParser.g:891:1: ( ruleRowValues EOF )
            // InternalSqlParser.g:892:1: ruleRowValues EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValues"


    // $ANTLR start "ruleRowValues"
    // InternalSqlParser.g:899:1: ruleRowValues : ( ( rule__RowValues__Group__0 ) ) ;
    public final void ruleRowValues() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:903:5: ( ( ( rule__RowValues__Group__0 ) ) )
            // InternalSqlParser.g:904:1: ( ( rule__RowValues__Group__0 ) )
            {
            // InternalSqlParser.g:904:1: ( ( rule__RowValues__Group__0 ) )
            // InternalSqlParser.g:905:1: ( rule__RowValues__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup()); 
            }
            // InternalSqlParser.g:906:1: ( rule__RowValues__Group__0 )
            // InternalSqlParser.g:906:2: rule__RowValues__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValues"


    // $ANTLR start "entryRuleRowValue"
    // InternalSqlParser.g:918:1: entryRuleRowValue : ruleRowValue EOF ;
    public final void entryRuleRowValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:919:1: ( ruleRowValue EOF )
            // InternalSqlParser.g:920:1: ruleRowValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRowValue"


    // $ANTLR start "ruleRowValue"
    // InternalSqlParser.g:927:1: ruleRowValue : ( ( rule__RowValue__Alternatives ) ) ;
    public final void ruleRowValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:931:5: ( ( ( rule__RowValue__Alternatives ) ) )
            // InternalSqlParser.g:932:1: ( ( rule__RowValue__Alternatives ) )
            {
            // InternalSqlParser.g:932:1: ( ( rule__RowValue__Alternatives ) )
            // InternalSqlParser.g:933:1: ( rule__RowValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:934:1: ( rule__RowValue__Alternatives )
            // InternalSqlParser.g:934:2: rule__RowValue__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__RowValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRowValue"


    // $ANTLR start "entryRulePivotTable"
    // InternalSqlParser.g:946:1: entryRulePivotTable : rulePivotTable EOF ;
    public final void entryRulePivotTable() throws RecognitionException {
        try {
            // InternalSqlParser.g:947:1: ( rulePivotTable EOF )
            // InternalSqlParser.g:948:1: rulePivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotTable"


    // $ANTLR start "rulePivotTable"
    // InternalSqlParser.g:955:1: rulePivotTable : ( ( rule__PivotTable__Group__0 ) ) ;
    public final void rulePivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:959:5: ( ( ( rule__PivotTable__Group__0 ) ) )
            // InternalSqlParser.g:960:1: ( ( rule__PivotTable__Group__0 ) )
            {
            // InternalSqlParser.g:960:1: ( ( rule__PivotTable__Group__0 ) )
            // InternalSqlParser.g:961:1: ( rule__PivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getGroup()); 
            }
            // InternalSqlParser.g:962:1: ( rule__PivotTable__Group__0 )
            // InternalSqlParser.g:962:2: rule__PivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotTable"


    // $ANTLR start "entryRulePivotFunctions"
    // InternalSqlParser.g:974:1: entryRulePivotFunctions : rulePivotFunctions EOF ;
    public final void entryRulePivotFunctions() throws RecognitionException {
        try {
            // InternalSqlParser.g:975:1: ( rulePivotFunctions EOF )
            // InternalSqlParser.g:976:1: rulePivotFunctions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotFunctions"


    // $ANTLR start "rulePivotFunctions"
    // InternalSqlParser.g:983:1: rulePivotFunctions : ( ( rule__PivotFunctions__AbcAssignment ) ) ;
    public final void rulePivotFunctions() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:987:5: ( ( ( rule__PivotFunctions__AbcAssignment ) ) )
            // InternalSqlParser.g:988:1: ( ( rule__PivotFunctions__AbcAssignment ) )
            {
            // InternalSqlParser.g:988:1: ( ( rule__PivotFunctions__AbcAssignment ) )
            // InternalSqlParser.g:989:1: ( rule__PivotFunctions__AbcAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }
            // InternalSqlParser.g:990:1: ( rule__PivotFunctions__AbcAssignment )
            // InternalSqlParser.g:990:2: rule__PivotFunctions__AbcAssignment
            {
            pushFollow(FOLLOW_2);
            rule__PivotFunctions__AbcAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotFunctions"


    // $ANTLR start "entryRulePivotInClause"
    // InternalSqlParser.g:1004:1: entryRulePivotInClause : rulePivotInClause EOF ;
    public final void entryRulePivotInClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:1005:1: ( rulePivotInClause EOF )
            // InternalSqlParser.g:1006:1: rulePivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClause"


    // $ANTLR start "rulePivotInClause"
    // InternalSqlParser.g:1013:1: rulePivotInClause : ( ( rule__PivotInClause__Group__0 ) ) ;
    public final void rulePivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1017:5: ( ( ( rule__PivotInClause__Group__0 ) ) )
            // InternalSqlParser.g:1018:1: ( ( rule__PivotInClause__Group__0 ) )
            {
            // InternalSqlParser.g:1018:1: ( ( rule__PivotInClause__Group__0 ) )
            // InternalSqlParser.g:1019:1: ( rule__PivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }
            // InternalSqlParser.g:1020:1: ( rule__PivotInClause__Group__0 )
            // InternalSqlParser.g:1020:2: rule__PivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClause"


    // $ANTLR start "entryRulePivotInClauseAny"
    // InternalSqlParser.g:1032:1: entryRulePivotInClauseAny : rulePivotInClauseAny EOF ;
    public final void entryRulePivotInClauseAny() throws RecognitionException {
        try {
            // InternalSqlParser.g:1033:1: ( rulePivotInClauseAny EOF )
            // InternalSqlParser.g:1034:1: rulePivotInClauseAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotInClauseAny"


    // $ANTLR start "rulePivotInClauseAny"
    // InternalSqlParser.g:1041:1: rulePivotInClauseAny : ( ( rule__PivotInClauseAny__Group__0 ) ) ;
    public final void rulePivotInClauseAny() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1045:5: ( ( ( rule__PivotInClauseAny__Group__0 ) ) )
            // InternalSqlParser.g:1046:1: ( ( rule__PivotInClauseAny__Group__0 ) )
            {
            // InternalSqlParser.g:1046:1: ( ( rule__PivotInClauseAny__Group__0 ) )
            // InternalSqlParser.g:1047:1: ( rule__PivotInClauseAny__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }
            // InternalSqlParser.g:1048:1: ( rule__PivotInClauseAny__Group__0 )
            // InternalSqlParser.g:1048:2: rule__PivotInClauseAny__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotInClauseAny"


    // $ANTLR start "entryRuleUnpivotTable"
    // InternalSqlParser.g:1060:1: entryRuleUnpivotTable : ruleUnpivotTable EOF ;
    public final void entryRuleUnpivotTable() throws RecognitionException {
        try {
            // InternalSqlParser.g:1061:1: ( ruleUnpivotTable EOF )
            // InternalSqlParser.g:1062:1: ruleUnpivotTable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotTable"


    // $ANTLR start "ruleUnpivotTable"
    // InternalSqlParser.g:1069:1: ruleUnpivotTable : ( ( rule__UnpivotTable__Group__0 ) ) ;
    public final void ruleUnpivotTable() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1073:5: ( ( ( rule__UnpivotTable__Group__0 ) ) )
            // InternalSqlParser.g:1074:1: ( ( rule__UnpivotTable__Group__0 ) )
            {
            // InternalSqlParser.g:1074:1: ( ( rule__UnpivotTable__Group__0 ) )
            // InternalSqlParser.g:1075:1: ( rule__UnpivotTable__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }
            // InternalSqlParser.g:1076:1: ( rule__UnpivotTable__Group__0 )
            // InternalSqlParser.g:1076:2: rule__UnpivotTable__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotTable"


    // $ANTLR start "entryRuleUnpivotInClause"
    // InternalSqlParser.g:1088:1: entryRuleUnpivotInClause : ruleUnpivotInClause EOF ;
    public final void entryRuleUnpivotInClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:1089:1: ( ruleUnpivotInClause EOF )
            // InternalSqlParser.g:1090:1: ruleUnpivotInClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClause"


    // $ANTLR start "ruleUnpivotInClause"
    // InternalSqlParser.g:1097:1: ruleUnpivotInClause : ( ( rule__UnpivotInClause__Group__0 ) ) ;
    public final void ruleUnpivotInClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1101:5: ( ( ( rule__UnpivotInClause__Group__0 ) ) )
            // InternalSqlParser.g:1102:1: ( ( rule__UnpivotInClause__Group__0 ) )
            {
            // InternalSqlParser.g:1102:1: ( ( rule__UnpivotInClause__Group__0 ) )
            // InternalSqlParser.g:1103:1: ( rule__UnpivotInClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }
            // InternalSqlParser.g:1104:1: ( rule__UnpivotInClause__Group__0 )
            // InternalSqlParser.g:1104:2: rule__UnpivotInClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClause"


    // $ANTLR start "entryRuleUnpivotInClauseArgs"
    // InternalSqlParser.g:1116:1: entryRuleUnpivotInClauseArgs : ruleUnpivotInClauseArgs EOF ;
    public final void entryRuleUnpivotInClauseArgs() throws RecognitionException {
        try {
            // InternalSqlParser.g:1117:1: ( ruleUnpivotInClauseArgs EOF )
            // InternalSqlParser.g:1118:1: ruleUnpivotInClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArgs"


    // $ANTLR start "ruleUnpivotInClauseArgs"
    // InternalSqlParser.g:1125:1: ruleUnpivotInClauseArgs : ( ( rule__UnpivotInClauseArgs__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1129:5: ( ( ( rule__UnpivotInClauseArgs__Group__0 ) ) )
            // InternalSqlParser.g:1130:1: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            {
            // InternalSqlParser.g:1130:1: ( ( rule__UnpivotInClauseArgs__Group__0 ) )
            // InternalSqlParser.g:1131:1: ( rule__UnpivotInClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }
            // InternalSqlParser.g:1132:1: ( rule__UnpivotInClauseArgs__Group__0 )
            // InternalSqlParser.g:1132:2: rule__UnpivotInClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArgs"


    // $ANTLR start "entryRuleUnpivotInClauseArg"
    // InternalSqlParser.g:1144:1: entryRuleUnpivotInClauseArg : ruleUnpivotInClauseArg EOF ;
    public final void entryRuleUnpivotInClauseArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:1145:1: ( ruleUnpivotInClauseArg EOF )
            // InternalSqlParser.g:1146:1: ruleUnpivotInClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnpivotInClauseArg"


    // $ANTLR start "ruleUnpivotInClauseArg"
    // InternalSqlParser.g:1153:1: ruleUnpivotInClauseArg : ( ( rule__UnpivotInClauseArg__Group__0 ) ) ;
    public final void ruleUnpivotInClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1157:5: ( ( ( rule__UnpivotInClauseArg__Group__0 ) ) )
            // InternalSqlParser.g:1158:1: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            {
            // InternalSqlParser.g:1158:1: ( ( rule__UnpivotInClauseArg__Group__0 ) )
            // InternalSqlParser.g:1159:1: ( rule__UnpivotInClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }
            // InternalSqlParser.g:1160:1: ( rule__UnpivotInClauseArg__Group__0 )
            // InternalSqlParser.g:1160:2: rule__UnpivotInClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnpivotInClauseArg"


    // $ANTLR start "entryRulePivotForClause"
    // InternalSqlParser.g:1172:1: entryRulePivotForClause : rulePivotForClause EOF ;
    public final void entryRulePivotForClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:1173:1: ( rulePivotForClause EOF )
            // InternalSqlParser.g:1174:1: rulePivotForClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotForClause"


    // $ANTLR start "rulePivotForClause"
    // InternalSqlParser.g:1181:1: rulePivotForClause : ( ( rule__PivotForClause__Group__0 ) ) ;
    public final void rulePivotForClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1185:5: ( ( ( rule__PivotForClause__Group__0 ) ) )
            // InternalSqlParser.g:1186:1: ( ( rule__PivotForClause__Group__0 ) )
            {
            // InternalSqlParser.g:1186:1: ( ( rule__PivotForClause__Group__0 ) )
            // InternalSqlParser.g:1187:1: ( rule__PivotForClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }
            // InternalSqlParser.g:1188:1: ( rule__PivotForClause__Group__0 )
            // InternalSqlParser.g:1188:2: rule__PivotForClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotForClause"


    // $ANTLR start "entryRulePivotColumns"
    // InternalSqlParser.g:1200:1: entryRulePivotColumns : rulePivotColumns EOF ;
    public final void entryRulePivotColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:1201:1: ( rulePivotColumns EOF )
            // InternalSqlParser.g:1202:1: rulePivotColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotColumns"


    // $ANTLR start "rulePivotColumns"
    // InternalSqlParser.g:1209:1: rulePivotColumns : ( ( rule__PivotColumns__Alternatives ) ) ;
    public final void rulePivotColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1213:5: ( ( ( rule__PivotColumns__Alternatives ) ) )
            // InternalSqlParser.g:1214:1: ( ( rule__PivotColumns__Alternatives ) )
            {
            // InternalSqlParser.g:1214:1: ( ( rule__PivotColumns__Alternatives ) )
            // InternalSqlParser.g:1215:1: ( rule__PivotColumns__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:1216:1: ( rule__PivotColumns__Alternatives )
            // InternalSqlParser.g:1216:2: rule__PivotColumns__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotColumns"


    // $ANTLR start "entryRulePivotCols"
    // InternalSqlParser.g:1228:1: entryRulePivotCols : rulePivotCols EOF ;
    public final void entryRulePivotCols() throws RecognitionException {
        try {
            // InternalSqlParser.g:1229:1: ( rulePivotCols EOF )
            // InternalSqlParser.g:1230:1: rulePivotCols EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCols"


    // $ANTLR start "rulePivotCols"
    // InternalSqlParser.g:1237:1: rulePivotCols : ( ( rule__PivotCols__Group__0 ) ) ;
    public final void rulePivotCols() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1241:5: ( ( ( rule__PivotCols__Group__0 ) ) )
            // InternalSqlParser.g:1242:1: ( ( rule__PivotCols__Group__0 ) )
            {
            // InternalSqlParser.g:1242:1: ( ( rule__PivotCols__Group__0 ) )
            // InternalSqlParser.g:1243:1: ( rule__PivotCols__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup()); 
            }
            // InternalSqlParser.g:1244:1: ( rule__PivotCols__Group__0 )
            // InternalSqlParser.g:1244:2: rule__PivotCols__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCols"


    // $ANTLR start "entryRulePivotCol"
    // InternalSqlParser.g:1256:1: entryRulePivotCol : rulePivotCol EOF ;
    public final void entryRulePivotCol() throws RecognitionException {
        try {
            // InternalSqlParser.g:1257:1: ( rulePivotCol EOF )
            // InternalSqlParser.g:1258:1: rulePivotCol EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePivotCol"


    // $ANTLR start "rulePivotCol"
    // InternalSqlParser.g:1265:1: rulePivotCol : ( ( rule__PivotCol__Group__0 ) ) ;
    public final void rulePivotCol() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1269:5: ( ( ( rule__PivotCol__Group__0 ) ) )
            // InternalSqlParser.g:1270:1: ( ( rule__PivotCol__Group__0 ) )
            {
            // InternalSqlParser.g:1270:1: ( ( rule__PivotCol__Group__0 ) )
            // InternalSqlParser.g:1271:1: ( rule__PivotCol__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup()); 
            }
            // InternalSqlParser.g:1272:1: ( rule__PivotCol__Group__0 )
            // InternalSqlParser.g:1272:2: rule__PivotCol__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePivotCol"


    // $ANTLR start "entryRuleTableFull"
    // InternalSqlParser.g:1284:1: entryRuleTableFull : ruleTableFull EOF ;
    public final void entryRuleTableFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:1285:1: ( ruleTableFull EOF )
            // InternalSqlParser.g:1286:1: ruleTableFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTableFull"


    // $ANTLR start "ruleTableFull"
    // InternalSqlParser.g:1293:1: ruleTableFull : ( ( rule__TableFull__Group__0 ) ) ;
    public final void ruleTableFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1297:5: ( ( ( rule__TableFull__Group__0 ) ) )
            // InternalSqlParser.g:1298:1: ( ( rule__TableFull__Group__0 ) )
            {
            // InternalSqlParser.g:1298:1: ( ( rule__TableFull__Group__0 ) )
            // InternalSqlParser.g:1299:1: ( rule__TableFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup()); 
            }
            // InternalSqlParser.g:1300:1: ( rule__TableFull__Group__0 )
            // InternalSqlParser.g:1300:2: rule__TableFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTableFull"


    // $ANTLR start "entryRuleDbObjectNameAll"
    // InternalSqlParser.g:1312:1: entryRuleDbObjectNameAll : ruleDbObjectNameAll EOF ;
    public final void entryRuleDbObjectNameAll() throws RecognitionException {
        try {
            // InternalSqlParser.g:1313:1: ( ruleDbObjectNameAll EOF )
            // InternalSqlParser.g:1314:1: ruleDbObjectNameAll EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectNameAll"


    // $ANTLR start "ruleDbObjectNameAll"
    // InternalSqlParser.g:1321:1: ruleDbObjectNameAll : ( ( rule__DbObjectNameAll__Group__0 ) ) ;
    public final void ruleDbObjectNameAll() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1325:5: ( ( ( rule__DbObjectNameAll__Group__0 ) ) )
            // InternalSqlParser.g:1326:1: ( ( rule__DbObjectNameAll__Group__0 ) )
            {
            // InternalSqlParser.g:1326:1: ( ( rule__DbObjectNameAll__Group__0 ) )
            // InternalSqlParser.g:1327:1: ( rule__DbObjectNameAll__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }
            // InternalSqlParser.g:1328:1: ( rule__DbObjectNameAll__Group__0 )
            // InternalSqlParser.g:1328:2: rule__DbObjectNameAll__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectNameAll"


    // $ANTLR start "entryRuleDbObjectName"
    // InternalSqlParser.g:1340:1: entryRuleDbObjectName : ruleDbObjectName EOF ;
    public final void entryRuleDbObjectName() throws RecognitionException {
        try {
            // InternalSqlParser.g:1341:1: ( ruleDbObjectName EOF )
            // InternalSqlParser.g:1342:1: ruleDbObjectName EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDbObjectName"


    // $ANTLR start "ruleDbObjectName"
    // InternalSqlParser.g:1349:1: ruleDbObjectName : ( ( rule__DbObjectName__DbnameAssignment ) ) ;
    public final void ruleDbObjectName() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1353:5: ( ( ( rule__DbObjectName__DbnameAssignment ) ) )
            // InternalSqlParser.g:1354:1: ( ( rule__DbObjectName__DbnameAssignment ) )
            {
            // InternalSqlParser.g:1354:1: ( ( rule__DbObjectName__DbnameAssignment ) )
            // InternalSqlParser.g:1355:1: ( rule__DbObjectName__DbnameAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }
            // InternalSqlParser.g:1356:1: ( rule__DbObjectName__DbnameAssignment )
            // InternalSqlParser.g:1356:2: rule__DbObjectName__DbnameAssignment
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectName__DbnameAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDbObjectName"


    // $ANTLR start "entryRuleOrderByColumns"
    // InternalSqlParser.g:1368:1: entryRuleOrderByColumns : ruleOrderByColumns EOF ;
    public final void entryRuleOrderByColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:1369:1: ( ruleOrderByColumns EOF )
            // InternalSqlParser.g:1370:1: ruleOrderByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumns"


    // $ANTLR start "ruleOrderByColumns"
    // InternalSqlParser.g:1377:1: ruleOrderByColumns : ( ( rule__OrderByColumns__Group__0 ) ) ;
    public final void ruleOrderByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1381:5: ( ( ( rule__OrderByColumns__Group__0 ) ) )
            // InternalSqlParser.g:1382:1: ( ( rule__OrderByColumns__Group__0 ) )
            {
            // InternalSqlParser.g:1382:1: ( ( rule__OrderByColumns__Group__0 ) )
            // InternalSqlParser.g:1383:1: ( rule__OrderByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }
            // InternalSqlParser.g:1384:1: ( rule__OrderByColumns__Group__0 )
            // InternalSqlParser.g:1384:2: rule__OrderByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumns"


    // $ANTLR start "entryRuleOrderByColumnFull"
    // InternalSqlParser.g:1396:1: entryRuleOrderByColumnFull : ruleOrderByColumnFull EOF ;
    public final void entryRuleOrderByColumnFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:1397:1: ( ruleOrderByColumnFull EOF )
            // InternalSqlParser.g:1398:1: ruleOrderByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByColumnFull"


    // $ANTLR start "ruleOrderByColumnFull"
    // InternalSqlParser.g:1405:1: ruleOrderByColumnFull : ( ( rule__OrderByColumnFull__Group__0 ) ) ;
    public final void ruleOrderByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1409:5: ( ( ( rule__OrderByColumnFull__Group__0 ) ) )
            // InternalSqlParser.g:1410:1: ( ( rule__OrderByColumnFull__Group__0 ) )
            {
            // InternalSqlParser.g:1410:1: ( ( rule__OrderByColumnFull__Group__0 ) )
            // InternalSqlParser.g:1411:1: ( rule__OrderByColumnFull__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }
            // InternalSqlParser.g:1412:1: ( rule__OrderByColumnFull__Group__0 )
            // InternalSqlParser.g:1412:2: rule__OrderByColumnFull__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByColumnFull"


    // $ANTLR start "entryRuleGroupByColumns"
    // InternalSqlParser.g:1424:1: entryRuleGroupByColumns : ruleGroupByColumns EOF ;
    public final void entryRuleGroupByColumns() throws RecognitionException {
        try {
            // InternalSqlParser.g:1425:1: ( ruleGroupByColumns EOF )
            // InternalSqlParser.g:1426:1: ruleGroupByColumns EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumns"


    // $ANTLR start "ruleGroupByColumns"
    // InternalSqlParser.g:1433:1: ruleGroupByColumns : ( ( rule__GroupByColumns__Group__0 ) ) ;
    public final void ruleGroupByColumns() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1437:5: ( ( ( rule__GroupByColumns__Group__0 ) ) )
            // InternalSqlParser.g:1438:1: ( ( rule__GroupByColumns__Group__0 ) )
            {
            // InternalSqlParser.g:1438:1: ( ( rule__GroupByColumns__Group__0 ) )
            // InternalSqlParser.g:1439:1: ( rule__GroupByColumns__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }
            // InternalSqlParser.g:1440:1: ( rule__GroupByColumns__Group__0 )
            // InternalSqlParser.g:1440:2: rule__GroupByColumns__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumns"


    // $ANTLR start "entryRuleGroupByColumnFull"
    // InternalSqlParser.g:1452:1: entryRuleGroupByColumnFull : ruleGroupByColumnFull EOF ;
    public final void entryRuleGroupByColumnFull() throws RecognitionException {
        try {
            // InternalSqlParser.g:1453:1: ( ruleGroupByColumnFull EOF )
            // InternalSqlParser.g:1454:1: ruleGroupByColumnFull EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGroupByColumnFull"


    // $ANTLR start "ruleGroupByColumnFull"
    // InternalSqlParser.g:1461:1: ruleGroupByColumnFull : ( ( rule__GroupByColumnFull__Alternatives ) ) ;
    public final void ruleGroupByColumnFull() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1465:5: ( ( ( rule__GroupByColumnFull__Alternatives ) ) )
            // InternalSqlParser.g:1466:1: ( ( rule__GroupByColumnFull__Alternatives ) )
            {
            // InternalSqlParser.g:1466:1: ( ( rule__GroupByColumnFull__Alternatives ) )
            // InternalSqlParser.g:1467:1: ( rule__GroupByColumnFull__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:1468:1: ( rule__GroupByColumnFull__Alternatives )
            // InternalSqlParser.g:1468:2: rule__GroupByColumnFull__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumnFull__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGroupByColumnFull"


    // $ANTLR start "entryRuleFullExpression"
    // InternalSqlParser.g:1480:1: entryRuleFullExpression : ruleFullExpression EOF ;
    public final void entryRuleFullExpression() throws RecognitionException {
        try {
            // InternalSqlParser.g:1481:1: ( ruleFullExpression EOF )
            // InternalSqlParser.g:1482:1: ruleFullExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFullExpression"


    // $ANTLR start "ruleFullExpression"
    // InternalSqlParser.g:1489:1: ruleFullExpression : ( ( rule__FullExpression__Group__0 ) ) ;
    public final void ruleFullExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1493:5: ( ( ( rule__FullExpression__Group__0 ) ) )
            // InternalSqlParser.g:1494:1: ( ( rule__FullExpression__Group__0 ) )
            {
            // InternalSqlParser.g:1494:1: ( ( rule__FullExpression__Group__0 ) )
            // InternalSqlParser.g:1495:1: ( rule__FullExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup()); 
            }
            // InternalSqlParser.g:1496:1: ( rule__FullExpression__Group__0 )
            // InternalSqlParser.g:1496:2: rule__FullExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFullExpression"


    // $ANTLR start "entryRuleExpressionFragmentSecond"
    // InternalSqlParser.g:1508:1: entryRuleExpressionFragmentSecond : ruleExpressionFragmentSecond EOF ;
    public final void entryRuleExpressionFragmentSecond() throws RecognitionException {
        try {
            // InternalSqlParser.g:1509:1: ( ruleExpressionFragmentSecond EOF )
            // InternalSqlParser.g:1510:1: ruleExpressionFragmentSecond EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragmentSecond"


    // $ANTLR start "ruleExpressionFragmentSecond"
    // InternalSqlParser.g:1517:1: ruleExpressionFragmentSecond : ( ( rule__ExpressionFragmentSecond__Alternatives ) ) ;
    public final void ruleExpressionFragmentSecond() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1521:5: ( ( ( rule__ExpressionFragmentSecond__Alternatives ) ) )
            // InternalSqlParser.g:1522:1: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            {
            // InternalSqlParser.g:1522:1: ( ( rule__ExpressionFragmentSecond__Alternatives ) )
            // InternalSqlParser.g:1523:1: ( rule__ExpressionFragmentSecond__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:1524:1: ( rule__ExpressionFragmentSecond__Alternatives )
            // InternalSqlParser.g:1524:2: rule__ExpressionFragmentSecond__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragmentSecond"


    // $ANTLR start "entryRuleExpressionFragment"
    // InternalSqlParser.g:1536:1: entryRuleExpressionFragment : ruleExpressionFragment EOF ;
    public final void entryRuleExpressionFragment() throws RecognitionException {
        try {
            // InternalSqlParser.g:1537:1: ( ruleExpressionFragment EOF )
            // InternalSqlParser.g:1538:1: ruleExpressionFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionFragment"


    // $ANTLR start "ruleExpressionFragment"
    // InternalSqlParser.g:1545:1: ruleExpressionFragment : ( ( rule__ExpressionFragment__Alternatives ) ) ;
    public final void ruleExpressionFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1549:5: ( ( ( rule__ExpressionFragment__Alternatives ) ) )
            // InternalSqlParser.g:1550:1: ( ( rule__ExpressionFragment__Alternatives ) )
            {
            // InternalSqlParser.g:1550:1: ( ( rule__ExpressionFragment__Alternatives ) )
            // InternalSqlParser.g:1551:1: ( rule__ExpressionFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:1552:1: ( rule__ExpressionFragment__Alternatives )
            // InternalSqlParser.g:1552:2: rule__ExpressionFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionFragment"


    // $ANTLR start "entryRuleExpressionGroup"
    // InternalSqlParser.g:1564:1: entryRuleExpressionGroup : ruleExpressionGroup EOF ;
    public final void entryRuleExpressionGroup() throws RecognitionException {
        try {
            // InternalSqlParser.g:1565:1: ( ruleExpressionGroup EOF )
            // InternalSqlParser.g:1566:1: ruleExpressionGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionGroup"


    // $ANTLR start "ruleExpressionGroup"
    // InternalSqlParser.g:1573:1: ruleExpressionGroup : ( ( rule__ExpressionGroup__Group__0 ) ) ;
    public final void ruleExpressionGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1577:5: ( ( ( rule__ExpressionGroup__Group__0 ) ) )
            // InternalSqlParser.g:1578:1: ( ( rule__ExpressionGroup__Group__0 ) )
            {
            // InternalSqlParser.g:1578:1: ( ( rule__ExpressionGroup__Group__0 ) )
            // InternalSqlParser.g:1579:1: ( rule__ExpressionGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }
            // InternalSqlParser.g:1580:1: ( rule__ExpressionGroup__Group__0 )
            // InternalSqlParser.g:1580:2: rule__ExpressionGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionGroup"


    // $ANTLR start "entryRuleXExpression"
    // InternalSqlParser.g:1592:1: entryRuleXExpression : ruleXExpression EOF ;
    public final void entryRuleXExpression() throws RecognitionException {
        try {
            // InternalSqlParser.g:1593:1: ( ruleXExpression EOF )
            // InternalSqlParser.g:1594:1: ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalSqlParser.g:1601:1: ruleXExpression : ( ( rule__XExpression__Group__0 ) ) ;
    public final void ruleXExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1605:5: ( ( ( rule__XExpression__Group__0 ) ) )
            // InternalSqlParser.g:1606:1: ( ( rule__XExpression__Group__0 ) )
            {
            // InternalSqlParser.g:1606:1: ( ( rule__XExpression__Group__0 ) )
            // InternalSqlParser.g:1607:1: ( rule__XExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup()); 
            }
            // InternalSqlParser.g:1608:1: ( rule__XExpression__Group__0 )
            // InternalSqlParser.g:1608:2: rule__XExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXExpression_"
    // InternalSqlParser.g:1620:1: entryRuleXExpression_ : ruleXExpression_ EOF ;
    public final void entryRuleXExpression_() throws RecognitionException {
        try {
            // InternalSqlParser.g:1621:1: ( ruleXExpression_ EOF )
            // InternalSqlParser.g:1622:1: ruleXExpression_ EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Rule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpression_();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Rule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpression_"


    // $ANTLR start "ruleXExpression_"
    // InternalSqlParser.g:1629:1: ruleXExpression_ : ( ( rule__XExpression___Group__0 ) ) ;
    public final void ruleXExpression_() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1633:5: ( ( ( rule__XExpression___Group__0 ) ) )
            // InternalSqlParser.g:1634:1: ( ( rule__XExpression___Group__0 ) )
            {
            // InternalSqlParser.g:1634:1: ( ( rule__XExpression___Group__0 ) )
            // InternalSqlParser.g:1635:1: ( rule__XExpression___Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup()); 
            }
            // InternalSqlParser.g:1636:1: ( rule__XExpression___Group__0 )
            // InternalSqlParser.g:1636:2: rule__XExpression___Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpression_"


    // $ANTLR start "entryRuleXExpressionParams"
    // InternalSqlParser.g:1648:1: entryRuleXExpressionParams : ruleXExpressionParams EOF ;
    public final void entryRuleXExpressionParams() throws RecognitionException {
        try {
            // InternalSqlParser.g:1649:1: ( ruleXExpressionParams EOF )
            // InternalSqlParser.g:1650:1: ruleXExpressionParams EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXExpressionParams"


    // $ANTLR start "ruleXExpressionParams"
    // InternalSqlParser.g:1657:1: ruleXExpressionParams : ( ( rule__XExpressionParams__Group__0 ) ) ;
    public final void ruleXExpressionParams() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1661:5: ( ( ( rule__XExpressionParams__Group__0 ) ) )
            // InternalSqlParser.g:1662:1: ( ( rule__XExpressionParams__Group__0 ) )
            {
            // InternalSqlParser.g:1662:1: ( ( rule__XExpressionParams__Group__0 ) )
            // InternalSqlParser.g:1663:1: ( rule__XExpressionParams__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }
            // InternalSqlParser.g:1664:1: ( rule__XExpressionParams__Group__0 )
            // InternalSqlParser.g:1664:2: rule__XExpressionParams__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXExpressionParams"


    // $ANTLR start "entryRuleJRParameter"
    // InternalSqlParser.g:1676:1: entryRuleJRParameter : ruleJRParameter EOF ;
    public final void entryRuleJRParameter() throws RecognitionException {
        try {
            // InternalSqlParser.g:1677:1: ( ruleJRParameter EOF )
            // InternalSqlParser.g:1678:1: ruleJRParameter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJRParameter"


    // $ANTLR start "ruleJRParameter"
    // InternalSqlParser.g:1685:1: ruleJRParameter : ( ( rule__JRParameter__JrprmAssignment ) ) ;
    public final void ruleJRParameter() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1689:5: ( ( ( rule__JRParameter__JrprmAssignment ) ) )
            // InternalSqlParser.g:1690:1: ( ( rule__JRParameter__JrprmAssignment ) )
            {
            // InternalSqlParser.g:1690:1: ( ( rule__JRParameter__JrprmAssignment ) )
            // InternalSqlParser.g:1691:1: ( rule__JRParameter__JrprmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }
            // InternalSqlParser.g:1692:1: ( rule__JRParameter__JrprmAssignment )
            // InternalSqlParser.g:1692:2: rule__JRParameter__JrprmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__JRParameter__JrprmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJRParameter"


    // $ANTLR start "entryRuleExpression"
    // InternalSqlParser.g:1704:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalSqlParser.g:1705:1: ( ruleExpression EOF )
            // InternalSqlParser.g:1706:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSqlParser.g:1713:1: ruleExpression : ( ( rule__Expression__Group__0 ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1717:5: ( ( ( rule__Expression__Group__0 ) ) )
            // InternalSqlParser.g:1718:1: ( ( rule__Expression__Group__0 ) )
            {
            // InternalSqlParser.g:1718:1: ( ( rule__Expression__Group__0 ) )
            // InternalSqlParser.g:1719:1: ( rule__Expression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getGroup()); 
            }
            // InternalSqlParser.g:1720:1: ( rule__Expression__Group__0 )
            // InternalSqlParser.g:1720:2: rule__Expression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleIsNullValue"
    // InternalSqlParser.g:1732:1: entryRuleIsNullValue : ruleIsNullValue EOF ;
    public final void entryRuleIsNullValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:1733:1: ( ruleIsNullValue EOF )
            // InternalSqlParser.g:1734:1: ruleIsNullValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIsNullValue"


    // $ANTLR start "ruleIsNullValue"
    // InternalSqlParser.g:1741:1: ruleIsNullValue : ( ( rule__IsNullValue__Group__0 ) ) ;
    public final void ruleIsNullValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1745:5: ( ( ( rule__IsNullValue__Group__0 ) ) )
            // InternalSqlParser.g:1746:1: ( ( rule__IsNullValue__Group__0 ) )
            {
            // InternalSqlParser.g:1746:1: ( ( rule__IsNullValue__Group__0 ) )
            // InternalSqlParser.g:1747:1: ( rule__IsNullValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getGroup()); 
            }
            // InternalSqlParser.g:1748:1: ( rule__IsNullValue__Group__0 )
            // InternalSqlParser.g:1748:2: rule__IsNullValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIsNullValue"


    // $ANTLR start "entryRuleComparison"
    // InternalSqlParser.g:1760:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalSqlParser.g:1761:1: ( ruleComparison EOF )
            // InternalSqlParser.g:1762:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalSqlParser.g:1769:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1773:5: ( ( ( rule__Comparison__Group__0 ) ) )
            // InternalSqlParser.g:1774:1: ( ( rule__Comparison__Group__0 ) )
            {
            // InternalSqlParser.g:1774:1: ( ( rule__Comparison__Group__0 ) )
            // InternalSqlParser.g:1775:1: ( rule__Comparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getGroup()); 
            }
            // InternalSqlParser.g:1776:1: ( rule__Comparison__Group__0 )
            // InternalSqlParser.g:1776:2: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleLike"
    // InternalSqlParser.g:1788:1: entryRuleLike : ruleLike EOF ;
    public final void entryRuleLike() throws RecognitionException {
        try {
            // InternalSqlParser.g:1789:1: ( ruleLike EOF )
            // InternalSqlParser.g:1790:1: ruleLike EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLike"


    // $ANTLR start "ruleLike"
    // InternalSqlParser.g:1797:1: ruleLike : ( ( rule__Like__Group__0 ) ) ;
    public final void ruleLike() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1801:5: ( ( ( rule__Like__Group__0 ) ) )
            // InternalSqlParser.g:1802:1: ( ( rule__Like__Group__0 ) )
            {
            // InternalSqlParser.g:1802:1: ( ( rule__Like__Group__0 ) )
            // InternalSqlParser.g:1803:1: ( rule__Like__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getGroup()); 
            }
            // InternalSqlParser.g:1804:1: ( rule__Like__Group__0 )
            // InternalSqlParser.g:1804:2: rule__Like__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLike"


    // $ANTLR start "entryRuleLikeValue"
    // InternalSqlParser.g:1816:1: entryRuleLikeValue : ruleLikeValue EOF ;
    public final void entryRuleLikeValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:1817:1: ( ruleLikeValue EOF )
            // InternalSqlParser.g:1818:1: ruleLikeValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeValue"


    // $ANTLR start "ruleLikeValue"
    // InternalSqlParser.g:1825:1: ruleLikeValue : ( ( rule__LikeValue__Group__0 ) ) ;
    public final void ruleLikeValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1829:5: ( ( ( rule__LikeValue__Group__0 ) ) )
            // InternalSqlParser.g:1830:1: ( ( rule__LikeValue__Group__0 ) )
            {
            // InternalSqlParser.g:1830:1: ( ( rule__LikeValue__Group__0 ) )
            // InternalSqlParser.g:1831:1: ( rule__LikeValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getGroup()); 
            }
            // InternalSqlParser.g:1832:1: ( rule__LikeValue__Group__0 )
            // InternalSqlParser.g:1832:2: rule__LikeValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeValue"


    // $ANTLR start "entryRuleLikeOperand"
    // InternalSqlParser.g:1844:1: entryRuleLikeOperand : ruleLikeOperand EOF ;
    public final void entryRuleLikeOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:1845:1: ( ruleLikeOperand EOF )
            // InternalSqlParser.g:1846:1: ruleLikeOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLikeOperand"


    // $ANTLR start "ruleLikeOperand"
    // InternalSqlParser.g:1853:1: ruleLikeOperand : ( ( rule__LikeOperand__Alternatives ) ) ;
    public final void ruleLikeOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1857:5: ( ( ( rule__LikeOperand__Alternatives ) ) )
            // InternalSqlParser.g:1858:1: ( ( rule__LikeOperand__Alternatives ) )
            {
            // InternalSqlParser.g:1858:1: ( ( rule__LikeOperand__Alternatives ) )
            // InternalSqlParser.g:1859:1: ( rule__LikeOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:1860:1: ( rule__LikeOperand__Alternatives )
            // InternalSqlParser.g:1860:2: rule__LikeOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__LikeOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLikeOperand"


    // $ANTLR start "entryRuleBetween"
    // InternalSqlParser.g:1872:1: entryRuleBetween : ruleBetween EOF ;
    public final void entryRuleBetween() throws RecognitionException {
        try {
            // InternalSqlParser.g:1873:1: ( ruleBetween EOF )
            // InternalSqlParser.g:1874:1: ruleBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetween"


    // $ANTLR start "ruleBetween"
    // InternalSqlParser.g:1881:1: ruleBetween : ( ( rule__Between__Group__0 ) ) ;
    public final void ruleBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1885:5: ( ( ( rule__Between__Group__0 ) ) )
            // InternalSqlParser.g:1886:1: ( ( rule__Between__Group__0 ) )
            {
            // InternalSqlParser.g:1886:1: ( ( rule__Between__Group__0 ) )
            // InternalSqlParser.g:1887:1: ( rule__Between__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getGroup()); 
            }
            // InternalSqlParser.g:1888:1: ( rule__Between__Group__0 )
            // InternalSqlParser.g:1888:2: rule__Between__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetween"


    // $ANTLR start "entryRuleBetweenValue"
    // InternalSqlParser.g:1900:1: entryRuleBetweenValue : ruleBetweenValue EOF ;
    public final void entryRuleBetweenValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:1901:1: ( ruleBetweenValue EOF )
            // InternalSqlParser.g:1902:1: ruleBetweenValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBetweenValue"


    // $ANTLR start "ruleBetweenValue"
    // InternalSqlParser.g:1909:1: ruleBetweenValue : ( ( rule__BetweenValue__Group__0 ) ) ;
    public final void ruleBetweenValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1913:5: ( ( ( rule__BetweenValue__Group__0 ) ) )
            // InternalSqlParser.g:1914:1: ( ( rule__BetweenValue__Group__0 ) )
            {
            // InternalSqlParser.g:1914:1: ( ( rule__BetweenValue__Group__0 ) )
            // InternalSqlParser.g:1915:1: ( rule__BetweenValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getGroup()); 
            }
            // InternalSqlParser.g:1916:1: ( rule__BetweenValue__Group__0 )
            // InternalSqlParser.g:1916:2: rule__BetweenValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBetweenValue"


    // $ANTLR start "entryRuleInOperator"
    // InternalSqlParser.g:1928:1: entryRuleInOperator : ruleInOperator EOF ;
    public final void entryRuleInOperator() throws RecognitionException {
        try {
            // InternalSqlParser.g:1929:1: ( ruleInOperator EOF )
            // InternalSqlParser.g:1930:1: ruleInOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInOperator"


    // $ANTLR start "ruleInOperator"
    // InternalSqlParser.g:1937:1: ruleInOperator : ( ( rule__InOperator__Group__0 ) ) ;
    public final void ruleInOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1941:5: ( ( ( rule__InOperator__Group__0 ) ) )
            // InternalSqlParser.g:1942:1: ( ( rule__InOperator__Group__0 ) )
            {
            // InternalSqlParser.g:1942:1: ( ( rule__InOperator__Group__0 ) )
            // InternalSqlParser.g:1943:1: ( rule__InOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getGroup()); 
            }
            // InternalSqlParser.g:1944:1: ( rule__InOperator__Group__0 )
            // InternalSqlParser.g:1944:2: rule__InOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInOperator"


    // $ANTLR start "entryRuleInValue"
    // InternalSqlParser.g:1956:1: entryRuleInValue : ruleInValue EOF ;
    public final void entryRuleInValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:1957:1: ( ruleInValue EOF )
            // InternalSqlParser.g:1958:1: ruleInValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInValue"


    // $ANTLR start "ruleInValue"
    // InternalSqlParser.g:1965:1: ruleInValue : ( ( rule__InValue__Group__0 ) ) ;
    public final void ruleInValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1969:5: ( ( ( rule__InValue__Group__0 ) ) )
            // InternalSqlParser.g:1970:1: ( ( rule__InValue__Group__0 ) )
            {
            // InternalSqlParser.g:1970:1: ( ( rule__InValue__Group__0 ) )
            // InternalSqlParser.g:1971:1: ( rule__InValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getGroup()); 
            }
            // InternalSqlParser.g:1972:1: ( rule__InValue__Group__0 )
            // InternalSqlParser.g:1972:2: rule__InValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInValue"


    // $ANTLR start "entryRuleExistsOperator"
    // InternalSqlParser.g:1984:1: entryRuleExistsOperator : ruleExistsOperator EOF ;
    public final void entryRuleExistsOperator() throws RecognitionException {
        try {
            // InternalSqlParser.g:1985:1: ( ruleExistsOperator EOF )
            // InternalSqlParser.g:1986:1: ruleExistsOperator EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsOperator"


    // $ANTLR start "ruleExistsOperator"
    // InternalSqlParser.g:1993:1: ruleExistsOperator : ( ( rule__ExistsOperator__Group__0 ) ) ;
    public final void ruleExistsOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:1997:5: ( ( ( rule__ExistsOperator__Group__0 ) ) )
            // InternalSqlParser.g:1998:1: ( ( rule__ExistsOperator__Group__0 ) )
            {
            // InternalSqlParser.g:1998:1: ( ( rule__ExistsOperator__Group__0 ) )
            // InternalSqlParser.g:1999:1: ( rule__ExistsOperator__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }
            // InternalSqlParser.g:2000:1: ( rule__ExistsOperator__Group__0 )
            // InternalSqlParser.g:2000:2: rule__ExistsOperator__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsOperator"


    // $ANTLR start "entryRuleExistsValue"
    // InternalSqlParser.g:2012:1: entryRuleExistsValue : ruleExistsValue EOF ;
    public final void entryRuleExistsValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:2013:1: ( ruleExistsValue EOF )
            // InternalSqlParser.g:2014:1: ruleExistsValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExistsValue"


    // $ANTLR start "ruleExistsValue"
    // InternalSqlParser.g:2021:1: ruleExistsValue : ( ( rule__ExistsValue__Group__0 ) ) ;
    public final void ruleExistsValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2025:5: ( ( ( rule__ExistsValue__Group__0 ) ) )
            // InternalSqlParser.g:2026:1: ( ( rule__ExistsValue__Group__0 ) )
            {
            // InternalSqlParser.g:2026:1: ( ( rule__ExistsValue__Group__0 ) )
            // InternalSqlParser.g:2027:1: ( rule__ExistsValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getGroup()); 
            }
            // InternalSqlParser.g:2028:1: ( rule__ExistsValue__Group__0 )
            // InternalSqlParser.g:2028:2: rule__ExistsValue__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExistsValue"


    // $ANTLR start "entryRuleOperandListGroup"
    // InternalSqlParser.g:2040:1: entryRuleOperandListGroup : ruleOperandListGroup EOF ;
    public final void entryRuleOperandListGroup() throws RecognitionException {
        try {
            // InternalSqlParser.g:2041:1: ( ruleOperandListGroup EOF )
            // InternalSqlParser.g:2042:1: ruleOperandListGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandListGroup"


    // $ANTLR start "ruleOperandListGroup"
    // InternalSqlParser.g:2049:1: ruleOperandListGroup : ( ( rule__OperandListGroup__Group__0 ) ) ;
    public final void ruleOperandListGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2053:5: ( ( ( rule__OperandListGroup__Group__0 ) ) )
            // InternalSqlParser.g:2054:1: ( ( rule__OperandListGroup__Group__0 ) )
            {
            // InternalSqlParser.g:2054:1: ( ( rule__OperandListGroup__Group__0 ) )
            // InternalSqlParser.g:2055:1: ( rule__OperandListGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }
            // InternalSqlParser.g:2056:1: ( rule__OperandListGroup__Group__0 )
            // InternalSqlParser.g:2056:2: rule__OperandListGroup__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandListGroup"


    // $ANTLR start "entryRuleOperandList"
    // InternalSqlParser.g:2068:1: entryRuleOperandList : ruleOperandList EOF ;
    public final void entryRuleOperandList() throws RecognitionException {
        try {
            // InternalSqlParser.g:2069:1: ( ruleOperandList EOF )
            // InternalSqlParser.g:2070:1: ruleOperandList EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandList"


    // $ANTLR start "ruleOperandList"
    // InternalSqlParser.g:2077:1: ruleOperandList : ( ( rule__OperandList__Group__0 ) ) ;
    public final void ruleOperandList() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2081:5: ( ( ( rule__OperandList__Group__0 ) ) )
            // InternalSqlParser.g:2082:1: ( ( rule__OperandList__Group__0 ) )
            {
            // InternalSqlParser.g:2082:1: ( ( rule__OperandList__Group__0 ) )
            // InternalSqlParser.g:2083:1: ( rule__OperandList__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup()); 
            }
            // InternalSqlParser.g:2084:1: ( rule__OperandList__Group__0 )
            // InternalSqlParser.g:2084:2: rule__OperandList__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandList"


    // $ANTLR start "entryRuleOperandGroup"
    // InternalSqlParser.g:2096:1: entryRuleOperandGroup : ruleOperandGroup EOF ;
    public final void entryRuleOperandGroup() throws RecognitionException {
        try {
            // InternalSqlParser.g:2097:1: ( ruleOperandGroup EOF )
            // InternalSqlParser.g:2098:1: ruleOperandGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandGroup"


    // $ANTLR start "ruleOperandGroup"
    // InternalSqlParser.g:2105:1: ruleOperandGroup : ( ( rule__OperandGroup__Alternatives ) ) ;
    public final void ruleOperandGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2109:5: ( ( ( rule__OperandGroup__Alternatives ) ) )
            // InternalSqlParser.g:2110:1: ( ( rule__OperandGroup__Alternatives ) )
            {
            // InternalSqlParser.g:2110:1: ( ( rule__OperandGroup__Alternatives ) )
            // InternalSqlParser.g:2111:1: ( rule__OperandGroup__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:2112:1: ( rule__OperandGroup__Alternatives )
            // InternalSqlParser.g:2112:2: rule__OperandGroup__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandGroup"


    // $ANTLR start "entryRuleOperand"
    // InternalSqlParser.g:2124:1: entryRuleOperand : ruleOperand EOF ;
    public final void entryRuleOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2125:1: ( ruleOperand EOF )
            // InternalSqlParser.g:2126:1: ruleOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperand"


    // $ANTLR start "ruleOperand"
    // InternalSqlParser.g:2133:1: ruleOperand : ( ( rule__Operand__Group__0 ) ) ;
    public final void ruleOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2137:5: ( ( ( rule__Operand__Group__0 ) ) )
            // InternalSqlParser.g:2138:1: ( ( rule__Operand__Group__0 ) )
            {
            // InternalSqlParser.g:2138:1: ( ( rule__Operand__Group__0 ) )
            // InternalSqlParser.g:2139:1: ( rule__Operand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup()); 
            }
            // InternalSqlParser.g:2140:1: ( rule__Operand__Group__0 )
            // InternalSqlParser.g:2140:2: rule__Operand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperand"


    // $ANTLR start "entryRuleOperandFragment"
    // InternalSqlParser.g:2152:1: entryRuleOperandFragment : ruleOperandFragment EOF ;
    public final void entryRuleOperandFragment() throws RecognitionException {
        try {
            // InternalSqlParser.g:2153:1: ( ruleOperandFragment EOF )
            // InternalSqlParser.g:2154:1: ruleOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFragment"


    // $ANTLR start "ruleOperandFragment"
    // InternalSqlParser.g:2161:1: ruleOperandFragment : ( ( rule__OperandFragment__Alternatives ) ) ;
    public final void ruleOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2165:5: ( ( ( rule__OperandFragment__Alternatives ) ) )
            // InternalSqlParser.g:2166:1: ( ( rule__OperandFragment__Alternatives ) )
            {
            // InternalSqlParser.g:2166:1: ( ( rule__OperandFragment__Alternatives ) )
            // InternalSqlParser.g:2167:1: ( rule__OperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:2168:1: ( rule__OperandFragment__Alternatives )
            // InternalSqlParser.g:2168:2: rule__OperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__OperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFragment"


    // $ANTLR start "entryRuleOperandFunction"
    // InternalSqlParser.g:2180:1: entryRuleOperandFunction : ruleOperandFunction EOF ;
    public final void entryRuleOperandFunction() throws RecognitionException {
        try {
            // InternalSqlParser.g:2181:1: ( ruleOperandFunction EOF )
            // InternalSqlParser.g:2182:1: ruleOperandFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOperandFunction"


    // $ANTLR start "ruleOperandFunction"
    // InternalSqlParser.g:2189:1: ruleOperandFunction : ( ( rule__OperandFunction__Group__0 ) ) ;
    public final void ruleOperandFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2193:5: ( ( ( rule__OperandFunction__Group__0 ) ) )
            // InternalSqlParser.g:2194:1: ( ( rule__OperandFunction__Group__0 ) )
            {
            // InternalSqlParser.g:2194:1: ( ( rule__OperandFunction__Group__0 ) )
            // InternalSqlParser.g:2195:1: ( rule__OperandFunction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }
            // InternalSqlParser.g:2196:1: ( rule__OperandFunction__Group__0 )
            // InternalSqlParser.g:2196:2: rule__OperandFunction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOperandFunction"


    // $ANTLR start "entryRuleFunctionExtract"
    // InternalSqlParser.g:2208:1: entryRuleFunctionExtract : ruleFunctionExtract EOF ;
    public final void entryRuleFunctionExtract() throws RecognitionException {
        try {
            // InternalSqlParser.g:2209:1: ( ruleFunctionExtract EOF )
            // InternalSqlParser.g:2210:1: ruleFunctionExtract EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionExtract"


    // $ANTLR start "ruleFunctionExtract"
    // InternalSqlParser.g:2217:1: ruleFunctionExtract : ( ( rule__FunctionExtract__Group__0 ) ) ;
    public final void ruleFunctionExtract() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2221:5: ( ( ( rule__FunctionExtract__Group__0 ) ) )
            // InternalSqlParser.g:2222:1: ( ( rule__FunctionExtract__Group__0 ) )
            {
            // InternalSqlParser.g:2222:1: ( ( rule__FunctionExtract__Group__0 ) )
            // InternalSqlParser.g:2223:1: ( rule__FunctionExtract__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }
            // InternalSqlParser.g:2224:1: ( rule__FunctionExtract__Group__0 )
            // InternalSqlParser.g:2224:2: rule__FunctionExtract__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionExtract"


    // $ANTLR start "entryRuleFunctionAnalytical"
    // InternalSqlParser.g:2236:1: entryRuleFunctionAnalytical : ruleFunctionAnalytical EOF ;
    public final void entryRuleFunctionAnalytical() throws RecognitionException {
        try {
            // InternalSqlParser.g:2237:1: ( ruleFunctionAnalytical EOF )
            // InternalSqlParser.g:2238:1: ruleFunctionAnalytical EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionAnalytical"


    // $ANTLR start "ruleFunctionAnalytical"
    // InternalSqlParser.g:2245:1: ruleFunctionAnalytical : ( ( rule__FunctionAnalytical__Group__0 ) ) ;
    public final void ruleFunctionAnalytical() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2249:5: ( ( ( rule__FunctionAnalytical__Group__0 ) ) )
            // InternalSqlParser.g:2250:1: ( ( rule__FunctionAnalytical__Group__0 ) )
            {
            // InternalSqlParser.g:2250:1: ( ( rule__FunctionAnalytical__Group__0 ) )
            // InternalSqlParser.g:2251:1: ( rule__FunctionAnalytical__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }
            // InternalSqlParser.g:2252:1: ( rule__FunctionAnalytical__Group__0 )
            // InternalSqlParser.g:2252:2: rule__FunctionAnalytical__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionAnalytical"


    // $ANTLR start "entryRuleAnalyticClause"
    // InternalSqlParser.g:2264:1: entryRuleAnalyticClause : ruleAnalyticClause EOF ;
    public final void entryRuleAnalyticClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:2265:1: ( ruleAnalyticClause EOF )
            // InternalSqlParser.g:2266:1: ruleAnalyticClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticClause"


    // $ANTLR start "ruleAnalyticClause"
    // InternalSqlParser.g:2273:1: ruleAnalyticClause : ( ( rule__AnalyticClause__Group__0 ) ) ;
    public final void ruleAnalyticClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2277:5: ( ( ( rule__AnalyticClause__Group__0 ) ) )
            // InternalSqlParser.g:2278:1: ( ( rule__AnalyticClause__Group__0 ) )
            {
            // InternalSqlParser.g:2278:1: ( ( rule__AnalyticClause__Group__0 ) )
            // InternalSqlParser.g:2279:1: ( rule__AnalyticClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }
            // InternalSqlParser.g:2280:1: ( rule__AnalyticClause__Group__0 )
            // InternalSqlParser.g:2280:2: rule__AnalyticClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticClause"


    // $ANTLR start "entryRuleWindowingClause"
    // InternalSqlParser.g:2292:1: entryRuleWindowingClause : ruleWindowingClause EOF ;
    public final void entryRuleWindowingClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:2293:1: ( ruleWindowingClause EOF )
            // InternalSqlParser.g:2294:1: ruleWindowingClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClause"


    // $ANTLR start "ruleWindowingClause"
    // InternalSqlParser.g:2301:1: ruleWindowingClause : ( ( rule__WindowingClause__Group__0 ) ) ;
    public final void ruleWindowingClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2305:5: ( ( ( rule__WindowingClause__Group__0 ) ) )
            // InternalSqlParser.g:2306:1: ( ( rule__WindowingClause__Group__0 ) )
            {
            // InternalSqlParser.g:2306:1: ( ( rule__WindowingClause__Group__0 ) )
            // InternalSqlParser.g:2307:1: ( rule__WindowingClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }
            // InternalSqlParser.g:2308:1: ( rule__WindowingClause__Group__0 )
            // InternalSqlParser.g:2308:2: rule__WindowingClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClause"


    // $ANTLR start "entryRuleWindowingClauseBetween"
    // InternalSqlParser.g:2320:1: entryRuleWindowingClauseBetween : ruleWindowingClauseBetween EOF ;
    public final void entryRuleWindowingClauseBetween() throws RecognitionException {
        try {
            // InternalSqlParser.g:2321:1: ( ruleWindowingClauseBetween EOF )
            // InternalSqlParser.g:2322:1: ruleWindowingClauseBetween EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseBetween"


    // $ANTLR start "ruleWindowingClauseBetween"
    // InternalSqlParser.g:2329:1: ruleWindowingClauseBetween : ( ( rule__WindowingClauseBetween__Group__0 ) ) ;
    public final void ruleWindowingClauseBetween() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2333:5: ( ( ( rule__WindowingClauseBetween__Group__0 ) ) )
            // InternalSqlParser.g:2334:1: ( ( rule__WindowingClauseBetween__Group__0 ) )
            {
            // InternalSqlParser.g:2334:1: ( ( rule__WindowingClauseBetween__Group__0 ) )
            // InternalSqlParser.g:2335:1: ( rule__WindowingClauseBetween__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }
            // InternalSqlParser.g:2336:1: ( rule__WindowingClauseBetween__Group__0 )
            // InternalSqlParser.g:2336:2: rule__WindowingClauseBetween__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseBetween"


    // $ANTLR start "entryRuleWindowingClauseOperandFollowing"
    // InternalSqlParser.g:2348:1: entryRuleWindowingClauseOperandFollowing : ruleWindowingClauseOperandFollowing EOF ;
    public final void entryRuleWindowingClauseOperandFollowing() throws RecognitionException {
        try {
            // InternalSqlParser.g:2349:1: ( ruleWindowingClauseOperandFollowing EOF )
            // InternalSqlParser.g:2350:1: ruleWindowingClauseOperandFollowing EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandFollowing"


    // $ANTLR start "ruleWindowingClauseOperandFollowing"
    // InternalSqlParser.g:2357:1: ruleWindowingClauseOperandFollowing : ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandFollowing() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2361:5: ( ( ( rule__WindowingClauseOperandFollowing__Group__0 ) ) )
            // InternalSqlParser.g:2362:1: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            {
            // InternalSqlParser.g:2362:1: ( ( rule__WindowingClauseOperandFollowing__Group__0 ) )
            // InternalSqlParser.g:2363:1: ( rule__WindowingClauseOperandFollowing__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }
            // InternalSqlParser.g:2364:1: ( rule__WindowingClauseOperandFollowing__Group__0 )
            // InternalSqlParser.g:2364:2: rule__WindowingClauseOperandFollowing__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandFollowing"


    // $ANTLR start "entryRuleWindowingClauseOperandPreceding"
    // InternalSqlParser.g:2376:1: entryRuleWindowingClauseOperandPreceding : ruleWindowingClauseOperandPreceding EOF ;
    public final void entryRuleWindowingClauseOperandPreceding() throws RecognitionException {
        try {
            // InternalSqlParser.g:2377:1: ( ruleWindowingClauseOperandPreceding EOF )
            // InternalSqlParser.g:2378:1: ruleWindowingClauseOperandPreceding EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWindowingClauseOperandPreceding"


    // $ANTLR start "ruleWindowingClauseOperandPreceding"
    // InternalSqlParser.g:2385:1: ruleWindowingClauseOperandPreceding : ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) ;
    public final void ruleWindowingClauseOperandPreceding() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2389:5: ( ( ( rule__WindowingClauseOperandPreceding__Group__0 ) ) )
            // InternalSqlParser.g:2390:1: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            {
            // InternalSqlParser.g:2390:1: ( ( rule__WindowingClauseOperandPreceding__Group__0 ) )
            // InternalSqlParser.g:2391:1: ( rule__WindowingClauseOperandPreceding__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }
            // InternalSqlParser.g:2392:1: ( rule__WindowingClauseOperandPreceding__Group__0 )
            // InternalSqlParser.g:2392:2: rule__WindowingClauseOperandPreceding__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWindowingClauseOperandPreceding"


    // $ANTLR start "entryRuleOrderByClause"
    // InternalSqlParser.g:2404:1: entryRuleOrderByClause : ruleOrderByClause EOF ;
    public final void entryRuleOrderByClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:2405:1: ( ruleOrderByClause EOF )
            // InternalSqlParser.g:2406:1: ruleOrderByClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClause"


    // $ANTLR start "ruleOrderByClause"
    // InternalSqlParser.g:2413:1: ruleOrderByClause : ( ( rule__OrderByClause__Group__0 ) ) ;
    public final void ruleOrderByClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2417:5: ( ( ( rule__OrderByClause__Group__0 ) ) )
            // InternalSqlParser.g:2418:1: ( ( rule__OrderByClause__Group__0 ) )
            {
            // InternalSqlParser.g:2418:1: ( ( rule__OrderByClause__Group__0 ) )
            // InternalSqlParser.g:2419:1: ( rule__OrderByClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }
            // InternalSqlParser.g:2420:1: ( rule__OrderByClause__Group__0 )
            // InternalSqlParser.g:2420:2: rule__OrderByClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClause"


    // $ANTLR start "entryRuleOrderByClauseArgs"
    // InternalSqlParser.g:2432:1: entryRuleOrderByClauseArgs : ruleOrderByClauseArgs EOF ;
    public final void entryRuleOrderByClauseArgs() throws RecognitionException {
        try {
            // InternalSqlParser.g:2433:1: ( ruleOrderByClauseArgs EOF )
            // InternalSqlParser.g:2434:1: ruleOrderByClauseArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArgs"


    // $ANTLR start "ruleOrderByClauseArgs"
    // InternalSqlParser.g:2441:1: ruleOrderByClauseArgs : ( ( rule__OrderByClauseArgs__Group__0 ) ) ;
    public final void ruleOrderByClauseArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2445:5: ( ( ( rule__OrderByClauseArgs__Group__0 ) ) )
            // InternalSqlParser.g:2446:1: ( ( rule__OrderByClauseArgs__Group__0 ) )
            {
            // InternalSqlParser.g:2446:1: ( ( rule__OrderByClauseArgs__Group__0 ) )
            // InternalSqlParser.g:2447:1: ( rule__OrderByClauseArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }
            // InternalSqlParser.g:2448:1: ( rule__OrderByClauseArgs__Group__0 )
            // InternalSqlParser.g:2448:2: rule__OrderByClauseArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArgs"


    // $ANTLR start "entryRuleOrderByClauseArg"
    // InternalSqlParser.g:2460:1: entryRuleOrderByClauseArg : ruleOrderByClauseArg EOF ;
    public final void entryRuleOrderByClauseArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:2461:1: ( ruleOrderByClauseArg EOF )
            // InternalSqlParser.g:2462:1: ruleOrderByClauseArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrderByClauseArg"


    // $ANTLR start "ruleOrderByClauseArg"
    // InternalSqlParser.g:2469:1: ruleOrderByClauseArg : ( ( rule__OrderByClauseArg__Group__0 ) ) ;
    public final void ruleOrderByClauseArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2473:5: ( ( ( rule__OrderByClauseArg__Group__0 ) ) )
            // InternalSqlParser.g:2474:1: ( ( rule__OrderByClauseArg__Group__0 ) )
            {
            // InternalSqlParser.g:2474:1: ( ( rule__OrderByClauseArg__Group__0 ) )
            // InternalSqlParser.g:2475:1: ( rule__OrderByClauseArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }
            // InternalSqlParser.g:2476:1: ( rule__OrderByClauseArg__Group__0 )
            // InternalSqlParser.g:2476:2: rule__OrderByClauseArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrderByClauseArg"


    // $ANTLR start "entryRuleQueryPartitionClause"
    // InternalSqlParser.g:2488:1: entryRuleQueryPartitionClause : ruleQueryPartitionClause EOF ;
    public final void entryRuleQueryPartitionClause() throws RecognitionException {
        try {
            // InternalSqlParser.g:2489:1: ( ruleQueryPartitionClause EOF )
            // InternalSqlParser.g:2490:1: ruleQueryPartitionClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleQueryPartitionClause"


    // $ANTLR start "ruleQueryPartitionClause"
    // InternalSqlParser.g:2497:1: ruleQueryPartitionClause : ( ( rule__QueryPartitionClause__Group__0 ) ) ;
    public final void ruleQueryPartitionClause() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2501:5: ( ( ( rule__QueryPartitionClause__Group__0 ) ) )
            // InternalSqlParser.g:2502:1: ( ( rule__QueryPartitionClause__Group__0 ) )
            {
            // InternalSqlParser.g:2502:1: ( ( rule__QueryPartitionClause__Group__0 ) )
            // InternalSqlParser.g:2503:1: ( rule__QueryPartitionClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }
            // InternalSqlParser.g:2504:1: ( rule__QueryPartitionClause__Group__0 )
            // InternalSqlParser.g:2504:2: rule__QueryPartitionClause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleQueryPartitionClause"


    // $ANTLR start "entryRuleAnalyticExprArgs"
    // InternalSqlParser.g:2516:1: entryRuleAnalyticExprArgs : ruleAnalyticExprArgs EOF ;
    public final void entryRuleAnalyticExprArgs() throws RecognitionException {
        try {
            // InternalSqlParser.g:2517:1: ( ruleAnalyticExprArgs EOF )
            // InternalSqlParser.g:2518:1: ruleAnalyticExprArgs EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArgs"


    // $ANTLR start "ruleAnalyticExprArgs"
    // InternalSqlParser.g:2525:1: ruleAnalyticExprArgs : ( ( rule__AnalyticExprArgs__Group__0 ) ) ;
    public final void ruleAnalyticExprArgs() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2529:5: ( ( ( rule__AnalyticExprArgs__Group__0 ) ) )
            // InternalSqlParser.g:2530:1: ( ( rule__AnalyticExprArgs__Group__0 ) )
            {
            // InternalSqlParser.g:2530:1: ( ( rule__AnalyticExprArgs__Group__0 ) )
            // InternalSqlParser.g:2531:1: ( rule__AnalyticExprArgs__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }
            // InternalSqlParser.g:2532:1: ( rule__AnalyticExprArgs__Group__0 )
            // InternalSqlParser.g:2532:2: rule__AnalyticExprArgs__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArgs"


    // $ANTLR start "entryRuleAnalyticExprArg"
    // InternalSqlParser.g:2544:1: entryRuleAnalyticExprArg : ruleAnalyticExprArg EOF ;
    public final void entryRuleAnalyticExprArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:2545:1: ( ruleAnalyticExprArg EOF )
            // InternalSqlParser.g:2546:1: ruleAnalyticExprArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnalyticExprArg"


    // $ANTLR start "ruleAnalyticExprArg"
    // InternalSqlParser.g:2553:1: ruleAnalyticExprArg : ( ( rule__AnalyticExprArg__Group__0 ) ) ;
    public final void ruleAnalyticExprArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2557:5: ( ( ( rule__AnalyticExprArg__Group__0 ) ) )
            // InternalSqlParser.g:2558:1: ( ( rule__AnalyticExprArg__Group__0 ) )
            {
            // InternalSqlParser.g:2558:1: ( ( rule__AnalyticExprArg__Group__0 ) )
            // InternalSqlParser.g:2559:1: ( rule__AnalyticExprArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }
            // InternalSqlParser.g:2560:1: ( rule__AnalyticExprArg__Group__0 )
            // InternalSqlParser.g:2560:2: rule__AnalyticExprArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnalyticExprArg"


    // $ANTLR start "entryRuleOpFunctionArg"
    // InternalSqlParser.g:2572:1: entryRuleOpFunctionArg : ruleOpFunctionArg EOF ;
    public final void entryRuleOpFunctionArg() throws RecognitionException {
        try {
            // InternalSqlParser.g:2573:1: ( ruleOpFunctionArg EOF )
            // InternalSqlParser.g:2574:1: ruleOpFunctionArg EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArg"


    // $ANTLR start "ruleOpFunctionArg"
    // InternalSqlParser.g:2581:1: ruleOpFunctionArg : ( ( rule__OpFunctionArg__Group__0 ) ) ;
    public final void ruleOpFunctionArg() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2585:5: ( ( ( rule__OpFunctionArg__Group__0 ) ) )
            // InternalSqlParser.g:2586:1: ( ( rule__OpFunctionArg__Group__0 ) )
            {
            // InternalSqlParser.g:2586:1: ( ( rule__OpFunctionArg__Group__0 ) )
            // InternalSqlParser.g:2587:1: ( rule__OpFunctionArg__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }
            // InternalSqlParser.g:2588:1: ( rule__OpFunctionArg__Group__0 )
            // InternalSqlParser.g:2588:2: rule__OpFunctionArg__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArg"


    // $ANTLR start "entryRuleOpFunctionArgOperand"
    // InternalSqlParser.g:2600:1: entryRuleOpFunctionArgOperand : ruleOpFunctionArgOperand EOF ;
    public final void entryRuleOpFunctionArgOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2601:1: ( ruleOpFunctionArgOperand EOF )
            // InternalSqlParser.g:2602:1: ruleOpFunctionArgOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgOperand"


    // $ANTLR start "ruleOpFunctionArgOperand"
    // InternalSqlParser.g:2609:1: ruleOpFunctionArgOperand : ( ( rule__OpFunctionArgOperand__OpAssignment ) ) ;
    public final void ruleOpFunctionArgOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2613:5: ( ( ( rule__OpFunctionArgOperand__OpAssignment ) ) )
            // InternalSqlParser.g:2614:1: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            {
            // InternalSqlParser.g:2614:1: ( ( rule__OpFunctionArgOperand__OpAssignment ) )
            // InternalSqlParser.g:2615:1: ( rule__OpFunctionArgOperand__OpAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }
            // InternalSqlParser.g:2616:1: ( rule__OpFunctionArgOperand__OpAssignment )
            // InternalSqlParser.g:2616:2: rule__OpFunctionArgOperand__OpAssignment
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgOperand"


    // $ANTLR start "entryRuleOpFunctionCast"
    // InternalSqlParser.g:2628:1: entryRuleOpFunctionCast : ruleOpFunctionCast EOF ;
    public final void entryRuleOpFunctionCast() throws RecognitionException {
        try {
            // InternalSqlParser.g:2629:1: ( ruleOpFunctionCast EOF )
            // InternalSqlParser.g:2630:1: ruleOpFunctionCast EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionCast"


    // $ANTLR start "ruleOpFunctionCast"
    // InternalSqlParser.g:2637:1: ruleOpFunctionCast : ( ( rule__OpFunctionCast__Group__0 ) ) ;
    public final void ruleOpFunctionCast() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2641:5: ( ( ( rule__OpFunctionCast__Group__0 ) ) )
            // InternalSqlParser.g:2642:1: ( ( rule__OpFunctionCast__Group__0 ) )
            {
            // InternalSqlParser.g:2642:1: ( ( rule__OpFunctionCast__Group__0 ) )
            // InternalSqlParser.g:2643:1: ( rule__OpFunctionCast__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }
            // InternalSqlParser.g:2644:1: ( rule__OpFunctionCast__Group__0 )
            // InternalSqlParser.g:2644:2: rule__OpFunctionCast__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionCast"


    // $ANTLR start "entryRuleOpFunctionArgAgregate"
    // InternalSqlParser.g:2656:1: entryRuleOpFunctionArgAgregate : ruleOpFunctionArgAgregate EOF ;
    public final void entryRuleOpFunctionArgAgregate() throws RecognitionException {
        try {
            // InternalSqlParser.g:2657:1: ( ruleOpFunctionArgAgregate EOF )
            // InternalSqlParser.g:2658:1: ruleOpFunctionArgAgregate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOpFunctionArgAgregate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOpFunctionArgAgregate"


    // $ANTLR start "ruleOpFunctionArgAgregate"
    // InternalSqlParser.g:2665:1: ruleOpFunctionArgAgregate : ( ( rule__OpFunctionArgAgregate__Group__0 ) ) ;
    public final void ruleOpFunctionArgAgregate() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2669:5: ( ( ( rule__OpFunctionArgAgregate__Group__0 ) ) )
            // InternalSqlParser.g:2670:1: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            {
            // InternalSqlParser.g:2670:1: ( ( rule__OpFunctionArgAgregate__Group__0 ) )
            // InternalSqlParser.g:2671:1: ( rule__OpFunctionArgAgregate__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }
            // InternalSqlParser.g:2672:1: ( rule__OpFunctionArgAgregate__Group__0 )
            // InternalSqlParser.g:2672:2: rule__OpFunctionArgAgregate__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOpFunctionArgAgregate"


    // $ANTLR start "entryRuleXOperandFragment"
    // InternalSqlParser.g:2684:1: entryRuleXOperandFragment : ruleXOperandFragment EOF ;
    public final void entryRuleXOperandFragment() throws RecognitionException {
        try {
            // InternalSqlParser.g:2685:1: ( ruleXOperandFragment EOF )
            // InternalSqlParser.g:2686:1: ruleXOperandFragment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXOperandFragment"


    // $ANTLR start "ruleXOperandFragment"
    // InternalSqlParser.g:2693:1: ruleXOperandFragment : ( ( rule__XOperandFragment__Alternatives ) ) ;
    public final void ruleXOperandFragment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2697:5: ( ( ( rule__XOperandFragment__Alternatives ) ) )
            // InternalSqlParser.g:2698:1: ( ( rule__XOperandFragment__Alternatives ) )
            {
            // InternalSqlParser.g:2698:1: ( ( rule__XOperandFragment__Alternatives ) )
            // InternalSqlParser.g:2699:1: ( rule__XOperandFragment__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:2700:1: ( rule__XOperandFragment__Alternatives )
            // InternalSqlParser.g:2700:2: rule__XOperandFragment__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XOperandFragment__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXOperandFragment"


    // $ANTLR start "entryRuleParameterOperand"
    // InternalSqlParser.g:2712:1: entryRuleParameterOperand : ruleParameterOperand EOF ;
    public final void entryRuleParameterOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2713:1: ( ruleParameterOperand EOF )
            // InternalSqlParser.g:2714:1: ruleParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParameterOperand"


    // $ANTLR start "ruleParameterOperand"
    // InternalSqlParser.g:2721:1: ruleParameterOperand : ( ( rule__ParameterOperand__PrmAssignment ) ) ;
    public final void ruleParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2725:5: ( ( ( rule__ParameterOperand__PrmAssignment ) ) )
            // InternalSqlParser.g:2726:1: ( ( rule__ParameterOperand__PrmAssignment ) )
            {
            // InternalSqlParser.g:2726:1: ( ( rule__ParameterOperand__PrmAssignment ) )
            // InternalSqlParser.g:2727:1: ( rule__ParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSqlParser.g:2728:1: ( rule__ParameterOperand__PrmAssignment )
            // InternalSqlParser.g:2728:2: rule__ParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParameterOperand"


    // $ANTLR start "entryRuleExclamationParameterOperand"
    // InternalSqlParser.g:2740:1: entryRuleExclamationParameterOperand : ruleExclamationParameterOperand EOF ;
    public final void entryRuleExclamationParameterOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2741:1: ( ruleExclamationParameterOperand EOF )
            // InternalSqlParser.g:2742:1: ruleExclamationParameterOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclamationParameterOperand"


    // $ANTLR start "ruleExclamationParameterOperand"
    // InternalSqlParser.g:2749:1: ruleExclamationParameterOperand : ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) ;
    public final void ruleExclamationParameterOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2753:5: ( ( ( rule__ExclamationParameterOperand__PrmAssignment ) ) )
            // InternalSqlParser.g:2754:1: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            {
            // InternalSqlParser.g:2754:1: ( ( rule__ExclamationParameterOperand__PrmAssignment ) )
            // InternalSqlParser.g:2755:1: ( rule__ExclamationParameterOperand__PrmAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }
            // InternalSqlParser.g:2756:1: ( rule__ExclamationParameterOperand__PrmAssignment )
            // InternalSqlParser.g:2756:2: rule__ExclamationParameterOperand__PrmAssignment
            {
            pushFollow(FOLLOW_2);
            rule__ExclamationParameterOperand__PrmAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclamationParameterOperand"


    // $ANTLR start "entryRuleColumnOperand"
    // InternalSqlParser.g:2768:1: entryRuleColumnOperand : ruleColumnOperand EOF ;
    public final void entryRuleColumnOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2769:1: ( ruleColumnOperand EOF )
            // InternalSqlParser.g:2770:1: ruleColumnOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColumnOperand"


    // $ANTLR start "ruleColumnOperand"
    // InternalSqlParser.g:2777:1: ruleColumnOperand : ( ( rule__ColumnOperand__Group__0 ) ) ;
    public final void ruleColumnOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2781:5: ( ( ( rule__ColumnOperand__Group__0 ) ) )
            // InternalSqlParser.g:2782:1: ( ( rule__ColumnOperand__Group__0 ) )
            {
            // InternalSqlParser.g:2782:1: ( ( rule__ColumnOperand__Group__0 ) )
            // InternalSqlParser.g:2783:1: ( rule__ColumnOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getGroup()); 
            }
            // InternalSqlParser.g:2784:1: ( rule__ColumnOperand__Group__0 )
            // InternalSqlParser.g:2784:2: rule__ColumnOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColumnOperand"


    // $ANTLR start "entryRuleSubQueryOperand"
    // InternalSqlParser.g:2796:1: entryRuleSubQueryOperand : ruleSubQueryOperand EOF ;
    public final void entryRuleSubQueryOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2797:1: ( ruleSubQueryOperand EOF )
            // InternalSqlParser.g:2798:1: ruleSubQueryOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubQueryOperand"


    // $ANTLR start "ruleSubQueryOperand"
    // InternalSqlParser.g:2805:1: ruleSubQueryOperand : ( ( rule__SubQueryOperand__Group__0 ) ) ;
    public final void ruleSubQueryOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2809:5: ( ( ( rule__SubQueryOperand__Group__0 ) ) )
            // InternalSqlParser.g:2810:1: ( ( rule__SubQueryOperand__Group__0 ) )
            {
            // InternalSqlParser.g:2810:1: ( ( rule__SubQueryOperand__Group__0 ) )
            // InternalSqlParser.g:2811:1: ( rule__SubQueryOperand__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }
            // InternalSqlParser.g:2812:1: ( rule__SubQueryOperand__Group__0 )
            // InternalSqlParser.g:2812:2: rule__SubQueryOperand__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubQueryOperand"


    // $ANTLR start "entryRuleScalarOperand"
    // InternalSqlParser.g:2824:1: entryRuleScalarOperand : ruleScalarOperand EOF ;
    public final void entryRuleScalarOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2825:1: ( ruleScalarOperand EOF )
            // InternalSqlParser.g:2826:1: ruleScalarOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarOperand"


    // $ANTLR start "ruleScalarOperand"
    // InternalSqlParser.g:2833:1: ruleScalarOperand : ( ( rule__ScalarOperand__Alternatives ) ) ;
    public final void ruleScalarOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2837:5: ( ( ( rule__ScalarOperand__Alternatives ) ) )
            // InternalSqlParser.g:2838:1: ( ( rule__ScalarOperand__Alternatives ) )
            {
            // InternalSqlParser.g:2838:1: ( ( rule__ScalarOperand__Alternatives ) )
            // InternalSqlParser.g:2839:1: ( rule__ScalarOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:2840:1: ( rule__ScalarOperand__Alternatives )
            // InternalSqlParser.g:2840:2: rule__ScalarOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarOperand"


    // $ANTLR start "entryRuleScalarNumberOperand"
    // InternalSqlParser.g:2852:1: entryRuleScalarNumberOperand : ruleScalarNumberOperand EOF ;
    public final void entryRuleScalarNumberOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:2853:1: ( ruleScalarNumberOperand EOF )
            // InternalSqlParser.g:2854:1: ruleScalarNumberOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScalarNumberOperand"


    // $ANTLR start "ruleScalarNumberOperand"
    // InternalSqlParser.g:2861:1: ruleScalarNumberOperand : ( ( rule__ScalarNumberOperand__Alternatives ) ) ;
    public final void ruleScalarNumberOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2865:5: ( ( ( rule__ScalarNumberOperand__Alternatives ) ) )
            // InternalSqlParser.g:2866:1: ( ( rule__ScalarNumberOperand__Alternatives ) )
            {
            // InternalSqlParser.g:2866:1: ( ( rule__ScalarNumberOperand__Alternatives ) )
            // InternalSqlParser.g:2867:1: ( rule__ScalarNumberOperand__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:2868:1: ( rule__ScalarNumberOperand__Alternatives )
            // InternalSqlParser.g:2868:2: rule__ScalarNumberOperand__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__ScalarNumberOperand__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScalarNumberOperand"


    // $ANTLR start "entryRuleSQLCASE"
    // InternalSqlParser.g:2880:1: entryRuleSQLCASE : ruleSQLCASE EOF ;
    public final void entryRuleSQLCASE() throws RecognitionException {
        try {
            // InternalSqlParser.g:2881:1: ( ruleSQLCASE EOF )
            // InternalSqlParser.g:2882:1: ruleSQLCASE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCASE"


    // $ANTLR start "ruleSQLCASE"
    // InternalSqlParser.g:2889:1: ruleSQLCASE : ( ( rule__SQLCASE__Group__0 ) ) ;
    public final void ruleSQLCASE() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2893:5: ( ( ( rule__SQLCASE__Group__0 ) ) )
            // InternalSqlParser.g:2894:1: ( ( rule__SQLCASE__Group__0 ) )
            {
            // InternalSqlParser.g:2894:1: ( ( rule__SQLCASE__Group__0 ) )
            // InternalSqlParser.g:2895:1: ( rule__SQLCASE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getGroup()); 
            }
            // InternalSqlParser.g:2896:1: ( rule__SQLCASE__Group__0 )
            // InternalSqlParser.g:2896:2: rule__SQLCASE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCASE"


    // $ANTLR start "entryRuleSQLCaseWhens"
    // InternalSqlParser.g:2908:1: entryRuleSQLCaseWhens : ruleSQLCaseWhens EOF ;
    public final void entryRuleSQLCaseWhens() throws RecognitionException {
        try {
            // InternalSqlParser.g:2909:1: ( ruleSQLCaseWhens EOF )
            // InternalSqlParser.g:2910:1: ruleSQLCaseWhens EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSQLCaseWhens"


    // $ANTLR start "ruleSQLCaseWhens"
    // InternalSqlParser.g:2917:1: ruleSQLCaseWhens : ( ( rule__SQLCaseWhens__Group__0 ) ) ;
    public final void ruleSQLCaseWhens() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2921:5: ( ( ( rule__SQLCaseWhens__Group__0 ) ) )
            // InternalSqlParser.g:2922:1: ( ( rule__SQLCaseWhens__Group__0 ) )
            {
            // InternalSqlParser.g:2922:1: ( ( rule__SQLCaseWhens__Group__0 ) )
            // InternalSqlParser.g:2923:1: ( rule__SQLCaseWhens__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }
            // InternalSqlParser.g:2924:1: ( rule__SQLCaseWhens__Group__0 )
            // InternalSqlParser.g:2924:2: rule__SQLCaseWhens__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSQLCaseWhens"


    // $ANTLR start "entryRuleSqlCaseWhen"
    // InternalSqlParser.g:2936:1: entryRuleSqlCaseWhen : ruleSqlCaseWhen EOF ;
    public final void entryRuleSqlCaseWhen() throws RecognitionException {
        try {
            // InternalSqlParser.g:2937:1: ( ruleSqlCaseWhen EOF )
            // InternalSqlParser.g:2938:1: ruleSqlCaseWhen EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSqlCaseWhen"


    // $ANTLR start "ruleSqlCaseWhen"
    // InternalSqlParser.g:2945:1: ruleSqlCaseWhen : ( ( rule__SqlCaseWhen__Group__0 ) ) ;
    public final void ruleSqlCaseWhen() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2949:5: ( ( ( rule__SqlCaseWhen__Group__0 ) ) )
            // InternalSqlParser.g:2950:1: ( ( rule__SqlCaseWhen__Group__0 ) )
            {
            // InternalSqlParser.g:2950:1: ( ( rule__SqlCaseWhen__Group__0 ) )
            // InternalSqlParser.g:2951:1: ( rule__SqlCaseWhen__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }
            // InternalSqlParser.g:2952:1: ( rule__SqlCaseWhen__Group__0 )
            // InternalSqlParser.g:2952:2: rule__SqlCaseWhen__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSqlCaseWhen"


    // $ANTLR start "entryRuleJoinType"
    // InternalSqlParser.g:2964:1: entryRuleJoinType : ruleJoinType EOF ;
    public final void entryRuleJoinType() throws RecognitionException {
        try {
            // InternalSqlParser.g:2965:1: ( ruleJoinType EOF )
            // InternalSqlParser.g:2966:1: ruleJoinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleJoinType"


    // $ANTLR start "ruleJoinType"
    // InternalSqlParser.g:2973:1: ruleJoinType : ( ( rule__JoinType__Group__0 ) ) ;
    public final void ruleJoinType() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:2977:5: ( ( ( rule__JoinType__Group__0 ) ) )
            // InternalSqlParser.g:2978:1: ( ( rule__JoinType__Group__0 ) )
            {
            // InternalSqlParser.g:2978:1: ( ( rule__JoinType__Group__0 ) )
            // InternalSqlParser.g:2979:1: ( rule__JoinType__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getGroup()); 
            }
            // InternalSqlParser.g:2980:1: ( rule__JoinType__Group__0 )
            // InternalSqlParser.g:2980:2: rule__JoinType__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleJoinType"


    // $ANTLR start "entryRuleDBID"
    // InternalSqlParser.g:2992:1: entryRuleDBID : ruleDBID EOF ;
    public final void entryRuleDBID() throws RecognitionException {
        try {
            // InternalSqlParser.g:2993:1: ( ruleDBID EOF )
            // InternalSqlParser.g:2994:1: ruleDBID EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDBID"


    // $ANTLR start "ruleDBID"
    // InternalSqlParser.g:3001:1: ruleDBID : ( ( rule__DBID__Alternatives ) ) ;
    public final void ruleDBID() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3005:5: ( ( ( rule__DBID__Alternatives ) ) )
            // InternalSqlParser.g:3006:1: ( ( rule__DBID__Alternatives ) )
            {
            // InternalSqlParser.g:3006:1: ( ( rule__DBID__Alternatives ) )
            // InternalSqlParser.g:3007:1: ( rule__DBID__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDBIDAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:3008:1: ( rule__DBID__Alternatives )
            // InternalSqlParser.g:3008:2: rule__DBID__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__DBID__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDBIDAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDBID"


    // $ANTLR start "entryRuleStringOperand"
    // InternalSqlParser.g:3020:1: entryRuleStringOperand : ruleStringOperand EOF ;
    public final void entryRuleStringOperand() throws RecognitionException {
        try {
            // InternalSqlParser.g:3021:1: ( ruleStringOperand EOF )
            // InternalSqlParser.g:3022:1: ruleStringOperand EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringOperand"


    // $ANTLR start "ruleStringOperand"
    // InternalSqlParser.g:3029:1: ruleStringOperand : ( RULE_STRING_ ) ;
    public final void ruleStringOperand() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3033:5: ( ( RULE_STRING_ ) )
            // InternalSqlParser.g:3034:1: ( RULE_STRING_ )
            {
            // InternalSqlParser.g:3034:1: ( RULE_STRING_ )
            // InternalSqlParser.g:3035:1: RULE_STRING_
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }
            match(input,RULE_STRING_,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringOperandAccess().getSTRING_TerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringOperand"


    // $ANTLR start "entryRuleFNAME"
    // InternalSqlParser.g:3048:1: entryRuleFNAME : ruleFNAME EOF ;
    public final void entryRuleFNAME() throws RecognitionException {
        try {
            // InternalSqlParser.g:3049:1: ( ruleFNAME EOF )
            // InternalSqlParser.g:3050:1: ruleFNAME EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFNAME"


    // $ANTLR start "ruleFNAME"
    // InternalSqlParser.g:3057:1: ruleFNAME : ( ( rule__FNAME__Group__0 ) ) ;
    public final void ruleFNAME() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3061:5: ( ( ( rule__FNAME__Group__0 ) ) )
            // InternalSqlParser.g:3062:1: ( ( rule__FNAME__Group__0 ) )
            {
            // InternalSqlParser.g:3062:1: ( ( rule__FNAME__Group__0 ) )
            // InternalSqlParser.g:3063:1: ( rule__FNAME__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getGroup()); 
            }
            // InternalSqlParser.g:3064:1: ( rule__FNAME__Group__0 )
            // InternalSqlParser.g:3064:2: rule__FNAME__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFNAME"


    // $ANTLR start "entryRuleUnsignedValue"
    // InternalSqlParser.g:3078:1: entryRuleUnsignedValue : ruleUnsignedValue EOF ;
    public final void entryRuleUnsignedValue() throws RecognitionException {
        try {
            // InternalSqlParser.g:3079:1: ( ruleUnsignedValue EOF )
            // InternalSqlParser.g:3080:1: ruleUnsignedValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnsignedValue"


    // $ANTLR start "ruleUnsignedValue"
    // InternalSqlParser.g:3087:1: ruleUnsignedValue : ( ( rule__UnsignedValue__IntegerAssignment ) ) ;
    public final void ruleUnsignedValue() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3091:5: ( ( ( rule__UnsignedValue__IntegerAssignment ) ) )
            // InternalSqlParser.g:3092:1: ( ( rule__UnsignedValue__IntegerAssignment ) )
            {
            // InternalSqlParser.g:3092:1: ( ( rule__UnsignedValue__IntegerAssignment ) )
            // InternalSqlParser.g:3093:1: ( rule__UnsignedValue__IntegerAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }
            // InternalSqlParser.g:3094:1: ( rule__UnsignedValue__IntegerAssignment )
            // InternalSqlParser.g:3094:2: rule__UnsignedValue__IntegerAssignment
            {
            pushFollow(FOLLOW_2);
            rule__UnsignedValue__IntegerAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnsignedValue"


    // $ANTLR start "ruleXFunction"
    // InternalSqlParser.g:3107:1: ruleXFunction : ( ( rule__XFunction__Alternatives ) ) ;
    public final void ruleXFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3111:1: ( ( ( rule__XFunction__Alternatives ) ) )
            // InternalSqlParser.g:3112:1: ( ( rule__XFunction__Alternatives ) )
            {
            // InternalSqlParser.g:3112:1: ( ( rule__XFunction__Alternatives ) )
            // InternalSqlParser.g:3113:1: ( rule__XFunction__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:3114:1: ( rule__XFunction__Alternatives )
            // InternalSqlParser.g:3114:2: rule__XFunction__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__XFunction__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXFunctionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXFunction"


    // $ANTLR start "ruleEXTRACT_VALUES"
    // InternalSqlParser.g:3126:1: ruleEXTRACT_VALUES : ( ( rule__EXTRACT_VALUES__Alternatives ) ) ;
    public final void ruleEXTRACT_VALUES() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3130:1: ( ( ( rule__EXTRACT_VALUES__Alternatives ) ) )
            // InternalSqlParser.g:3131:1: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            {
            // InternalSqlParser.g:3131:1: ( ( rule__EXTRACT_VALUES__Alternatives ) )
            // InternalSqlParser.g:3132:1: ( rule__EXTRACT_VALUES__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }
            // InternalSqlParser.g:3133:1: ( rule__EXTRACT_VALUES__Alternatives )
            // InternalSqlParser.g:3133:2: rule__EXTRACT_VALUES__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EXTRACT_VALUES__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEXTRACT_VALUESAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEXTRACT_VALUES"


    // $ANTLR start "rule__FetchFirst__RowAlternatives_1_0"
    // InternalSqlParser.g:3144:1: rule__FetchFirst__RowAlternatives_1_0 : ( ( ROW ) | ( ROWS ) );
    public final void rule__FetchFirst__RowAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3148:1: ( ( ROW ) | ( ROWS ) )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==ROW) ) {
                alt1=1;
            }
            else if ( (LA1_0==ROWS) ) {
                alt1=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalSqlParser.g:3149:1: ( ROW )
                    {
                    // InternalSqlParser.g:3149:1: ( ROW )
                    // InternalSqlParser.g:3150:1: ROW
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }
                    match(input,ROW,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3157:6: ( ROWS )
                    {
                    // InternalSqlParser.g:3157:6: ( ROWS )
                    // InternalSqlParser.g:3158:1: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFetchFirstAccess().getRowROWSKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAlternatives_1_0"


    // $ANTLR start "rule__Limit__Alternatives"
    // InternalSqlParser.g:3170:1: rule__Limit__Alternatives : ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) );
    public final void rule__Limit__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3174:1: ( ( ( rule__Limit__Group_0__0 ) ) | ( ( rule__Limit__Group_1__0 ) ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==ALL) ) {
                alt2=1;
            }
            else if ( (LA2_0==RULE_UNSIGNED) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalSqlParser.g:3175:1: ( ( rule__Limit__Group_0__0 ) )
                    {
                    // InternalSqlParser.g:3175:1: ( ( rule__Limit__Group_0__0 ) )
                    // InternalSqlParser.g:3176:1: ( rule__Limit__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_0()); 
                    }
                    // InternalSqlParser.g:3177:1: ( rule__Limit__Group_0__0 )
                    // InternalSqlParser.g:3177:2: rule__Limit__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3181:6: ( ( rule__Limit__Group_1__0 ) )
                    {
                    // InternalSqlParser.g:3181:6: ( ( rule__Limit__Group_1__0 ) )
                    // InternalSqlParser.g:3182:1: ( rule__Limit__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLimitAccess().getGroup_1()); 
                    }
                    // InternalSqlParser.g:3183:1: ( rule__Limit__Group_1__0 )
                    // InternalSqlParser.g:3183:2: rule__Limit__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLimitAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Alternatives"


    // $ANTLR start "rule__SelectSubSet__OpAlternatives_0_0"
    // InternalSqlParser.g:3192:1: rule__SelectSubSet__OpAlternatives_0_0 : ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) );
    public final void rule__SelectSubSet__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3196:1: ( ( UNION ) | ( INTERSECT ) | ( MINUS ) | ( EXCEPT ) )
            int alt3=4;
            switch ( input.LA(1) ) {
            case UNION:
                {
                alt3=1;
                }
                break;
            case INTERSECT:
                {
                alt3=2;
                }
                break;
            case MINUS:
                {
                alt3=3;
                }
                break;
            case EXCEPT:
                {
                alt3=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalSqlParser.g:3197:1: ( UNION )
                    {
                    // InternalSqlParser.g:3197:1: ( UNION )
                    // InternalSqlParser.g:3198:1: UNION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }
                    match(input,UNION,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpUNIONKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3205:6: ( INTERSECT )
                    {
                    // InternalSqlParser.g:3205:6: ( INTERSECT )
                    // InternalSqlParser.g:3206:1: INTERSECT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }
                    match(input,INTERSECT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpINTERSECTKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3213:6: ( MINUS )
                    {
                    // InternalSqlParser.g:3213:6: ( MINUS )
                    // InternalSqlParser.g:3214:1: MINUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }
                    match(input,MINUS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpMINUSKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3221:6: ( EXCEPT )
                    {
                    // InternalSqlParser.g:3221:6: ( EXCEPT )
                    // InternalSqlParser.g:3222:1: EXCEPT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }
                    match(input,EXCEPT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectSubSetAccess().getOpEXCEPTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAlternatives_0_0"


    // $ANTLR start "rule__Select__Alternatives_2_1"
    // InternalSqlParser.g:3234:1: rule__Select__Alternatives_2_1 : ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) );
    public final void rule__Select__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3238:1: ( ( RULE_INT ) | ( RULE_SIGNED_DOUBLE ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_INT) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_SIGNED_DOUBLE) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSqlParser.g:3239:1: ( RULE_INT )
                    {
                    // InternalSqlParser.g:3239:1: ( RULE_INT )
                    // InternalSqlParser.g:3240:1: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getINTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3245:6: ( RULE_SIGNED_DOUBLE )
                    {
                    // InternalSqlParser.g:3245:6: ( RULE_SIGNED_DOUBLE )
                    // InternalSqlParser.g:3246:1: RULE_SIGNED_DOUBLE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSelectAccess().getSIGNED_DOUBLETerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Alternatives_2_1"


    // $ANTLR start "rule__ColumnOrAlias__Alternatives"
    // InternalSqlParser.g:3256:1: rule__ColumnOrAlias__Alternatives : ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) );
    public final void rule__ColumnOrAlias__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3260:1: ( ( ( rule__ColumnOrAlias__Group_0__0 ) ) | ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) ) | ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) ) )
            int alt5=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_1==EOF||LA5_1==FROM||LA5_1==LeftParenthesisPlusSignRightParenthesis||LA5_1==AS||(LA5_1>=VerticalLineVerticalLine && LA5_1<=HyphenMinus)||LA5_1==Solidus||LA5_1==RULE_STAR||(LA5_1>=RULE_STRING && LA5_1<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_DBNAME:
                {
                int LA5_2 = input.LA(2);

                if ( (LA5_2==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_2==EOF||LA5_2==FROM||LA5_2==LeftParenthesisPlusSignRightParenthesis||LA5_2==AS||LA5_2==VerticalLineVerticalLine||(LA5_2>=RightParenthesis && LA5_2<=HyphenMinus)||LA5_2==Solidus||LA5_2==RULE_STAR||(LA5_2>=RULE_STRING && LA5_2<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
                {
                int LA5_3 = input.LA(2);

                if ( (LA5_3==FullStop) ) {
                    int LA5_6 = input.LA(3);

                    if ( ((LA5_6>=RULE_STRING && LA5_6<=RULE_ID)) ) {
                        alt5=1;
                    }
                    else if ( (LA5_6==RULE_STAR) ) {
                        alt5=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 6, input);

                        throw nvae;
                    }
                }
                else if ( (LA5_3==EOF||LA5_3==FROM||LA5_3==LeftParenthesisPlusSignRightParenthesis||LA5_3==AS||LA5_3==VerticalLineVerticalLine||(LA5_3>=RightParenthesis && LA5_3<=HyphenMinus)||LA5_3==Solidus||LA5_3==RULE_STAR||(LA5_3>=RULE_STRING && LA5_3<=RULE_ID)) ) {
                    alt5=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 3, input);

                    throw nvae;
                }
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt5=1;
                }
                break;
            case RULE_STAR:
                {
                alt5=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSqlParser.g:3261:1: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    {
                    // InternalSqlParser.g:3261:1: ( ( rule__ColumnOrAlias__Group_0__0 ) )
                    // InternalSqlParser.g:3262:1: ( rule__ColumnOrAlias__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }
                    // InternalSqlParser.g:3263:1: ( rule__ColumnOrAlias__Group_0__0 )
                    // InternalSqlParser.g:3263:2: rule__ColumnOrAlias__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3267:6: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3267:6: ( ( rule__ColumnOrAlias__AllColsAssignment_1 ) )
                    // InternalSqlParser.g:3268:1: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }
                    // InternalSqlParser.g:3269:1: ( rule__ColumnOrAlias__AllColsAssignment_1 )
                    // InternalSqlParser.g:3269:2: rule__ColumnOrAlias__AllColsAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AllColsAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getAllColsAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3273:6: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3273:6: ( ( rule__ColumnOrAlias__DbAllColsAssignment_2 ) )
                    // InternalSqlParser.g:3274:1: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }
                    // InternalSqlParser.g:3275:1: ( rule__ColumnOrAlias__DbAllColsAssignment_2 )
                    // InternalSqlParser.g:3275:2: rule__ColumnOrAlias__DbAllColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__DbAllColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColumnOrAliasAccess().getDbAllColsAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Alternatives"


    // $ANTLR start "rule__FromTableJoin__Alternatives_2"
    // InternalSqlParser.g:3284:1: rule__FromTableJoin__Alternatives_2 : ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) );
    public final void rule__FromTableJoin__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3288:1: ( ( ( rule__FromTableJoin__Group_2_0__0 ) ) | ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==ON) ) {
                alt6=1;
            }
            else if ( (LA6_0==USING) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSqlParser.g:3289:1: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    {
                    // InternalSqlParser.g:3289:1: ( ( rule__FromTableJoin__Group_2_0__0 ) )
                    // InternalSqlParser.g:3290:1: ( rule__FromTableJoin__Group_2_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }
                    // InternalSqlParser.g:3291:1: ( rule__FromTableJoin__Group_2_0__0 )
                    // InternalSqlParser.g:3291:2: rule__FromTableJoin__Group_2_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__Group_2_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getGroup_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3295:6: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3295:6: ( ( rule__FromTableJoin__JoinCondAssignment_2_1 ) )
                    // InternalSqlParser.g:3296:1: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }
                    // InternalSqlParser.g:3297:1: ( rule__FromTableJoin__JoinCondAssignment_2_1 )
                    // InternalSqlParser.g:3297:2: rule__FromTableJoin__JoinCondAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromTableJoin__JoinCondAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFromTableJoinAccess().getJoinCondAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Alternatives_2"


    // $ANTLR start "rule__TableOrAlias__Alternatives_0"
    // InternalSqlParser.g:3306:1: rule__TableOrAlias__Alternatives_0 : ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) );
    public final void rule__TableOrAlias__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3310:1: ( ( ( rule__TableOrAlias__TfullAssignment_0_0 ) ) | ( ( rule__TableOrAlias__SqAssignment_0_1 ) ) | ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) ) )
            int alt7=3;
            int LA7_0 = input.LA(1);

            if ( ((LA7_0>=RULE_STRING && LA7_0<=RULE_ID)) ) {
                alt7=1;
            }
            else if ( (LA7_0==LeftParenthesis) ) {
                int LA7_2 = input.LA(2);

                if ( (LA7_2==VALUES) ) {
                    alt7=3;
                }
                else if ( (LA7_2==SELECT) ) {
                    alt7=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 7, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalSqlParser.g:3311:1: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    {
                    // InternalSqlParser.g:3311:1: ( ( rule__TableOrAlias__TfullAssignment_0_0 ) )
                    // InternalSqlParser.g:3312:1: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }
                    // InternalSqlParser.g:3313:1: ( rule__TableOrAlias__TfullAssignment_0_0 )
                    // InternalSqlParser.g:3313:2: rule__TableOrAlias__TfullAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TfullAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getTfullAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3317:6: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    {
                    // InternalSqlParser.g:3317:6: ( ( rule__TableOrAlias__SqAssignment_0_1 ) )
                    // InternalSqlParser.g:3318:1: ( rule__TableOrAlias__SqAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }
                    // InternalSqlParser.g:3319:1: ( rule__TableOrAlias__SqAssignment_0_1 )
                    // InternalSqlParser.g:3319:2: rule__TableOrAlias__SqAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__SqAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getSqAssignment_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3323:6: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    {
                    // InternalSqlParser.g:3323:6: ( ( rule__TableOrAlias__ValuesAssignment_0_2 ) )
                    // InternalSqlParser.g:3324:1: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }
                    // InternalSqlParser.g:3325:1: ( rule__TableOrAlias__ValuesAssignment_0_2 )
                    // InternalSqlParser.g:3325:2: rule__TableOrAlias__ValuesAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__ValuesAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getValuesAssignment_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_0"


    // $ANTLR start "rule__TableOrAlias__Alternatives_1"
    // InternalSqlParser.g:3334:1: rule__TableOrAlias__Alternatives_1 : ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) );
    public final void rule__TableOrAlias__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3338:1: ( ( ( rule__TableOrAlias__PivotAssignment_1_0 ) ) | ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==PIVOT) ) {
                alt8=1;
            }
            else if ( (LA8_0==UNPIVOT) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSqlParser.g:3339:1: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:3339:1: ( ( rule__TableOrAlias__PivotAssignment_1_0 ) )
                    // InternalSqlParser.g:3340:1: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }
                    // InternalSqlParser.g:3341:1: ( rule__TableOrAlias__PivotAssignment_1_0 )
                    // InternalSqlParser.g:3341:2: rule__TableOrAlias__PivotAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__PivotAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getPivotAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3345:6: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    {
                    // InternalSqlParser.g:3345:6: ( ( rule__TableOrAlias__UnpivotAssignment_1_1 ) )
                    // InternalSqlParser.g:3346:1: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }
                    // InternalSqlParser.g:3347:1: ( rule__TableOrAlias__UnpivotAssignment_1_1 )
                    // InternalSqlParser.g:3347:2: rule__TableOrAlias__UnpivotAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__UnpivotAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTableOrAliasAccess().getUnpivotAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Alternatives_1"


    // $ANTLR start "rule__RowValue__Alternatives"
    // InternalSqlParser.g:3356:1: rule__RowValue__Alternatives : ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) );
    public final void rule__RowValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3360:1: ( ( ruleScalarNumberOperand ) | ( ( rule__RowValue__NullAssignment_1 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( ((LA9_0>=RULE_UNSIGNED && LA9_0<=RULE_SIGNED_DOUBLE)||LA9_0==RULE_STRING_) ) {
                alt9=1;
            }
            else if ( (LA9_0==NULL) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSqlParser.g:3361:1: ( ruleScalarNumberOperand )
                    {
                    // InternalSqlParser.g:3361:1: ( ruleScalarNumberOperand )
                    // InternalSqlParser.g:3362:1: ruleScalarNumberOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleScalarNumberOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getScalarNumberOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3367:6: ( ( rule__RowValue__NullAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3367:6: ( ( rule__RowValue__NullAssignment_1 ) )
                    // InternalSqlParser.g:3368:1: ( rule__RowValue__NullAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }
                    // InternalSqlParser.g:3369:1: ( rule__RowValue__NullAssignment_1 )
                    // InternalSqlParser.g:3369:2: rule__RowValue__NullAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValue__NullAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getRowValueAccess().getNullAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__Alternatives"


    // $ANTLR start "rule__PivotInClause__Alternatives_2"
    // InternalSqlParser.g:3378:1: rule__PivotInClause__Alternatives_2 : ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) );
    public final void rule__PivotInClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3382:1: ( ( ( rule__PivotInClause__SqAssignment_2_0 ) ) | ( ( rule__PivotInClause__ArgsAssignment_2_1 ) ) | ( ( rule__PivotInClause__PinanyAssignment_2_2 ) ) )
            int alt10=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==SELECT) ) {
                    alt10=1;
                }
                else if ( ((LA10_1>=RULE_STRING && LA10_1<=RULE_ID)) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt10=2;
                }
                break;
            case ANY:
                {
                alt10=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalSqlParser.g:3383:1: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3383:1: ( ( rule__PivotInClause__SqAssignment_2_0 ) )
                    // InternalSqlParser.g:3384:1: ( rule__PivotInClause__SqAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }
                    // InternalSqlParser.g:3385:1: ( rule__PivotInClause__SqAssignment_2_0 )
                    // InternalSqlParser.g:3385:2: rule__PivotInClause__SqAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__SqAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getSqAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3389:6: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3389:6: ( ( rule__PivotInClause__ArgsAssignment_2_1 ) )
                    // InternalSqlParser.g:3390:1: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSqlParser.g:3391:1: ( rule__PivotInClause__ArgsAssignment_2_1 )
                    // InternalSqlParser.g:3391:2: rule__PivotInClause__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3395:6: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    {
                    // InternalSqlParser.g:3395:6: ( ( rule__PivotInClause__PinanyAssignment_2_2 ) )
                    // InternalSqlParser.g:3396:1: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }
                    // InternalSqlParser.g:3397:1: ( rule__PivotInClause__PinanyAssignment_2_2 )
                    // InternalSqlParser.g:3397:2: rule__PivotInClause__PinanyAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotInClause__PinanyAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotInClauseAccess().getPinanyAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Alternatives_2"


    // $ANTLR start "rule__UnpivotTable__Alternatives_1_0"
    // InternalSqlParser.g:3406:1: rule__UnpivotTable__Alternatives_1_0 : ( ( INCLUDE ) | ( EXCLUDE ) );
    public final void rule__UnpivotTable__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3410:1: ( ( INCLUDE ) | ( EXCLUDE ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==INCLUDE) ) {
                alt11=1;
            }
            else if ( (LA11_0==EXCLUDE) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSqlParser.g:3411:1: ( INCLUDE )
                    {
                    // InternalSqlParser.g:3411:1: ( INCLUDE )
                    // InternalSqlParser.g:3412:1: INCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }
                    match(input,INCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getINCLUDEKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3419:6: ( EXCLUDE )
                    {
                    // InternalSqlParser.g:3419:6: ( EXCLUDE )
                    // InternalSqlParser.g:3420:1: EXCLUDE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }
                    match(input,EXCLUDE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnpivotTableAccess().getEXCLUDEKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Alternatives_1_0"


    // $ANTLR start "rule__PivotForClause__Alternatives_1"
    // InternalSqlParser.g:3432:1: rule__PivotForClause__Alternatives_1 : ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) );
    public final void rule__PivotForClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3436:1: ( ( ruleColumnFull ) | ( ( rule__PivotForClause__Group_1_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=RULE_STRING && LA12_0<=RULE_ID)) ) {
                alt12=1;
            }
            else if ( (LA12_0==LeftParenthesis) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalSqlParser.g:3437:1: ( ruleColumnFull )
                    {
                    // InternalSqlParser.g:3437:1: ( ruleColumnFull )
                    // InternalSqlParser.g:3438:1: ruleColumnFull
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleColumnFull();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getColumnFullParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3443:6: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:3443:6: ( ( rule__PivotForClause__Group_1_1__0 ) )
                    // InternalSqlParser.g:3444:1: ( rule__PivotForClause__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }
                    // InternalSqlParser.g:3445:1: ( rule__PivotForClause__Group_1_1__0 )
                    // InternalSqlParser.g:3445:2: rule__PivotForClause__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotForClause__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotForClauseAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Alternatives_1"


    // $ANTLR start "rule__PivotColumns__Alternatives"
    // InternalSqlParser.g:3454:1: rule__PivotColumns__Alternatives : ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) );
    public final void rule__PivotColumns__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3458:1: ( ( rulePivotCol ) | ( ( rule__PivotColumns__Group_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( ((LA13_0>=RULE_STRING && LA13_0<=RULE_ID)) ) {
                alt13=1;
            }
            else if ( (LA13_0==LeftParenthesis) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalSqlParser.g:3459:1: ( rulePivotCol )
                    {
                    // InternalSqlParser.g:3459:1: ( rulePivotCol )
                    // InternalSqlParser.g:3460:1: rulePivotCol
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePivotCol();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getPivotColParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3465:6: ( ( rule__PivotColumns__Group_1__0 ) )
                    {
                    // InternalSqlParser.g:3465:6: ( ( rule__PivotColumns__Group_1__0 ) )
                    // InternalSqlParser.g:3466:1: ( rule__PivotColumns__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }
                    // InternalSqlParser.g:3467:1: ( rule__PivotColumns__Group_1__0 )
                    // InternalSqlParser.g:3467:2: rule__PivotColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPivotColumnsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Alternatives"


    // $ANTLR start "rule__OrderByColumnFull__Alternatives_0"
    // InternalSqlParser.g:3476:1: rule__OrderByColumnFull__Alternatives_0 : ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) );
    public final void rule__OrderByColumnFull__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3480:1: ( ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) ) | ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( ((LA14_0>=RULE_STRING && LA14_0<=RULE_ID)) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_UNSIGNED) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSqlParser.g:3481:1: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    {
                    // InternalSqlParser.g:3481:1: ( ( rule__OrderByColumnFull__ColOrderAssignment_0_0 ) )
                    // InternalSqlParser.g:3482:1: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }
                    // InternalSqlParser.g:3483:1: ( rule__OrderByColumnFull__ColOrderAssignment_0_0 )
                    // InternalSqlParser.g:3483:2: rule__OrderByColumnFull__ColOrderAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3487:6: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    {
                    // InternalSqlParser.g:3487:6: ( ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 ) )
                    // InternalSqlParser.g:3488:1: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }
                    // InternalSqlParser.g:3489:1: ( rule__OrderByColumnFull__ColOrderIntAssignment_0_1 )
                    // InternalSqlParser.g:3489:2: rule__OrderByColumnFull__ColOrderIntAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__ColOrderIntAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntAssignment_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Alternatives_0"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAlternatives_1_0"
    // InternalSqlParser.g:3498:1: rule__OrderByColumnFull__DirectionAlternatives_1_0 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByColumnFull__DirectionAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3502:1: ( ( ASC ) | ( DESC ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==ASC) ) {
                alt15=1;
            }
            else if ( (LA15_0==DESC) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalSqlParser.g:3503:1: ( ASC )
                    {
                    // InternalSqlParser.g:3503:1: ( ASC )
                    // InternalSqlParser.g:3504:1: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionASCKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3511:6: ( DESC )
                    {
                    // InternalSqlParser.g:3511:6: ( DESC )
                    // InternalSqlParser.g:3512:1: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByColumnFullAccess().getDirectionDESCKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAlternatives_1_0"


    // $ANTLR start "rule__GroupByColumnFull__Alternatives"
    // InternalSqlParser.g:3524:1: rule__GroupByColumnFull__Alternatives : ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) );
    public final void rule__GroupByColumnFull__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3528:1: ( ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) ) | ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) ) | ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) ) )
            int alt16=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA16_1 = input.LA(2);

                if ( (LA16_1==EOF||LA16_1==INTERSECT||LA16_1==EXCEPT||LA16_1==HAVING||LA16_1==OFFSET||LA16_1==FETCH||(LA16_1>=LIMIT && LA16_1<=MINUS)||LA16_1==ORDER||LA16_1==UNION||LA16_1==RightParenthesis||LA16_1==Comma||LA16_1==FullStop) ) {
                    alt16=1;
                }
                else if ( (LA16_1==LeftParenthesis) ) {
                    alt16=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt16=1;
                }
                break;
            case RULE_UNSIGNED:
                {
                alt16=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalSqlParser.g:3529:1: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    {
                    // InternalSqlParser.g:3529:1: ( ( rule__GroupByColumnFull__ColGrByAssignment_0 ) )
                    // InternalSqlParser.g:3530:1: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }
                    // InternalSqlParser.g:3531:1: ( rule__GroupByColumnFull__ColGrByAssignment_0 )
                    // InternalSqlParser.g:3531:2: rule__GroupByColumnFull__ColGrByAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__ColGrByAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getColGrByAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3535:6: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3535:6: ( ( rule__GroupByColumnFull__GbFunctionAssignment_1 ) )
                    // InternalSqlParser.g:3536:1: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }
                    // InternalSqlParser.g:3537:1: ( rule__GroupByColumnFull__GbFunctionAssignment_1 )
                    // InternalSqlParser.g:3537:2: rule__GroupByColumnFull__GbFunctionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GbFunctionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3541:6: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3541:6: ( ( rule__GroupByColumnFull__GrByIntAssignment_2 ) )
                    // InternalSqlParser.g:3542:1: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }
                    // InternalSqlParser.g:3543:1: ( rule__GroupByColumnFull__GrByIntAssignment_2 )
                    // InternalSqlParser.g:3543:2: rule__GroupByColumnFull__GrByIntAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumnFull__GrByIntAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getGroupByColumnFullAccess().getGrByIntAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__Alternatives"
    // InternalSqlParser.g:3552:1: rule__ExpressionFragmentSecond__Alternatives : ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) );
    public final void rule__ExpressionFragmentSecond__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3556:1: ( ( ( rule__ExpressionFragmentSecond__Group_0__0 ) ) | ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==AND||LA17_0==OR) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_JRNPARAM) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalSqlParser.g:3557:1: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    {
                    // InternalSqlParser.g:3557:1: ( ( rule__ExpressionFragmentSecond__Group_0__0 ) )
                    // InternalSqlParser.g:3558:1: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }
                    // InternalSqlParser.g:3559:1: ( rule__ExpressionFragmentSecond__Group_0__0 )
                    // InternalSqlParser.g:3559:2: rule__ExpressionFragmentSecond__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3563:6: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3563:6: ( ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 ) )
                    // InternalSqlParser.g:3564:1: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }
                    // InternalSqlParser.g:3565:1: ( rule__ExpressionFragmentSecond__NotPrmAssignment_1 )
                    // InternalSqlParser.g:3565:2: rule__ExpressionFragmentSecond__NotPrmAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragmentSecond__NotPrmAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmAssignment_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Alternatives"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"
    // InternalSqlParser.g:3574:1: rule__ExpressionFragmentSecond__CAlternatives_0_0_0 : ( ( AND ) | ( OR ) );
    public final void rule__ExpressionFragmentSecond__CAlternatives_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3578:1: ( ( AND ) | ( OR ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==AND) ) {
                alt18=1;
            }
            else if ( (LA18_0==OR) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSqlParser.g:3579:1: ( AND )
                    {
                    // InternalSqlParser.g:3579:1: ( AND )
                    // InternalSqlParser.g:3580:1: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCANDKeyword_0_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3587:6: ( OR )
                    {
                    // InternalSqlParser.g:3587:6: ( OR )
                    // InternalSqlParser.g:3588:1: OR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }
                    match(input,OR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentSecondAccess().getCORKeyword_0_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAlternatives_0_0_0"


    // $ANTLR start "rule__ExpressionFragment__Alternatives"
    // InternalSqlParser.g:3600:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );
    public final void rule__ExpressionFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3604:1: ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) )
            int alt19=6;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // InternalSqlParser.g:3605:1: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    {
                    // InternalSqlParser.g:3605:1: ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) )
                    // InternalSqlParser.g:3606:1: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }
                    // InternalSqlParser.g:3607:1: ( rule__ExpressionFragment__ExpgroupAssignment_0 )
                    // InternalSqlParser.g:3607:2: rule__ExpressionFragment__ExpgroupAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpgroupAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpgroupAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3611:6: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3611:6: ( ( rule__ExpressionFragment__ExpAssignment_1 ) )
                    // InternalSqlParser.g:3612:1: ( rule__ExpressionFragment__ExpAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }
                    // InternalSqlParser.g:3613:1: ( rule__ExpressionFragment__ExpAssignment_1 )
                    // InternalSqlParser.g:3613:2: rule__ExpressionFragment__ExpAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExpAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExpAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3617:6: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3617:6: ( ( rule__ExpressionFragment__XexpAssignment_2 ) )
                    // InternalSqlParser.g:3618:1: ( rule__ExpressionFragment__XexpAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }
                    // InternalSqlParser.g:3619:1: ( rule__ExpressionFragment__XexpAssignment_2 )
                    // InternalSqlParser.g:3619:2: rule__ExpressionFragment__XexpAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__XexpAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3623:6: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    {
                    // InternalSqlParser.g:3623:6: ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) )
                    // InternalSqlParser.g:3624:1: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }
                    // InternalSqlParser.g:3625:1: ( rule__ExpressionFragment__NotPrmAssignment_3 )
                    // InternalSqlParser.g:3625:2: rule__ExpressionFragment__NotPrmAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__NotPrmAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getNotPrmAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3629:6: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    {
                    // InternalSqlParser.g:3629:6: ( ( rule__ExpressionFragment__InAssignment_4 ) )
                    // InternalSqlParser.g:3630:1: ( rule__ExpressionFragment__InAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }
                    // InternalSqlParser.g:3631:1: ( rule__ExpressionFragment__InAssignment_4 )
                    // InternalSqlParser.g:3631:2: rule__ExpressionFragment__InAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__InAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getInAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3635:6: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    {
                    // InternalSqlParser.g:3635:6: ( ( rule__ExpressionFragment__ExistsAssignment_5 ) )
                    // InternalSqlParser.g:3636:1: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }
                    // InternalSqlParser.g:3637:1: ( rule__ExpressionFragment__ExistsAssignment_5 )
                    // InternalSqlParser.g:3637:2: rule__ExpressionFragment__ExistsAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionFragment__ExistsAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getExistsAssignment_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__Alternatives"


    // $ANTLR start "rule__ExpressionFragment__XexpAlternatives_2_0"
    // InternalSqlParser.g:3646:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );
    public final void rule__ExpressionFragment__XexpAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3650:1: ( ( ruleXExpression ) | ( ruleXExpression_ ) )
            int alt20=2;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // InternalSqlParser.g:3651:1: ( ruleXExpression )
                    {
                    // InternalSqlParser.g:3651:1: ( ruleXExpression )
                    // InternalSqlParser.g:3652:1: ruleXExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpressionParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3657:6: ( ruleXExpression_ )
                    {
                    // InternalSqlParser.g:3657:6: ( ruleXExpression_ )
                    // InternalSqlParser.g:3658:1: ruleXExpression_
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXExpression_();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionFragmentAccess().getXexpXExpression_ParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAlternatives_2_0"


    // $ANTLR start "rule__ExpressionGroup__IsnotAlternatives_1_0"
    // InternalSqlParser.g:3668:1: rule__ExpressionGroup__IsnotAlternatives_1_0 : ( ( NOT ) | ( NOT_1 ) );
    public final void rule__ExpressionGroup__IsnotAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3672:1: ( ( NOT ) | ( NOT_1 ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==NOT) ) {
                alt21=1;
            }
            else if ( (LA21_0==NOT_1) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalSqlParser.g:3673:1: ( NOT )
                    {
                    // InternalSqlParser.g:3673:1: ( NOT )
                    // InternalSqlParser.g:3674:1: NOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3681:6: ( NOT_1 )
                    {
                    // InternalSqlParser.g:3681:6: ( NOT_1 )
                    // InternalSqlParser.g:3682:1: NOT_1
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }
                    match(input,NOT_1,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionGroupAccess().getIsnotNOTKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAlternatives_1_0"


    // $ANTLR start "rule__Expression__Alternatives_1"
    // InternalSqlParser.g:3694:1: rule__Expression__Alternatives_1 : ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) );
    public final void rule__Expression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3698:1: ( ( ( rule__Expression__IsnullAssignment_1_0 ) ) | ( ( rule__Expression__InAssignment_1_1 ) ) | ( ( rule__Expression__ExistsAssignment_1_2 ) ) | ( ( rule__Expression__BetweenAssignment_1_3 ) ) | ( ( rule__Expression__LikeAssignment_1_4 ) ) | ( ( rule__Expression__CompAssignment_1_5 ) ) )
            int alt22=6;
            switch ( input.LA(1) ) {
            case IS:
                {
                alt22=1;
                }
                break;
            case NOT:
                {
                switch ( input.LA(2) ) {
                case BETWEEN:
                    {
                    alt22=4;
                    }
                    break;
                case LIKE:
                    {
                    alt22=5;
                    }
                    break;
                case IN:
                    {
                    alt22=2;
                    }
                    break;
                case EXISTS:
                    {
                    alt22=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 2, input);

                    throw nvae;
                }

                }
                break;
            case IN:
                {
                alt22=2;
                }
                break;
            case EXISTS:
                {
                alt22=3;
                }
                break;
            case BETWEEN:
                {
                alt22=4;
                }
                break;
            case LIKE:
                {
                alt22=5;
                }
                break;
            case ExclamationMarkEqualsSign:
            case LessThanSignEqualsSign:
            case LessThanSignGreaterThanSign:
            case GreaterThanSignEqualsSign:
            case CircumflexAccentEqualsSign:
            case LessThanSign:
            case EqualsSign:
            case GreaterThanSign:
                {
                alt22=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSqlParser.g:3699:1: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:3699:1: ( ( rule__Expression__IsnullAssignment_1_0 ) )
                    // InternalSqlParser.g:3700:1: ( rule__Expression__IsnullAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }
                    // InternalSqlParser.g:3701:1: ( rule__Expression__IsnullAssignment_1_0 )
                    // InternalSqlParser.g:3701:2: rule__Expression__IsnullAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__IsnullAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getIsnullAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3705:6: ( ( rule__Expression__InAssignment_1_1 ) )
                    {
                    // InternalSqlParser.g:3705:6: ( ( rule__Expression__InAssignment_1_1 ) )
                    // InternalSqlParser.g:3706:1: ( rule__Expression__InAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }
                    // InternalSqlParser.g:3707:1: ( rule__Expression__InAssignment_1_1 )
                    // InternalSqlParser.g:3707:2: rule__Expression__InAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__InAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getInAssignment_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3711:6: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    {
                    // InternalSqlParser.g:3711:6: ( ( rule__Expression__ExistsAssignment_1_2 ) )
                    // InternalSqlParser.g:3712:1: ( rule__Expression__ExistsAssignment_1_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }
                    // InternalSqlParser.g:3713:1: ( rule__Expression__ExistsAssignment_1_2 )
                    // InternalSqlParser.g:3713:2: rule__Expression__ExistsAssignment_1_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__ExistsAssignment_1_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getExistsAssignment_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3717:6: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    {
                    // InternalSqlParser.g:3717:6: ( ( rule__Expression__BetweenAssignment_1_3 ) )
                    // InternalSqlParser.g:3718:1: ( rule__Expression__BetweenAssignment_1_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }
                    // InternalSqlParser.g:3719:1: ( rule__Expression__BetweenAssignment_1_3 )
                    // InternalSqlParser.g:3719:2: rule__Expression__BetweenAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__BetweenAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBetweenAssignment_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3723:6: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    {
                    // InternalSqlParser.g:3723:6: ( ( rule__Expression__LikeAssignment_1_4 ) )
                    // InternalSqlParser.g:3724:1: ( rule__Expression__LikeAssignment_1_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }
                    // InternalSqlParser.g:3725:1: ( rule__Expression__LikeAssignment_1_4 )
                    // InternalSqlParser.g:3725:2: rule__Expression__LikeAssignment_1_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__LikeAssignment_1_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getLikeAssignment_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3729:6: ( ( rule__Expression__CompAssignment_1_5 ) )
                    {
                    // InternalSqlParser.g:3729:6: ( ( rule__Expression__CompAssignment_1_5 ) )
                    // InternalSqlParser.g:3730:1: ( rule__Expression__CompAssignment_1_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }
                    // InternalSqlParser.g:3731:1: ( rule__Expression__CompAssignment_1_5 )
                    // InternalSqlParser.g:3731:2: rule__Expression__CompAssignment_1_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__Expression__CompAssignment_1_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getCompAssignment_1_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives_1"


    // $ANTLR start "rule__Comparison__OperatorAlternatives_0_0"
    // InternalSqlParser.g:3740:1: rule__Comparison__OperatorAlternatives_0_0 : ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) );
    public final void rule__Comparison__OperatorAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3744:1: ( ( GreaterThanSign ) | ( GreaterThanSignEqualsSign ) | ( LessThanSign ) | ( LessThanSignEqualsSign ) | ( EqualsSign ) | ( LessThanSignGreaterThanSign ) | ( ExclamationMarkEqualsSign ) | ( CircumflexAccentEqualsSign ) )
            int alt23=8;
            switch ( input.LA(1) ) {
            case GreaterThanSign:
                {
                alt23=1;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt23=2;
                }
                break;
            case LessThanSign:
                {
                alt23=3;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt23=4;
                }
                break;
            case EqualsSign:
                {
                alt23=5;
                }
                break;
            case LessThanSignGreaterThanSign:
                {
                alt23=6;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt23=7;
                }
                break;
            case CircumflexAccentEqualsSign:
                {
                alt23=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalSqlParser.g:3745:1: ( GreaterThanSign )
                    {
                    // InternalSqlParser.g:3745:1: ( GreaterThanSign )
                    // InternalSqlParser.g:3746:1: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3753:6: ( GreaterThanSignEqualsSign )
                    {
                    // InternalSqlParser.g:3753:6: ( GreaterThanSignEqualsSign )
                    // InternalSqlParser.g:3754:1: GreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorGreaterThanSignEqualsSignKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3761:6: ( LessThanSign )
                    {
                    // InternalSqlParser.g:3761:6: ( LessThanSign )
                    // InternalSqlParser.g:3762:1: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3769:6: ( LessThanSignEqualsSign )
                    {
                    // InternalSqlParser.g:3769:6: ( LessThanSignEqualsSign )
                    // InternalSqlParser.g:3770:1: LessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignEqualsSignKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3777:6: ( EqualsSign )
                    {
                    // InternalSqlParser.g:3777:6: ( EqualsSign )
                    // InternalSqlParser.g:3778:1: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorEqualsSignKeyword_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:3785:6: ( LessThanSignGreaterThanSign )
                    {
                    // InternalSqlParser.g:3785:6: ( LessThanSignGreaterThanSign )
                    // InternalSqlParser.g:3786:1: LessThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorLessThanSignGreaterThanSignKeyword_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:3793:6: ( ExclamationMarkEqualsSign )
                    {
                    // InternalSqlParser.g:3793:6: ( ExclamationMarkEqualsSign )
                    // InternalSqlParser.g:3794:1: ExclamationMarkEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }
                    match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorExclamationMarkEqualsSignKeyword_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSqlParser.g:3801:6: ( CircumflexAccentEqualsSign )
                    {
                    // InternalSqlParser.g:3801:6: ( CircumflexAccentEqualsSign )
                    // InternalSqlParser.g:3802:1: CircumflexAccentEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }
                    match(input,CircumflexAccentEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getOperatorCircumflexAccentEqualsSignKeyword_0_0_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAlternatives_0_0"


    // $ANTLR start "rule__Comparison__SubOperatorAlternatives_1_0"
    // InternalSqlParser.g:3814:1: rule__Comparison__SubOperatorAlternatives_1_0 : ( ( ANY ) | ( ALL ) | ( SOME ) );
    public final void rule__Comparison__SubOperatorAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3818:1: ( ( ANY ) | ( ALL ) | ( SOME ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case ANY:
                {
                alt24=1;
                }
                break;
            case ALL:
                {
                alt24=2;
                }
                break;
            case SOME:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSqlParser.g:3819:1: ( ANY )
                    {
                    // InternalSqlParser.g:3819:1: ( ANY )
                    // InternalSqlParser.g:3820:1: ANY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }
                    match(input,ANY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorANYKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3827:6: ( ALL )
                    {
                    // InternalSqlParser.g:3827:6: ( ALL )
                    // InternalSqlParser.g:3828:1: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorALLKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3835:6: ( SOME )
                    {
                    // InternalSqlParser.g:3835:6: ( SOME )
                    // InternalSqlParser.g:3836:1: SOME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }
                    match(input,SOME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getSubOperatorSOMEKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAlternatives_1_0"


    // $ANTLR start "rule__LikeOperand__Alternatives"
    // InternalSqlParser.g:3848:1: rule__LikeOperand__Alternatives : ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) );
    public final void rule__LikeOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3852:1: ( ( ( rule__LikeOperand__Op2Assignment_0 ) ) | ( ( rule__LikeOperand__Fop2Assignment_1 ) ) | ( ( rule__LikeOperand__FcastAssignment_2 ) ) | ( ( rule__LikeOperand__FparamAssignment_3 ) ) )
            int alt25=4;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt25=1;
                }
                break;
            case RULE_ID:
                {
                alt25=2;
                }
                break;
            case CAST:
                {
                alt25=3;
                }
                break;
            case RULE_JRPARAM:
                {
                alt25=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // InternalSqlParser.g:3853:1: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    {
                    // InternalSqlParser.g:3853:1: ( ( rule__LikeOperand__Op2Assignment_0 ) )
                    // InternalSqlParser.g:3854:1: ( rule__LikeOperand__Op2Assignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }
                    // InternalSqlParser.g:3855:1: ( rule__LikeOperand__Op2Assignment_0 )
                    // InternalSqlParser.g:3855:2: rule__LikeOperand__Op2Assignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Op2Assignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getOp2Assignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3859:6: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    {
                    // InternalSqlParser.g:3859:6: ( ( rule__LikeOperand__Fop2Assignment_1 ) )
                    // InternalSqlParser.g:3860:1: ( rule__LikeOperand__Fop2Assignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }
                    // InternalSqlParser.g:3861:1: ( rule__LikeOperand__Fop2Assignment_1 )
                    // InternalSqlParser.g:3861:2: rule__LikeOperand__Fop2Assignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__Fop2Assignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFop2Assignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3865:6: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    {
                    // InternalSqlParser.g:3865:6: ( ( rule__LikeOperand__FcastAssignment_2 ) )
                    // InternalSqlParser.g:3866:1: ( rule__LikeOperand__FcastAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }
                    // InternalSqlParser.g:3867:1: ( rule__LikeOperand__FcastAssignment_2 )
                    // InternalSqlParser.g:3867:2: rule__LikeOperand__FcastAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FcastAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFcastAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3871:6: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    {
                    // InternalSqlParser.g:3871:6: ( ( rule__LikeOperand__FparamAssignment_3 ) )
                    // InternalSqlParser.g:3872:1: ( rule__LikeOperand__FparamAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }
                    // InternalSqlParser.g:3873:1: ( rule__LikeOperand__FparamAssignment_3 )
                    // InternalSqlParser.g:3873:2: rule__LikeOperand__FparamAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__LikeOperand__FparamAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLikeOperandAccess().getFparamAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Alternatives"


    // $ANTLR start "rule__InOperator__Alternatives_2"
    // InternalSqlParser.g:3882:1: rule__InOperator__Alternatives_2 : ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) );
    public final void rule__InOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3886:1: ( ( ( rule__InOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__InOperator__OpListAssignment_2_1 ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==LeftParenthesis) ) {
                int LA26_1 = input.LA(2);

                if ( ((LA26_1>=RULE_SIGNED_DOUBLE && LA26_1<=RULE_TIMESTAMP)||LA26_1==RULE_STRING_) ) {
                    alt26=2;
                }
                else if ( (LA26_1==SELECT) ) {
                    alt26=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSqlParser.g:3887:1: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3887:1: ( ( rule__InOperator__SubqueryAssignment_2_0 ) )
                    // InternalSqlParser.g:3888:1: ( rule__InOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSqlParser.g:3889:1: ( rule__InOperator__SubqueryAssignment_2_0 )
                    // InternalSqlParser.g:3889:2: rule__InOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3893:6: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3893:6: ( ( rule__InOperator__OpListAssignment_2_1 ) )
                    // InternalSqlParser.g:3894:1: ( rule__InOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSqlParser.g:3895:1: ( rule__InOperator__OpListAssignment_2_1 )
                    // InternalSqlParser.g:3895:2: rule__InOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__InOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Alternatives_2"


    // $ANTLR start "rule__ExistsOperator__Alternatives_2"
    // InternalSqlParser.g:3904:1: rule__ExistsOperator__Alternatives_2 : ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) );
    public final void rule__ExistsOperator__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3908:1: ( ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) ) | ( ( rule__ExistsOperator__OpListAssignment_2_1 ) ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==LeftParenthesis) ) {
                int LA27_1 = input.LA(2);

                if ( ((LA27_1>=RULE_SIGNED_DOUBLE && LA27_1<=RULE_TIMESTAMP)||LA27_1==RULE_STRING_) ) {
                    alt27=2;
                }
                else if ( (LA27_1==SELECT) ) {
                    alt27=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalSqlParser.g:3909:1: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:3909:1: ( ( rule__ExistsOperator__SubqueryAssignment_2_0 ) )
                    // InternalSqlParser.g:3910:1: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }
                    // InternalSqlParser.g:3911:1: ( rule__ExistsOperator__SubqueryAssignment_2_0 )
                    // InternalSqlParser.g:3911:2: rule__ExistsOperator__SubqueryAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__SubqueryAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getSubqueryAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3915:6: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:3915:6: ( ( rule__ExistsOperator__OpListAssignment_2_1 ) )
                    // InternalSqlParser.g:3916:1: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }
                    // InternalSqlParser.g:3917:1: ( rule__ExistsOperator__OpListAssignment_2_1 )
                    // InternalSqlParser.g:3917:2: rule__ExistsOperator__OpListAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExistsOperator__OpListAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExistsOperatorAccess().getOpListAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Alternatives_2"


    // $ANTLR start "rule__OperandGroup__Alternatives"
    // InternalSqlParser.g:3926:1: rule__OperandGroup__Alternatives : ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) );
    public final void rule__OperandGroup__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3930:1: ( ( ruleOperand ) | ( ( rule__OperandGroup__Group_1__0 ) ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==EXTRACT||LA28_0==CAST||LA28_0==CASE||(LA28_0>=RULE_JRPARAM && LA28_0<=RULE_JRNPARAM)||(LA28_0>=RULE_UNSIGNED && LA28_0<=RULE_SIGNED_DOUBLE)||(LA28_0>=RULE_STRING_ && LA28_0<=RULE_ID)) ) {
                alt28=1;
            }
            else if ( (LA28_0==LeftParenthesis) ) {
                int LA28_2 = input.LA(2);

                if ( (LA28_2==EXTRACT||LA28_2==CAST||LA28_2==CASE||LA28_2==LeftParenthesis||(LA28_2>=RULE_JRPARAM && LA28_2<=RULE_JRNPARAM)||(LA28_2>=RULE_UNSIGNED && LA28_2<=RULE_SIGNED_DOUBLE)||(LA28_2>=RULE_STRING_ && LA28_2<=RULE_ID)) ) {
                    alt28=2;
                }
                else if ( (LA28_2==SELECT) ) {
                    alt28=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 28, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalSqlParser.g:3931:1: ( ruleOperand )
                    {
                    // InternalSqlParser.g:3931:1: ( ruleOperand )
                    // InternalSqlParser.g:3932:1: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3937:6: ( ( rule__OperandGroup__Group_1__0 ) )
                    {
                    // InternalSqlParser.g:3937:6: ( ( rule__OperandGroup__Group_1__0 ) )
                    // InternalSqlParser.g:3938:1: ( rule__OperandGroup__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }
                    // InternalSqlParser.g:3939:1: ( rule__OperandGroup__Group_1__0 )
                    // InternalSqlParser.g:3939:2: rule__OperandGroup__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandGroup__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandGroupAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Alternatives"


    // $ANTLR start "rule__Operand__Alternatives_1_0"
    // InternalSqlParser.g:3948:1: rule__Operand__Alternatives_1_0 : ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) );
    public final void rule__Operand__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3952:1: ( ( ( rule__Operand__Group_1_0_0__0 ) ) | ( ( rule__Operand__Group_1_0_1__0 ) ) | ( ( rule__Operand__Group_1_0_2__0 ) ) | ( ( rule__Operand__Group_1_0_3__0 ) ) | ( ( rule__Operand__Group_1_0_4__0 ) ) )
            int alt29=5;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                alt29=1;
                }
                break;
            case HyphenMinus:
                {
                alt29=2;
                }
                break;
            case VerticalLineVerticalLine:
                {
                alt29=3;
                }
                break;
            case RULE_STAR:
                {
                alt29=4;
                }
                break;
            case Solidus:
                {
                alt29=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalSqlParser.g:3953:1: ( ( rule__Operand__Group_1_0_0__0 ) )
                    {
                    // InternalSqlParser.g:3953:1: ( ( rule__Operand__Group_1_0_0__0 ) )
                    // InternalSqlParser.g:3954:1: ( rule__Operand__Group_1_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }
                    // InternalSqlParser.g:3955:1: ( rule__Operand__Group_1_0_0__0 )
                    // InternalSqlParser.g:3955:2: rule__Operand__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3959:6: ( ( rule__Operand__Group_1_0_1__0 ) )
                    {
                    // InternalSqlParser.g:3959:6: ( ( rule__Operand__Group_1_0_1__0 ) )
                    // InternalSqlParser.g:3960:1: ( rule__Operand__Group_1_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }
                    // InternalSqlParser.g:3961:1: ( rule__Operand__Group_1_0_1__0 )
                    // InternalSqlParser.g:3961:2: rule__Operand__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:3965:6: ( ( rule__Operand__Group_1_0_2__0 ) )
                    {
                    // InternalSqlParser.g:3965:6: ( ( rule__Operand__Group_1_0_2__0 ) )
                    // InternalSqlParser.g:3966:1: ( rule__Operand__Group_1_0_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }
                    // InternalSqlParser.g:3967:1: ( rule__Operand__Group_1_0_2__0 )
                    // InternalSqlParser.g:3967:2: rule__Operand__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:3971:6: ( ( rule__Operand__Group_1_0_3__0 ) )
                    {
                    // InternalSqlParser.g:3971:6: ( ( rule__Operand__Group_1_0_3__0 ) )
                    // InternalSqlParser.g:3972:1: ( rule__Operand__Group_1_0_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }
                    // InternalSqlParser.g:3973:1: ( rule__Operand__Group_1_0_3__0 )
                    // InternalSqlParser.g:3973:2: rule__Operand__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:3977:6: ( ( rule__Operand__Group_1_0_4__0 ) )
                    {
                    // InternalSqlParser.g:3977:6: ( ( rule__Operand__Group_1_0_4__0 ) )
                    // InternalSqlParser.g:3978:1: ( rule__Operand__Group_1_0_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }
                    // InternalSqlParser.g:3979:1: ( rule__Operand__Group_1_0_4__0 )
                    // InternalSqlParser.g:3979:2: rule__Operand__Group_1_0_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Operand__Group_1_0_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandAccess().getGroup_1_0_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Alternatives_1_0"


    // $ANTLR start "rule__OperandFragment__Alternatives"
    // InternalSqlParser.g:3988:1: rule__OperandFragment__Alternatives : ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) );
    public final void rule__OperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:3992:1: ( ( ( rule__OperandFragment__ColumnAssignment_0 ) ) | ( ( rule__OperandFragment__XopAssignment_1 ) ) | ( ( rule__OperandFragment__SubqAssignment_2 ) ) | ( ( rule__OperandFragment__FcastAssignment_3 ) ) | ( ( rule__OperandFragment__FextAssignment_4 ) ) | ( ( rule__OperandFragment__FuncAssignment_5 ) ) | ( ( rule__OperandFragment__SqlcaseAssignment_6 ) ) )
            int alt30=7;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA30_1 = input.LA(2);

                if ( (LA30_1==LeftParenthesis) ) {
                    alt30=6;
                }
                else if ( (LA30_1==EOF||LA30_1==STRAIGHT_JOIN||(LA30_1>=KW_FOLLOWING && LA30_1<=INTERSECT)||LA30_1==PRECEDING||LA30_1==BETWEEN||LA30_1==NATURAL||(LA30_1>=EXCEPT && LA30_1<=HAVING)||LA30_1==OFFSET||(LA30_1>=CROSS && LA30_1<=FETCH)||(LA30_1>=GROUP && LA30_1<=MINUS)||(LA30_1>=NULLS && LA30_1<=ORDER)||(LA30_1>=RANGE && LA30_1<=UNION)||LA30_1==WHERE||(LA30_1>=DESC && LA30_1<=FULL)||LA30_1==JOIN||(LA30_1>=LEFT && LA30_1<=LIKE)||LA30_1==ROWS||LA30_1==THEN||LA30_1==WHEN||LA30_1==LeftParenthesisPlusSignRightParenthesis||LA30_1==AND||LA30_1==ASC||LA30_1==END||LA30_1==NOT||LA30_1==ExclamationMarkEqualsSign||(LA30_1>=LessThanSignEqualsSign && LA30_1<=AS)||(LA30_1>=IN && LA30_1<=IS)||(LA30_1>=OR && LA30_1<=VerticalLineVerticalLine)||(LA30_1>=RightParenthesis && LA30_1<=RightCurlyBracket)||(LA30_1>=RULE_JRNPARAM && LA30_1<=RULE_STAR)||(LA30_1>=RULE_STRING && LA30_1<=RULE_ID)) ) {
                    alt30=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 30, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_STRING:
            case RULE_DBNAME:
                {
                alt30=1;
                }
                break;
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt30=2;
                }
                break;
            case LeftParenthesis:
                {
                alt30=3;
                }
                break;
            case CAST:
                {
                alt30=4;
                }
                break;
            case EXTRACT:
                {
                alt30=5;
                }
                break;
            case CASE:
                {
                alt30=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalSqlParser.g:3993:1: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    {
                    // InternalSqlParser.g:3993:1: ( ( rule__OperandFragment__ColumnAssignment_0 ) )
                    // InternalSqlParser.g:3994:1: ( rule__OperandFragment__ColumnAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }
                    // InternalSqlParser.g:3995:1: ( rule__OperandFragment__ColumnAssignment_0 )
                    // InternalSqlParser.g:3995:2: rule__OperandFragment__ColumnAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__ColumnAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getColumnAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:3999:6: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    {
                    // InternalSqlParser.g:3999:6: ( ( rule__OperandFragment__XopAssignment_1 ) )
                    // InternalSqlParser.g:4000:1: ( rule__OperandFragment__XopAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }
                    // InternalSqlParser.g:4001:1: ( rule__OperandFragment__XopAssignment_1 )
                    // InternalSqlParser.g:4001:2: rule__OperandFragment__XopAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__XopAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getXopAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4005:6: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4005:6: ( ( rule__OperandFragment__SubqAssignment_2 ) )
                    // InternalSqlParser.g:4006:1: ( rule__OperandFragment__SubqAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }
                    // InternalSqlParser.g:4007:1: ( rule__OperandFragment__SubqAssignment_2 )
                    // InternalSqlParser.g:4007:2: rule__OperandFragment__SubqAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SubqAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSubqAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4011:6: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    {
                    // InternalSqlParser.g:4011:6: ( ( rule__OperandFragment__FcastAssignment_3 ) )
                    // InternalSqlParser.g:4012:1: ( rule__OperandFragment__FcastAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }
                    // InternalSqlParser.g:4013:1: ( rule__OperandFragment__FcastAssignment_3 )
                    // InternalSqlParser.g:4013:2: rule__OperandFragment__FcastAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FcastAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFcastAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4017:6: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    {
                    // InternalSqlParser.g:4017:6: ( ( rule__OperandFragment__FextAssignment_4 ) )
                    // InternalSqlParser.g:4018:1: ( rule__OperandFragment__FextAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }
                    // InternalSqlParser.g:4019:1: ( rule__OperandFragment__FextAssignment_4 )
                    // InternalSqlParser.g:4019:2: rule__OperandFragment__FextAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FextAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFextAssignment_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:4023:6: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    {
                    // InternalSqlParser.g:4023:6: ( ( rule__OperandFragment__FuncAssignment_5 ) )
                    // InternalSqlParser.g:4024:1: ( rule__OperandFragment__FuncAssignment_5 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }
                    // InternalSqlParser.g:4025:1: ( rule__OperandFragment__FuncAssignment_5 )
                    // InternalSqlParser.g:4025:2: rule__OperandFragment__FuncAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__FuncAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getFuncAssignment_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:4029:6: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    {
                    // InternalSqlParser.g:4029:6: ( ( rule__OperandFragment__SqlcaseAssignment_6 ) )
                    // InternalSqlParser.g:4030:1: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }
                    // InternalSqlParser.g:4031:1: ( rule__OperandFragment__SqlcaseAssignment_6 )
                    // InternalSqlParser.g:4031:2: rule__OperandFragment__SqlcaseAssignment_6
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFragment__SqlcaseAssignment_6();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFragmentAccess().getSqlcaseAssignment_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__Alternatives"


    // $ANTLR start "rule__OperandFunction__Alternatives_2"
    // InternalSqlParser.g:4040:1: rule__OperandFunction__Alternatives_2 : ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) );
    public final void rule__OperandFunction__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4044:1: ( ( ( rule__OperandFunction__StarAssignment_2_0 ) ) | ( ( rule__OperandFunction__ArgsAssignment_2_1 ) ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_STAR) ) {
                alt31=1;
            }
            else if ( (LA31_0==DISTINCT||LA31_0==EXTRACT||LA31_0==CAST||LA31_0==CASE||LA31_0==ALL||LA31_0==LeftParenthesis||(LA31_0>=RULE_JRPARAM && LA31_0<=RULE_JRNPARAM)||(LA31_0>=RULE_UNSIGNED && LA31_0<=RULE_SIGNED_DOUBLE)||(LA31_0>=RULE_STRING_ && LA31_0<=RULE_ID)) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalSqlParser.g:4045:1: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:4045:1: ( ( rule__OperandFunction__StarAssignment_2_0 ) )
                    // InternalSqlParser.g:4046:1: ( rule__OperandFunction__StarAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }
                    // InternalSqlParser.g:4047:1: ( rule__OperandFunction__StarAssignment_2_0 )
                    // InternalSqlParser.g:4047:2: rule__OperandFunction__StarAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__StarAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getStarAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4051:6: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    {
                    // InternalSqlParser.g:4051:6: ( ( rule__OperandFunction__ArgsAssignment_2_1 ) )
                    // InternalSqlParser.g:4052:1: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }
                    // InternalSqlParser.g:4053:1: ( rule__OperandFunction__ArgsAssignment_2_1 )
                    // InternalSqlParser.g:4053:2: rule__OperandFunction__ArgsAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__ArgsAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOperandFunctionAccess().getArgsAssignment_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Alternatives_2"


    // $ANTLR start "rule__WindowingClause__Alternatives_0"
    // InternalSqlParser.g:4062:1: rule__WindowingClause__Alternatives_0 : ( ( ROWS ) | ( RANGE ) );
    public final void rule__WindowingClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4066:1: ( ( ROWS ) | ( RANGE ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==ROWS) ) {
                alt32=1;
            }
            else if ( (LA32_0==RANGE) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalSqlParser.g:4067:1: ( ROWS )
                    {
                    // InternalSqlParser.g:4067:1: ( ROWS )
                    // InternalSqlParser.g:4068:1: ROWS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }
                    match(input,ROWS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getROWSKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4075:6: ( RANGE )
                    {
                    // InternalSqlParser.g:4075:6: ( RANGE )
                    // InternalSqlParser.g:4076:1: RANGE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }
                    match(input,RANGE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getRANGEKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_0"


    // $ANTLR start "rule__WindowingClause__Alternatives_1"
    // InternalSqlParser.g:4088:1: rule__WindowingClause__Alternatives_1 : ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) );
    public final void rule__WindowingClause__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4092:1: ( ( ruleWindowingClauseBetween ) | ( ruleWindowingClauseOperandPreceding ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==BETWEEN) ) {
                alt33=1;
            }
            else if ( (LA33_0==UNBOUNDED||LA33_0==CURRENT||LA33_0==EXTRACT||LA33_0==CAST||LA33_0==CASE||LA33_0==LeftParenthesis||(LA33_0>=RULE_JRPARAM && LA33_0<=RULE_JRNPARAM)||(LA33_0>=RULE_UNSIGNED && LA33_0<=RULE_SIGNED_DOUBLE)||(LA33_0>=RULE_STRING_ && LA33_0<=RULE_ID)) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSqlParser.g:4093:1: ( ruleWindowingClauseBetween )
                    {
                    // InternalSqlParser.g:4093:1: ( ruleWindowingClauseBetween )
                    // InternalSqlParser.g:4094:1: ruleWindowingClauseBetween
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseBetween();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseBetweenParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4099:6: ( ruleWindowingClauseOperandPreceding )
                    {
                    // InternalSqlParser.g:4099:6: ( ruleWindowingClauseOperandPreceding )
                    // InternalSqlParser.g:4100:1: ruleWindowingClauseOperandPreceding
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWindowingClauseOperandPreceding();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseAccess().getWindowingClauseOperandPrecedingParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1"
    // InternalSqlParser.g:4110:1: rule__WindowingClauseOperandFollowing__Alternatives_1 : ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4114:1: ( ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) ) )
            int alt34=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt34=1;
                }
                break;
            case CURRENT:
                {
                alt34=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt34=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalSqlParser.g:4115:1: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    {
                    // InternalSqlParser.g:4115:1: ( ( rule__WindowingClauseOperandFollowing__Group_1_0__0 ) )
                    // InternalSqlParser.g:4116:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }
                    // InternalSqlParser.g:4117:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__0 )
                    // InternalSqlParser.g:4117:2: rule__WindowingClauseOperandFollowing__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4121:6: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:4121:6: ( ( rule__WindowingClauseOperandFollowing__Group_1_1__0 ) )
                    // InternalSqlParser.g:4122:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }
                    // InternalSqlParser.g:4123:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__0 )
                    // InternalSqlParser.g:4123:2: rule__WindowingClauseOperandFollowing__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4127:6: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    {
                    // InternalSqlParser.g:4127:6: ( ( rule__WindowingClauseOperandFollowing__Group_1_2__0 ) )
                    // InternalSqlParser.g:4128:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }
                    // InternalSqlParser.g:4129:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0 )
                    // InternalSqlParser.g:4129:2: rule__WindowingClauseOperandFollowing__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandFollowing__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"
    // InternalSqlParser.g:4138:1: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandFollowing__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4142:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==PRECEDING) ) {
                alt35=1;
            }
            else if ( (LA35_0==KW_FOLLOWING) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalSqlParser.g:4143:1: ( PRECEDING )
                    {
                    // InternalSqlParser.g:4143:1: ( PRECEDING )
                    // InternalSqlParser.g:4144:1: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4151:6: ( KW_FOLLOWING )
                    {
                    // InternalSqlParser.g:4151:6: ( KW_FOLLOWING )
                    // InternalSqlParser.g:4152:1: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Alternatives_1_2_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1"
    // InternalSqlParser.g:4164:1: rule__WindowingClauseOperandPreceding__Alternatives_1 : ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4168:1: ( ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) ) | ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) ) )
            int alt36=3;
            switch ( input.LA(1) ) {
            case UNBOUNDED:
                {
                alt36=1;
                }
                break;
            case CURRENT:
                {
                alt36=2;
                }
                break;
            case EXTRACT:
            case CAST:
            case CASE:
            case LeftParenthesis:
            case RULE_JRPARAM:
            case RULE_JRNPARAM:
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
            case RULE_STRING:
            case RULE_DBNAME:
            case RULE_ID:
                {
                alt36=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalSqlParser.g:4169:1: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    {
                    // InternalSqlParser.g:4169:1: ( ( rule__WindowingClauseOperandPreceding__Group_1_0__0 ) )
                    // InternalSqlParser.g:4170:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }
                    // InternalSqlParser.g:4171:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__0 )
                    // InternalSqlParser.g:4171:2: rule__WindowingClauseOperandPreceding__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4175:6: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:4175:6: ( ( rule__WindowingClauseOperandPreceding__Group_1_1__0 ) )
                    // InternalSqlParser.g:4176:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }
                    // InternalSqlParser.g:4177:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__0 )
                    // InternalSqlParser.g:4177:2: rule__WindowingClauseOperandPreceding__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4181:6: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    {
                    // InternalSqlParser.g:4181:6: ( ( rule__WindowingClauseOperandPreceding__Group_1_2__0 ) )
                    // InternalSqlParser.g:4182:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }
                    // InternalSqlParser.g:4183:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0 )
                    // InternalSqlParser.g:4183:2: rule__WindowingClauseOperandPreceding__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__WindowingClauseOperandPreceding__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getGroup_1_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"
    // InternalSqlParser.g:4192:1: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 : ( ( PRECEDING ) | ( KW_FOLLOWING ) );
    public final void rule__WindowingClauseOperandPreceding__Alternatives_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4196:1: ( ( PRECEDING ) | ( KW_FOLLOWING ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==PRECEDING) ) {
                alt37=1;
            }
            else if ( (LA37_0==KW_FOLLOWING) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalSqlParser.g:4197:1: ( PRECEDING )
                    {
                    // InternalSqlParser.g:4197:1: ( PRECEDING )
                    // InternalSqlParser.g:4198:1: PRECEDING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }
                    match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4205:6: ( KW_FOLLOWING )
                    {
                    // InternalSqlParser.g:4205:6: ( KW_FOLLOWING )
                    // InternalSqlParser.g:4206:1: KW_FOLLOWING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }
                    match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getFOLLOWINGKeyword_1_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Alternatives_1_2_1"


    // $ANTLR start "rule__OrderByClause__Alternatives_0"
    // InternalSqlParser.g:4218:1: rule__OrderByClause__Alternatives_0 : ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) );
    public final void rule__OrderByClause__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4222:1: ( ( ( rule__OrderByClause__Group_0_0__0 ) ) | ( ( rule__OrderByClause__Group_0_1__0 ) ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==ORDER) ) {
                int LA38_1 = input.LA(2);

                if ( (LA38_1==BY) ) {
                    alt38=1;
                }
                else if ( (LA38_1==SIBLINGS) ) {
                    alt38=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalSqlParser.g:4223:1: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    {
                    // InternalSqlParser.g:4223:1: ( ( rule__OrderByClause__Group_0_0__0 ) )
                    // InternalSqlParser.g:4224:1: ( rule__OrderByClause__Group_0_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }
                    // InternalSqlParser.g:4225:1: ( rule__OrderByClause__Group_0_0__0 )
                    // InternalSqlParser.g:4225:2: rule__OrderByClause__Group_0_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4229:6: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    {
                    // InternalSqlParser.g:4229:6: ( ( rule__OrderByClause__Group_0_1__0 ) )
                    // InternalSqlParser.g:4230:1: ( rule__OrderByClause__Group_0_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }
                    // InternalSqlParser.g:4231:1: ( rule__OrderByClause__Group_0_1__0 )
                    // InternalSqlParser.g:4231:2: rule__OrderByClause__Group_0_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClause__Group_0_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseAccess().getGroup_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Alternatives_0"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_1"
    // InternalSqlParser.g:4240:1: rule__OrderByClauseArg__Alternatives_1 : ( ( ASC ) | ( DESC ) );
    public final void rule__OrderByClauseArg__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4244:1: ( ( ASC ) | ( DESC ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==ASC) ) {
                alt39=1;
            }
            else if ( (LA39_0==DESC) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalSqlParser.g:4245:1: ( ASC )
                    {
                    // InternalSqlParser.g:4245:1: ( ASC )
                    // InternalSqlParser.g:4246:1: ASC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }
                    match(input,ASC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getASCKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4253:6: ( DESC )
                    {
                    // InternalSqlParser.g:4253:6: ( DESC )
                    // InternalSqlParser.g:4254:1: DESC
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }
                    match(input,DESC,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getDESCKeyword_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_1"


    // $ANTLR start "rule__OrderByClauseArg__Alternatives_2_1"
    // InternalSqlParser.g:4266:1: rule__OrderByClauseArg__Alternatives_2_1 : ( ( FIRST ) | ( LAST ) );
    public final void rule__OrderByClauseArg__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4270:1: ( ( FIRST ) | ( LAST ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==FIRST) ) {
                alt40=1;
            }
            else if ( (LA40_0==LAST) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalSqlParser.g:4271:1: ( FIRST )
                    {
                    // InternalSqlParser.g:4271:1: ( FIRST )
                    // InternalSqlParser.g:4272:1: FIRST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }
                    match(input,FIRST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getFIRSTKeyword_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4279:6: ( LAST )
                    {
                    // InternalSqlParser.g:4279:6: ( LAST )
                    // InternalSqlParser.g:4280:1: LAST
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }
                    match(input,LAST,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOrderByClauseArgAccess().getLASTKeyword_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Alternatives_2_1"


    // $ANTLR start "rule__QueryPartitionClause__Alternatives_2"
    // InternalSqlParser.g:4292:1: rule__QueryPartitionClause__Alternatives_2 : ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) );
    public final void rule__QueryPartitionClause__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4296:1: ( ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) ) | ( ( rule__QueryPartitionClause__Group_2_1__0 ) ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==EXTRACT||LA41_0==CAST||LA41_0==CASE||(LA41_0>=RULE_JRPARAM && LA41_0<=RULE_JRNPARAM)||(LA41_0>=RULE_UNSIGNED && LA41_0<=RULE_SIGNED_DOUBLE)||(LA41_0>=RULE_STRING_ && LA41_0<=RULE_ID)) ) {
                alt41=1;
            }
            else if ( (LA41_0==LeftParenthesis) ) {
                int LA41_2 = input.LA(2);

                if ( (LA41_2==EXTRACT||LA41_2==CAST||LA41_2==CASE||LA41_2==LeftParenthesis||(LA41_2>=RULE_JRPARAM && LA41_2<=RULE_JRNPARAM)||(LA41_2>=RULE_UNSIGNED && LA41_2<=RULE_SIGNED_DOUBLE)||(LA41_2>=RULE_STRING_ && LA41_2<=RULE_ID)) ) {
                    alt41=2;
                }
                else if ( (LA41_2==SELECT) ) {
                    alt41=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 41, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalSqlParser.g:4297:1: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    {
                    // InternalSqlParser.g:4297:1: ( ( rule__QueryPartitionClause__ArgsAssignment_2_0 ) )
                    // InternalSqlParser.g:4298:1: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }
                    // InternalSqlParser.g:4299:1: ( rule__QueryPartitionClause__ArgsAssignment_2_0 )
                    // InternalSqlParser.g:4299:2: rule__QueryPartitionClause__ArgsAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__ArgsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getArgsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4303:6: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    {
                    // InternalSqlParser.g:4303:6: ( ( rule__QueryPartitionClause__Group_2_1__0 ) )
                    // InternalSqlParser.g:4304:1: ( rule__QueryPartitionClause__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }
                    // InternalSqlParser.g:4305:1: ( rule__QueryPartitionClause__Group_2_1__0 )
                    // InternalSqlParser.g:4305:2: rule__QueryPartitionClause__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__QueryPartitionClause__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getQueryPartitionClauseAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Alternatives_2"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAlternatives_0"
    // InternalSqlParser.g:4314:1: rule__OpFunctionArgOperand__OpAlternatives_0 : ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) );
    public final void rule__OpFunctionArgOperand__OpAlternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4318:1: ( ( ruleOpFunctionArgAgregate ) | ( ruleOperand ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==DISTINCT||LA42_0==ALL) ) {
                alt42=1;
            }
            else if ( (LA42_0==EXTRACT||LA42_0==CAST||LA42_0==CASE||LA42_0==LeftParenthesis||(LA42_0>=RULE_JRPARAM && LA42_0<=RULE_JRNPARAM)||(LA42_0>=RULE_UNSIGNED && LA42_0<=RULE_SIGNED_DOUBLE)||(LA42_0>=RULE_STRING_ && LA42_0<=RULE_ID)) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalSqlParser.g:4319:1: ( ruleOpFunctionArgAgregate )
                    {
                    // InternalSqlParser.g:4319:1: ( ruleOpFunctionArgAgregate )
                    // InternalSqlParser.g:4320:1: ruleOpFunctionArgAgregate
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpFunctionArgAgregate();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOpFunctionArgAgregateParserRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4325:6: ( ruleOperand )
                    {
                    // InternalSqlParser.g:4325:6: ( ruleOperand )
                    // InternalSqlParser.g:4326:1: ruleOperand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperand();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgOperandAccess().getOpOperandParserRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAlternatives_0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Alternatives_0"
    // InternalSqlParser.g:4336:1: rule__OpFunctionArgAgregate__Alternatives_0 : ( ( ALL ) | ( DISTINCT ) );
    public final void rule__OpFunctionArgAgregate__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4340:1: ( ( ALL ) | ( DISTINCT ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==ALL) ) {
                alt43=1;
            }
            else if ( (LA43_0==DISTINCT) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalSqlParser.g:4341:1: ( ALL )
                    {
                    // InternalSqlParser.g:4341:1: ( ALL )
                    // InternalSqlParser.g:4342:1: ALL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }
                    match(input,ALL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getALLKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4349:6: ( DISTINCT )
                    {
                    // InternalSqlParser.g:4349:6: ( DISTINCT )
                    // InternalSqlParser.g:4350:1: DISTINCT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getOpFunctionArgAgregateAccess().getDISTINCTKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Alternatives_0"


    // $ANTLR start "rule__XOperandFragment__Alternatives"
    // InternalSqlParser.g:4362:1: rule__XOperandFragment__Alternatives : ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) );
    public final void rule__XOperandFragment__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4366:1: ( ( ( rule__XOperandFragment__ParamAssignment_0 ) ) | ( ( rule__XOperandFragment__EparamAssignment_1 ) ) | ( ( rule__XOperandFragment__ScalarAssignment_2 ) ) )
            int alt44=3;
            switch ( input.LA(1) ) {
            case RULE_JRPARAM:
                {
                alt44=1;
                }
                break;
            case RULE_JRNPARAM:
                {
                alt44=2;
                }
                break;
            case RULE_UNSIGNED:
            case RULE_INT:
            case RULE_SIGNED_DOUBLE:
            case RULE_STRING_:
                {
                alt44=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }

            switch (alt44) {
                case 1 :
                    // InternalSqlParser.g:4367:1: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    {
                    // InternalSqlParser.g:4367:1: ( ( rule__XOperandFragment__ParamAssignment_0 ) )
                    // InternalSqlParser.g:4368:1: ( rule__XOperandFragment__ParamAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }
                    // InternalSqlParser.g:4369:1: ( rule__XOperandFragment__ParamAssignment_0 )
                    // InternalSqlParser.g:4369:2: rule__XOperandFragment__ParamAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ParamAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getParamAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4373:6: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    {
                    // InternalSqlParser.g:4373:6: ( ( rule__XOperandFragment__EparamAssignment_1 ) )
                    // InternalSqlParser.g:4374:1: ( rule__XOperandFragment__EparamAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }
                    // InternalSqlParser.g:4375:1: ( rule__XOperandFragment__EparamAssignment_1 )
                    // InternalSqlParser.g:4375:2: rule__XOperandFragment__EparamAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__EparamAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getEparamAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4379:6: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4379:6: ( ( rule__XOperandFragment__ScalarAssignment_2 ) )
                    // InternalSqlParser.g:4380:1: ( rule__XOperandFragment__ScalarAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }
                    // InternalSqlParser.g:4381:1: ( rule__XOperandFragment__ScalarAssignment_2 )
                    // InternalSqlParser.g:4381:2: rule__XOperandFragment__ScalarAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__XOperandFragment__ScalarAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXOperandFragmentAccess().getScalarAssignment_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__Alternatives"


    // $ANTLR start "rule__ScalarOperand__Alternatives"
    // InternalSqlParser.g:4390:1: rule__ScalarOperand__Alternatives : ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) );
    public final void rule__ScalarOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4394:1: ( ( ( rule__ScalarOperand__SostrAssignment_0 ) ) | ( ( rule__ScalarOperand__SodblAssignment_1 ) ) | ( ( rule__ScalarOperand__SodateAssignment_2 ) ) | ( ( rule__ScalarOperand__SotimeAssignment_3 ) ) | ( ( rule__ScalarOperand__SodtAssignment_4 ) ) )
            int alt45=5;
            switch ( input.LA(1) ) {
            case RULE_STRING_:
                {
                alt45=1;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt45=2;
                }
                break;
            case RULE_DATE:
                {
                alt45=3;
                }
                break;
            case RULE_TIME:
                {
                alt45=4;
                }
                break;
            case RULE_TIMESTAMP:
                {
                alt45=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // InternalSqlParser.g:4395:1: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    {
                    // InternalSqlParser.g:4395:1: ( ( rule__ScalarOperand__SostrAssignment_0 ) )
                    // InternalSqlParser.g:4396:1: ( rule__ScalarOperand__SostrAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }
                    // InternalSqlParser.g:4397:1: ( rule__ScalarOperand__SostrAssignment_0 )
                    // InternalSqlParser.g:4397:2: rule__ScalarOperand__SostrAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SostrAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSostrAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4401:6: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    {
                    // InternalSqlParser.g:4401:6: ( ( rule__ScalarOperand__SodblAssignment_1 ) )
                    // InternalSqlParser.g:4402:1: ( rule__ScalarOperand__SodblAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }
                    // InternalSqlParser.g:4403:1: ( rule__ScalarOperand__SodblAssignment_1 )
                    // InternalSqlParser.g:4403:2: rule__ScalarOperand__SodblAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodblAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodblAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4407:6: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4407:6: ( ( rule__ScalarOperand__SodateAssignment_2 ) )
                    // InternalSqlParser.g:4408:1: ( rule__ScalarOperand__SodateAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }
                    // InternalSqlParser.g:4409:1: ( rule__ScalarOperand__SodateAssignment_2 )
                    // InternalSqlParser.g:4409:2: rule__ScalarOperand__SodateAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodateAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodateAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4413:6: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    {
                    // InternalSqlParser.g:4413:6: ( ( rule__ScalarOperand__SotimeAssignment_3 ) )
                    // InternalSqlParser.g:4414:1: ( rule__ScalarOperand__SotimeAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }
                    // InternalSqlParser.g:4415:1: ( rule__ScalarOperand__SotimeAssignment_3 )
                    // InternalSqlParser.g:4415:2: rule__ScalarOperand__SotimeAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SotimeAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSotimeAssignment_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4419:6: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    {
                    // InternalSqlParser.g:4419:6: ( ( rule__ScalarOperand__SodtAssignment_4 ) )
                    // InternalSqlParser.g:4420:1: ( rule__ScalarOperand__SodtAssignment_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }
                    // InternalSqlParser.g:4421:1: ( rule__ScalarOperand__SodtAssignment_4 )
                    // InternalSqlParser.g:4421:2: rule__ScalarOperand__SodtAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarOperand__SodtAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarOperandAccess().getSodtAssignment_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__Alternatives"


    // $ANTLR start "rule__ScalarNumberOperand__Alternatives"
    // InternalSqlParser.g:4430:1: rule__ScalarNumberOperand__Alternatives : ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) );
    public final void rule__ScalarNumberOperand__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4434:1: ( ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) ) | ( ( rule__ScalarNumberOperand__SointAssignment_1 ) ) | ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) ) | ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) ) )
            int alt46=4;
            switch ( input.LA(1) ) {
            case RULE_UNSIGNED:
                {
                alt46=1;
                }
                break;
            case RULE_INT:
                {
                alt46=2;
                }
                break;
            case RULE_SIGNED_DOUBLE:
                {
                alt46=3;
                }
                break;
            case RULE_STRING_:
                {
                alt46=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }

            switch (alt46) {
                case 1 :
                    // InternalSqlParser.g:4435:1: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    {
                    // InternalSqlParser.g:4435:1: ( ( rule__ScalarNumberOperand__SoUIntAssignment_0 ) )
                    // InternalSqlParser.g:4436:1: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }
                    // InternalSqlParser.g:4437:1: ( rule__ScalarNumberOperand__SoUIntAssignment_0 )
                    // InternalSqlParser.g:4437:2: rule__ScalarNumberOperand__SoUIntAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SoUIntAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSoUIntAssignment_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4441:6: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    {
                    // InternalSqlParser.g:4441:6: ( ( rule__ScalarNumberOperand__SointAssignment_1 ) )
                    // InternalSqlParser.g:4442:1: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }
                    // InternalSqlParser.g:4443:1: ( rule__ScalarNumberOperand__SointAssignment_1 )
                    // InternalSqlParser.g:4443:2: rule__ScalarNumberOperand__SointAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SointAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSointAssignment_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4447:6: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    {
                    // InternalSqlParser.g:4447:6: ( ( rule__ScalarNumberOperand__SodblAssignment_2 ) )
                    // InternalSqlParser.g:4448:1: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }
                    // InternalSqlParser.g:4449:1: ( rule__ScalarNumberOperand__SodblAssignment_2 )
                    // InternalSqlParser.g:4449:2: rule__ScalarNumberOperand__SodblAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SodblAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSodblAssignment_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4453:6: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    {
                    // InternalSqlParser.g:4453:6: ( ( rule__ScalarNumberOperand__SostrAssignment_3 ) )
                    // InternalSqlParser.g:4454:1: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }
                    // InternalSqlParser.g:4455:1: ( rule__ScalarNumberOperand__SostrAssignment_3 )
                    // InternalSqlParser.g:4455:2: rule__ScalarNumberOperand__SostrAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__ScalarNumberOperand__SostrAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getScalarNumberOperandAccess().getSostrAssignment_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__Alternatives"


    // $ANTLR start "rule__SQLCASE__Alternatives_1"
    // InternalSqlParser.g:4464:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );
    public final void rule__SQLCASE__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4468:1: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) )
            int alt47=2;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // InternalSqlParser.g:4469:1: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:4469:1: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
                    // InternalSqlParser.g:4470:1: ( rule__SQLCASE__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSqlParser.g:4471:1: ( rule__SQLCASE__WopAssignment_1_0 )
                    // InternalSqlParser.g:4471:2: rule__SQLCASE__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4475:6: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    {
                    // InternalSqlParser.g:4475:6: ( ( rule__SQLCASE__ExprAssignment_1_1 ) )
                    // InternalSqlParser.g:4476:1: ( rule__SQLCASE__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSqlParser.g:4477:1: ( rule__SQLCASE__ExprAssignment_1_1 )
                    // InternalSqlParser.g:4477:2: rule__SQLCASE__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSQLCASEAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Alternatives_1"


    // $ANTLR start "rule__SqlCaseWhen__Alternatives_1"
    // InternalSqlParser.g:4486:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );
    public final void rule__SqlCaseWhen__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4490:1: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) )
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalSqlParser.g:4491:1: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    {
                    // InternalSqlParser.g:4491:1: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
                    // InternalSqlParser.g:4492:1: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }
                    // InternalSqlParser.g:4493:1: ( rule__SqlCaseWhen__WopAssignment_1_0 )
                    // InternalSqlParser.g:4493:2: rule__SqlCaseWhen__WopAssignment_1_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__WopAssignment_1_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4497:6: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    {
                    // InternalSqlParser.g:4497:6: ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) )
                    // InternalSqlParser.g:4498:1: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }
                    // InternalSqlParser.g:4499:1: ( rule__SqlCaseWhen__ExprAssignment_1_1 )
                    // InternalSqlParser.g:4499:2: rule__SqlCaseWhen__ExprAssignment_1_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__ExprAssignment_1_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSqlCaseWhenAccess().getExprAssignment_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1"
    // InternalSqlParser.g:4508:1: rule__JoinType__Alternatives_1 : ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) );
    public final void rule__JoinType__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4512:1: ( ( INNER ) | ( ( rule__JoinType__Group_1_1__0 ) ) | ( CROSS ) | ( STRAIGHT_JOIN ) )
            int alt49=4;
            switch ( input.LA(1) ) {
            case INNER:
                {
                alt49=1;
                }
                break;
            case RIGHT:
            case FULL:
            case LEFT:
                {
                alt49=2;
                }
                break;
            case CROSS:
                {
                alt49=3;
                }
                break;
            case STRAIGHT_JOIN:
                {
                alt49=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }

            switch (alt49) {
                case 1 :
                    // InternalSqlParser.g:4513:1: ( INNER )
                    {
                    // InternalSqlParser.g:4513:1: ( INNER )
                    // InternalSqlParser.g:4514:1: INNER
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }
                    match(input,INNER,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getINNERKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4521:6: ( ( rule__JoinType__Group_1_1__0 ) )
                    {
                    // InternalSqlParser.g:4521:6: ( ( rule__JoinType__Group_1_1__0 ) )
                    // InternalSqlParser.g:4522:1: ( rule__JoinType__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }
                    // InternalSqlParser.g:4523:1: ( rule__JoinType__Group_1_1__0 )
                    // InternalSqlParser.g:4523:2: rule__JoinType__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4527:6: ( CROSS )
                    {
                    // InternalSqlParser.g:4527:6: ( CROSS )
                    // InternalSqlParser.g:4528:1: CROSS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }
                    match(input,CROSS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getCROSSKeyword_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4535:6: ( STRAIGHT_JOIN )
                    {
                    // InternalSqlParser.g:4535:6: ( STRAIGHT_JOIN )
                    // InternalSqlParser.g:4536:1: STRAIGHT_JOIN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }
                    match(input,STRAIGHT_JOIN,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getSTRAIGHT_JOINKeyword_1_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1"


    // $ANTLR start "rule__JoinType__Alternatives_1_1_0"
    // InternalSqlParser.g:4548:1: rule__JoinType__Alternatives_1_1_0 : ( ( LEFT ) | ( RIGHT ) | ( FULL ) );
    public final void rule__JoinType__Alternatives_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4552:1: ( ( LEFT ) | ( RIGHT ) | ( FULL ) )
            int alt50=3;
            switch ( input.LA(1) ) {
            case LEFT:
                {
                alt50=1;
                }
                break;
            case RIGHT:
                {
                alt50=2;
                }
                break;
            case FULL:
                {
                alt50=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }

            switch (alt50) {
                case 1 :
                    // InternalSqlParser.g:4553:1: ( LEFT )
                    {
                    // InternalSqlParser.g:4553:1: ( LEFT )
                    // InternalSqlParser.g:4554:1: LEFT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }
                    match(input,LEFT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getLEFTKeyword_1_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4561:6: ( RIGHT )
                    {
                    // InternalSqlParser.g:4561:6: ( RIGHT )
                    // InternalSqlParser.g:4562:1: RIGHT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }
                    match(input,RIGHT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getRIGHTKeyword_1_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4569:6: ( FULL )
                    {
                    // InternalSqlParser.g:4569:6: ( FULL )
                    // InternalSqlParser.g:4570:1: FULL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }
                    match(input,FULL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getJoinTypeAccess().getFULLKeyword_1_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Alternatives_1_1_0"


    // $ANTLR start "rule__DBID__Alternatives"
    // InternalSqlParser.g:4582:1: rule__DBID__Alternatives : ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) );
    public final void rule__DBID__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4586:1: ( ( RULE_ID ) | ( RULE_DBNAME ) | ( RULE_STRING ) )
            int alt51=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt51=1;
                }
                break;
            case RULE_DBNAME:
                {
                alt51=2;
                }
                break;
            case RULE_STRING:
                {
                alt51=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // InternalSqlParser.g:4587:1: ( RULE_ID )
                    {
                    // InternalSqlParser.g:4587:1: ( RULE_ID )
                    // InternalSqlParser.g:4588:1: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4593:6: ( RULE_DBNAME )
                    {
                    // InternalSqlParser.g:4593:6: ( RULE_DBNAME )
                    // InternalSqlParser.g:4594:1: RULE_DBNAME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }
                    match(input,RULE_DBNAME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getDBNAMETerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4599:6: ( RULE_STRING )
                    {
                    // InternalSqlParser.g:4599:6: ( RULE_STRING )
                    // InternalSqlParser.g:4600:1: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDBIDAccess().getSTRINGTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DBID__Alternatives"


    // $ANTLR start "rule__XFunction__Alternatives"
    // InternalSqlParser.g:4610:1: rule__XFunction__Alternatives : ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) );
    public final void rule__XFunction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4614:1: ( ( ( IN_1 ) ) | ( ( NOTIN ) ) | ( ( EQUAL ) ) | ( ( NOTEQUAL ) ) | ( ( LESS ) ) | ( ( LESS_1 ) ) | ( ( GREATER_1 ) ) | ( ( GREATER ) ) | ( ( BETWEEN_1 ) ) | ( ( BETWEEN_4 ) ) | ( ( BETWEEN_3 ) ) | ( ( BETWEEN_2 ) ) )
            int alt52=12;
            switch ( input.LA(1) ) {
            case IN_1:
                {
                alt52=1;
                }
                break;
            case NOTIN:
                {
                alt52=2;
                }
                break;
            case EQUAL:
                {
                alt52=3;
                }
                break;
            case NOTEQUAL:
                {
                alt52=4;
                }
                break;
            case LESS:
                {
                alt52=5;
                }
                break;
            case LESS_1:
                {
                alt52=6;
                }
                break;
            case GREATER_1:
                {
                alt52=7;
                }
                break;
            case GREATER:
                {
                alt52=8;
                }
                break;
            case BETWEEN_1:
                {
                alt52=9;
                }
                break;
            case BETWEEN_4:
                {
                alt52=10;
                }
                break;
            case BETWEEN_3:
                {
                alt52=11;
                }
                break;
            case BETWEEN_2:
                {
                alt52=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalSqlParser.g:4615:1: ( ( IN_1 ) )
                    {
                    // InternalSqlParser.g:4615:1: ( ( IN_1 ) )
                    // InternalSqlParser.g:4616:1: ( IN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }
                    // InternalSqlParser.g:4617:1: ( IN_1 )
                    // InternalSqlParser.g:4617:3: IN_1
                    {
                    match(input,IN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXinEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4622:6: ( ( NOTIN ) )
                    {
                    // InternalSqlParser.g:4622:6: ( ( NOTIN ) )
                    // InternalSqlParser.g:4623:1: ( NOTIN )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }
                    // InternalSqlParser.g:4624:1: ( NOTIN )
                    // InternalSqlParser.g:4624:3: NOTIN
                    {
                    match(input,NOTIN,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnotinEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4629:6: ( ( EQUAL ) )
                    {
                    // InternalSqlParser.g:4629:6: ( ( EQUAL ) )
                    // InternalSqlParser.g:4630:1: ( EQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }
                    // InternalSqlParser.g:4631:1: ( EQUAL )
                    // InternalSqlParser.g:4631:3: EQUAL
                    {
                    match(input,EQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXeqEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4636:6: ( ( NOTEQUAL ) )
                    {
                    // InternalSqlParser.g:4636:6: ( ( NOTEQUAL ) )
                    // InternalSqlParser.g:4637:1: ( NOTEQUAL )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }
                    // InternalSqlParser.g:4638:1: ( NOTEQUAL )
                    // InternalSqlParser.g:4638:3: NOTEQUAL
                    {
                    match(input,NOTEQUAL,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXnoteqEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4643:6: ( ( LESS ) )
                    {
                    // InternalSqlParser.g:4643:6: ( ( LESS ) )
                    // InternalSqlParser.g:4644:1: ( LESS )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }
                    // InternalSqlParser.g:4645:1: ( LESS )
                    // InternalSqlParser.g:4645:3: LESS
                    {
                    match(input,LESS,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:4650:6: ( ( LESS_1 ) )
                    {
                    // InternalSqlParser.g:4650:6: ( ( LESS_1 ) )
                    // InternalSqlParser.g:4651:1: ( LESS_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }
                    // InternalSqlParser.g:4652:1: ( LESS_1 )
                    // InternalSqlParser.g:4652:3: LESS_1
                    {
                    match(input,LESS_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXlsrEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:4657:6: ( ( GREATER_1 ) )
                    {
                    // InternalSqlParser.g:4657:6: ( ( GREATER_1 ) )
                    // InternalSqlParser.g:4658:1: ( GREATER_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }
                    // InternalSqlParser.g:4659:1: ( GREATER_1 )
                    // InternalSqlParser.g:4659:3: GREATER_1
                    {
                    match(input,GREATER_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtlEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSqlParser.g:4664:6: ( ( GREATER ) )
                    {
                    // InternalSqlParser.g:4664:6: ( ( GREATER ) )
                    // InternalSqlParser.g:4665:1: ( GREATER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }
                    // InternalSqlParser.g:4666:1: ( GREATER )
                    // InternalSqlParser.g:4666:3: GREATER
                    {
                    match(input,GREATER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXgtEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSqlParser.g:4671:6: ( ( BETWEEN_1 ) )
                    {
                    // InternalSqlParser.g:4671:6: ( ( BETWEEN_1 ) )
                    // InternalSqlParser.g:4672:1: ( BETWEEN_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }
                    // InternalSqlParser.g:4673:1: ( BETWEEN_1 )
                    // InternalSqlParser.g:4673:3: BETWEEN_1
                    {
                    match(input,BETWEEN_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSqlParser.g:4678:6: ( ( BETWEEN_4 ) )
                    {
                    // InternalSqlParser.g:4678:6: ( ( BETWEEN_4 ) )
                    // InternalSqlParser.g:4679:1: ( BETWEEN_4 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }
                    // InternalSqlParser.g:4680:1: ( BETWEEN_4 )
                    // InternalSqlParser.g:4680:3: BETWEEN_4
                    {
                    match(input,BETWEEN_4,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwncEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSqlParser.g:4685:6: ( ( BETWEEN_3 ) )
                    {
                    // InternalSqlParser.g:4685:6: ( ( BETWEEN_3 ) )
                    // InternalSqlParser.g:4686:1: ( BETWEEN_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }
                    // InternalSqlParser.g:4687:1: ( BETWEEN_3 )
                    // InternalSqlParser.g:4687:3: BETWEEN_3
                    {
                    match(input,BETWEEN_3,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnlEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSqlParser.g:4692:6: ( ( BETWEEN_2 ) )
                    {
                    // InternalSqlParser.g:4692:6: ( ( BETWEEN_2 ) )
                    // InternalSqlParser.g:4693:1: ( BETWEEN_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }
                    // InternalSqlParser.g:4694:1: ( BETWEEN_2 )
                    // InternalSqlParser.g:4694:3: BETWEEN_2
                    {
                    match(input,BETWEEN_2,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getXFunctionAccess().getXbwnrEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XFunction__Alternatives"


    // $ANTLR start "rule__EXTRACT_VALUES__Alternatives"
    // InternalSqlParser.g:4704:1: rule__EXTRACT_VALUES__Alternatives : ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) );
    public final void rule__EXTRACT_VALUES__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4708:1: ( ( ( MICROSECOND ) ) | ( ( SECOND ) ) | ( ( MINUTE ) ) | ( ( HOUR ) ) | ( ( DAY ) ) | ( ( WEEK ) ) | ( ( MONTH ) ) | ( ( QUARTER ) ) | ( ( YEAR ) ) | ( ( SECOND_MICROSECOND ) ) | ( ( MINUTE_MICROSECOND ) ) | ( ( MINUTE_SECOND ) ) | ( ( HOUR_MICROSECOND ) ) | ( ( HOUR_SECOND ) ) | ( ( HOUR_MINUTE ) ) | ( ( DAY_MICROSECOND ) ) | ( ( DAY_SECOND ) ) | ( ( DAY_MINUTE ) ) | ( ( DAY_HOUR ) ) | ( ( YEAR_MONTH ) ) )
            int alt53=20;
            switch ( input.LA(1) ) {
            case MICROSECOND:
                {
                alt53=1;
                }
                break;
            case SECOND:
                {
                alt53=2;
                }
                break;
            case MINUTE:
                {
                alt53=3;
                }
                break;
            case HOUR:
                {
                alt53=4;
                }
                break;
            case DAY:
                {
                alt53=5;
                }
                break;
            case WEEK:
                {
                alt53=6;
                }
                break;
            case MONTH:
                {
                alt53=7;
                }
                break;
            case QUARTER:
                {
                alt53=8;
                }
                break;
            case YEAR:
                {
                alt53=9;
                }
                break;
            case SECOND_MICROSECOND:
                {
                alt53=10;
                }
                break;
            case MINUTE_MICROSECOND:
                {
                alt53=11;
                }
                break;
            case MINUTE_SECOND:
                {
                alt53=12;
                }
                break;
            case HOUR_MICROSECOND:
                {
                alt53=13;
                }
                break;
            case HOUR_SECOND:
                {
                alt53=14;
                }
                break;
            case HOUR_MINUTE:
                {
                alt53=15;
                }
                break;
            case DAY_MICROSECOND:
                {
                alt53=16;
                }
                break;
            case DAY_SECOND:
                {
                alt53=17;
                }
                break;
            case DAY_MINUTE:
                {
                alt53=18;
                }
                break;
            case DAY_HOUR:
                {
                alt53=19;
                }
                break;
            case YEAR_MONTH:
                {
                alt53=20;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalSqlParser.g:4709:1: ( ( MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4709:1: ( ( MICROSECOND ) )
                    // InternalSqlParser.g:4710:1: ( MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }
                    // InternalSqlParser.g:4711:1: ( MICROSECOND )
                    // InternalSqlParser.g:4711:3: MICROSECOND
                    {
                    match(input,MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMsEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSqlParser.g:4716:6: ( ( SECOND ) )
                    {
                    // InternalSqlParser.g:4716:6: ( ( SECOND ) )
                    // InternalSqlParser.g:4717:1: ( SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSqlParser.g:4718:1: ( SECOND )
                    // InternalSqlParser.g:4718:3: SECOND
                    {
                    match(input,SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSqlParser.g:4723:6: ( ( MINUTE ) )
                    {
                    // InternalSqlParser.g:4723:6: ( ( MINUTE ) )
                    // InternalSqlParser.g:4724:1: ( MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }
                    // InternalSqlParser.g:4725:1: ( MINUTE )
                    // InternalSqlParser.g:4725:3: MINUTE
                    {
                    match(input,MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSqlParser.g:4730:6: ( ( HOUR ) )
                    {
                    // InternalSqlParser.g:4730:6: ( ( HOUR ) )
                    // InternalSqlParser.g:4731:1: ( HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }
                    // InternalSqlParser.g:4732:1: ( HOUR )
                    // InternalSqlParser.g:4732:3: HOUR
                    {
                    match(input,HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSqlParser.g:4737:6: ( ( DAY ) )
                    {
                    // InternalSqlParser.g:4737:6: ( ( DAY ) )
                    // InternalSqlParser.g:4738:1: ( DAY )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }
                    // InternalSqlParser.g:4739:1: ( DAY )
                    // InternalSqlParser.g:4739:3: DAY
                    {
                    match(input,DAY,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSqlParser.g:4744:6: ( ( WEEK ) )
                    {
                    // InternalSqlParser.g:4744:6: ( ( WEEK ) )
                    // InternalSqlParser.g:4745:1: ( WEEK )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }
                    // InternalSqlParser.g:4746:1: ( WEEK )
                    // InternalSqlParser.g:4746:3: WEEK
                    {
                    match(input,WEEK,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getWeekEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSqlParser.g:4751:6: ( ( MONTH ) )
                    {
                    // InternalSqlParser.g:4751:6: ( ( MONTH ) )
                    // InternalSqlParser.g:4752:1: ( MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }
                    // InternalSqlParser.g:4753:1: ( MONTH )
                    // InternalSqlParser.g:4753:3: MONTH
                    {
                    match(input,MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMonthEnumLiteralDeclaration_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSqlParser.g:4758:6: ( ( QUARTER ) )
                    {
                    // InternalSqlParser.g:4758:6: ( ( QUARTER ) )
                    // InternalSqlParser.g:4759:1: ( QUARTER )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }
                    // InternalSqlParser.g:4760:1: ( QUARTER )
                    // InternalSqlParser.g:4760:3: QUARTER
                    {
                    match(input,QUARTER,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getQuartEnumLiteralDeclaration_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSqlParser.g:4765:6: ( ( YEAR ) )
                    {
                    // InternalSqlParser.g:4765:6: ( ( YEAR ) )
                    // InternalSqlParser.g:4766:1: ( YEAR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }
                    // InternalSqlParser.g:4767:1: ( YEAR )
                    // InternalSqlParser.g:4767:3: YEAR
                    {
                    match(input,YEAR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearEnumLiteralDeclaration_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSqlParser.g:4772:6: ( ( SECOND_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4772:6: ( ( SECOND_MICROSECOND ) )
                    // InternalSqlParser.g:4773:1: ( SECOND_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }
                    // InternalSqlParser.g:4774:1: ( SECOND_MICROSECOND )
                    // InternalSqlParser.g:4774:3: SECOND_MICROSECOND
                    {
                    match(input,SECOND_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMicrosEnumLiteralDeclaration_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSqlParser.g:4779:6: ( ( MINUTE_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4779:6: ( ( MINUTE_MICROSECOND ) )
                    // InternalSqlParser.g:4780:1: ( MINUTE_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }
                    // InternalSqlParser.g:4781:1: ( MINUTE_MICROSECOND )
                    // InternalSqlParser.g:4781:3: MINUTE_MICROSECOND
                    {
                    match(input,MINUTE_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinMicroEnumLiteralDeclaration_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSqlParser.g:4786:6: ( ( MINUTE_SECOND ) )
                    {
                    // InternalSqlParser.g:4786:6: ( ( MINUTE_SECOND ) )
                    // InternalSqlParser.g:4787:1: ( MINUTE_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }
                    // InternalSqlParser.g:4788:1: ( MINUTE_SECOND )
                    // InternalSqlParser.g:4788:3: MINUTE_SECOND
                    {
                    match(input,MINUTE_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getMinSecEnumLiteralDeclaration_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSqlParser.g:4793:6: ( ( HOUR_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4793:6: ( ( HOUR_MICROSECOND ) )
                    // InternalSqlParser.g:4794:1: ( HOUR_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }
                    // InternalSqlParser.g:4795:1: ( HOUR_MICROSECOND )
                    // InternalSqlParser.g:4795:3: HOUR_MICROSECOND
                    {
                    match(input,HOUR_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHmsEnumLiteralDeclaration_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSqlParser.g:4800:6: ( ( HOUR_SECOND ) )
                    {
                    // InternalSqlParser.g:4800:6: ( ( HOUR_SECOND ) )
                    // InternalSqlParser.g:4801:1: ( HOUR_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }
                    // InternalSqlParser.g:4802:1: ( HOUR_SECOND )
                    // InternalSqlParser.g:4802:3: HOUR_SECOND
                    {
                    match(input,HOUR_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHsEnumLiteralDeclaration_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSqlParser.g:4807:6: ( ( HOUR_MINUTE ) )
                    {
                    // InternalSqlParser.g:4807:6: ( ( HOUR_MINUTE ) )
                    // InternalSqlParser.g:4808:1: ( HOUR_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }
                    // InternalSqlParser.g:4809:1: ( HOUR_MINUTE )
                    // InternalSqlParser.g:4809:3: HOUR_MINUTE
                    {
                    match(input,HOUR_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getHminEnumLiteralDeclaration_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalSqlParser.g:4814:6: ( ( DAY_MICROSECOND ) )
                    {
                    // InternalSqlParser.g:4814:6: ( ( DAY_MICROSECOND ) )
                    // InternalSqlParser.g:4815:1: ( DAY_MICROSECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }
                    // InternalSqlParser.g:4816:1: ( DAY_MICROSECOND )
                    // InternalSqlParser.g:4816:3: DAY_MICROSECOND
                    {
                    match(input,DAY_MICROSECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDmsEnumLiteralDeclaration_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalSqlParser.g:4821:6: ( ( DAY_SECOND ) )
                    {
                    // InternalSqlParser.g:4821:6: ( ( DAY_SECOND ) )
                    // InternalSqlParser.g:4822:1: ( DAY_SECOND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }
                    // InternalSqlParser.g:4823:1: ( DAY_SECOND )
                    // InternalSqlParser.g:4823:3: DAY_SECOND
                    {
                    match(input,DAY_SECOND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDsEnumLiteralDeclaration_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalSqlParser.g:4828:6: ( ( DAY_MINUTE ) )
                    {
                    // InternalSqlParser.g:4828:6: ( ( DAY_MINUTE ) )
                    // InternalSqlParser.g:4829:1: ( DAY_MINUTE )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }
                    // InternalSqlParser.g:4830:1: ( DAY_MINUTE )
                    // InternalSqlParser.g:4830:3: DAY_MINUTE
                    {
                    match(input,DAY_MINUTE,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayminEnumLiteralDeclaration_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalSqlParser.g:4835:6: ( ( DAY_HOUR ) )
                    {
                    // InternalSqlParser.g:4835:6: ( ( DAY_HOUR ) )
                    // InternalSqlParser.g:4836:1: ( DAY_HOUR )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }
                    // InternalSqlParser.g:4837:1: ( DAY_HOUR )
                    // InternalSqlParser.g:4837:3: DAY_HOUR
                    {
                    match(input,DAY_HOUR,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getDayhEnumLiteralDeclaration_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalSqlParser.g:4842:6: ( ( YEAR_MONTH ) )
                    {
                    // InternalSqlParser.g:4842:6: ( ( YEAR_MONTH ) )
                    // InternalSqlParser.g:4843:1: ( YEAR_MONTH )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }
                    // InternalSqlParser.g:4844:1: ( YEAR_MONTH )
                    // InternalSqlParser.g:4844:3: YEAR_MONTH
                    {
                    match(input,YEAR_MONTH,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEXTRACT_VALUESAccess().getYearMonthEnumLiteralDeclaration_19()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EXTRACT_VALUES__Alternatives"


    // $ANTLR start "rule__Model__Group__0"
    // InternalSqlParser.g:4856:1: rule__Model__Group__0 : rule__Model__Group__0__Impl rule__Model__Group__1 ;
    public final void rule__Model__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4860:1: ( rule__Model__Group__0__Impl rule__Model__Group__1 )
            // InternalSqlParser.g:4861:2: rule__Model__Group__0__Impl rule__Model__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Model__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Model__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0"


    // $ANTLR start "rule__Model__Group__0__Impl"
    // InternalSqlParser.g:4868:1: rule__Model__Group__0__Impl : ( ( RULE_JRNPARAM )? ) ;
    public final void rule__Model__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4872:1: ( ( ( RULE_JRNPARAM )? ) )
            // InternalSqlParser.g:4873:1: ( ( RULE_JRNPARAM )? )
            {
            // InternalSqlParser.g:4873:1: ( ( RULE_JRNPARAM )? )
            // InternalSqlParser.g:4874:1: ( RULE_JRNPARAM )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 
            }
            // InternalSqlParser.g:4875:1: ( RULE_JRNPARAM )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_JRNPARAM) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSqlParser.g:4875:3: RULE_JRNPARAM
                    {
                    match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__0__Impl"


    // $ANTLR start "rule__Model__Group__1"
    // InternalSqlParser.g:4885:1: rule__Model__Group__1 : rule__Model__Group__1__Impl rule__Model__Group__2 ;
    public final void rule__Model__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4889:1: ( rule__Model__Group__1__Impl rule__Model__Group__2 )
            // InternalSqlParser.g:4890:2: rule__Model__Group__1__Impl rule__Model__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__Model__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Model__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1"


    // $ANTLR start "rule__Model__Group__1__Impl"
    // InternalSqlParser.g:4897:1: rule__Model__Group__1__Impl : ( ( rule__Model__WqAssignment_1 )? ) ;
    public final void rule__Model__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4901:1: ( ( ( rule__Model__WqAssignment_1 )? ) )
            // InternalSqlParser.g:4902:1: ( ( rule__Model__WqAssignment_1 )? )
            {
            // InternalSqlParser.g:4902:1: ( ( rule__Model__WqAssignment_1 )? )
            // InternalSqlParser.g:4903:1: ( rule__Model__WqAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getWqAssignment_1()); 
            }
            // InternalSqlParser.g:4904:1: ( rule__Model__WqAssignment_1 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==WITH) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSqlParser.g:4904:2: rule__Model__WqAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Model__WqAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getWqAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__1__Impl"


    // $ANTLR start "rule__Model__Group__2"
    // InternalSqlParser.g:4914:1: rule__Model__Group__2 : rule__Model__Group__2__Impl ;
    public final void rule__Model__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4918:1: ( rule__Model__Group__2__Impl )
            // InternalSqlParser.g:4919:2: rule__Model__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Model__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__2"


    // $ANTLR start "rule__Model__Group__2__Impl"
    // InternalSqlParser.g:4925:1: rule__Model__Group__2__Impl : ( ( rule__Model__QueryAssignment_2 ) ) ;
    public final void rule__Model__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4929:1: ( ( ( rule__Model__QueryAssignment_2 ) ) )
            // InternalSqlParser.g:4930:1: ( ( rule__Model__QueryAssignment_2 ) )
            {
            // InternalSqlParser.g:4930:1: ( ( rule__Model__QueryAssignment_2 ) )
            // InternalSqlParser.g:4931:1: ( rule__Model__QueryAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getQueryAssignment_2()); 
            }
            // InternalSqlParser.g:4932:1: ( rule__Model__QueryAssignment_2 )
            // InternalSqlParser.g:4932:2: rule__Model__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Model__QueryAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getQueryAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__Group__2__Impl"


    // $ANTLR start "rule__WithQuery__Group__0"
    // InternalSqlParser.g:4948:1: rule__WithQuery__Group__0 : rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 ;
    public final void rule__WithQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4952:1: ( rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1 )
            // InternalSqlParser.g:4953:2: rule__WithQuery__Group__0__Impl rule__WithQuery__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__WithQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0"


    // $ANTLR start "rule__WithQuery__Group__0__Impl"
    // InternalSqlParser.g:4960:1: rule__WithQuery__Group__0__Impl : ( ( rule__WithQuery__WAssignment_0 ) ) ;
    public final void rule__WithQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4964:1: ( ( ( rule__WithQuery__WAssignment_0 ) ) )
            // InternalSqlParser.g:4965:1: ( ( rule__WithQuery__WAssignment_0 ) )
            {
            // InternalSqlParser.g:4965:1: ( ( rule__WithQuery__WAssignment_0 ) )
            // InternalSqlParser.g:4966:1: ( rule__WithQuery__WAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }
            // InternalSqlParser.g:4967:1: ( rule__WithQuery__WAssignment_0 )
            // InternalSqlParser.g:4967:2: rule__WithQuery__WAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__0__Impl"


    // $ANTLR start "rule__WithQuery__Group__1"
    // InternalSqlParser.g:4977:1: rule__WithQuery__Group__1 : rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 ;
    public final void rule__WithQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4981:1: ( rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2 )
            // InternalSqlParser.g:4982:2: rule__WithQuery__Group__1__Impl rule__WithQuery__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__WithQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1"


    // $ANTLR start "rule__WithQuery__Group__1__Impl"
    // InternalSqlParser.g:4989:1: rule__WithQuery__Group__1__Impl : ( ( rule__WithQuery__WnameAssignment_1 ) ) ;
    public final void rule__WithQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:4993:1: ( ( ( rule__WithQuery__WnameAssignment_1 ) ) )
            // InternalSqlParser.g:4994:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            {
            // InternalSqlParser.g:4994:1: ( ( rule__WithQuery__WnameAssignment_1 ) )
            // InternalSqlParser.g:4995:1: ( rule__WithQuery__WnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }
            // InternalSqlParser.g:4996:1: ( rule__WithQuery__WnameAssignment_1 )
            // InternalSqlParser.g:4996:2: rule__WithQuery__WnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__WnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__1__Impl"


    // $ANTLR start "rule__WithQuery__Group__2"
    // InternalSqlParser.g:5006:1: rule__WithQuery__Group__2 : rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 ;
    public final void rule__WithQuery__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5010:1: ( rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3 )
            // InternalSqlParser.g:5011:2: rule__WithQuery__Group__2__Impl rule__WithQuery__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__WithQuery__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2"


    // $ANTLR start "rule__WithQuery__Group__2__Impl"
    // InternalSqlParser.g:5018:1: rule__WithQuery__Group__2__Impl : ( ( rule__WithQuery__WithColsAssignment_2 )? ) ;
    public final void rule__WithQuery__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5022:1: ( ( ( rule__WithQuery__WithColsAssignment_2 )? ) )
            // InternalSqlParser.g:5023:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            {
            // InternalSqlParser.g:5023:1: ( ( rule__WithQuery__WithColsAssignment_2 )? )
            // InternalSqlParser.g:5024:1: ( rule__WithQuery__WithColsAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }
            // InternalSqlParser.g:5025:1: ( rule__WithQuery__WithColsAssignment_2 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==LeftParenthesis) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSqlParser.g:5025:2: rule__WithQuery__WithColsAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__WithColsAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__2__Impl"


    // $ANTLR start "rule__WithQuery__Group__3"
    // InternalSqlParser.g:5035:1: rule__WithQuery__Group__3 : rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 ;
    public final void rule__WithQuery__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5039:1: ( rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4 )
            // InternalSqlParser.g:5040:2: rule__WithQuery__Group__3__Impl rule__WithQuery__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__WithQuery__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3"


    // $ANTLR start "rule__WithQuery__Group__3__Impl"
    // InternalSqlParser.g:5047:1: rule__WithQuery__Group__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5051:1: ( ( AS ) )
            // InternalSqlParser.g:5052:1: ( AS )
            {
            // InternalSqlParser.g:5052:1: ( AS )
            // InternalSqlParser.g:5053:1: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__3__Impl"


    // $ANTLR start "rule__WithQuery__Group__4"
    // InternalSqlParser.g:5066:1: rule__WithQuery__Group__4 : rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 ;
    public final void rule__WithQuery__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5070:1: ( rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5 )
            // InternalSqlParser.g:5071:2: rule__WithQuery__Group__4__Impl rule__WithQuery__Group__5
            {
            pushFollow(FOLLOW_3);
            rule__WithQuery__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4"


    // $ANTLR start "rule__WithQuery__Group__4__Impl"
    // InternalSqlParser.g:5078:1: rule__WithQuery__Group__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5082:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:5083:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:5083:1: ( LeftParenthesis )
            // InternalSqlParser.g:5084:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__4__Impl"


    // $ANTLR start "rule__WithQuery__Group__5"
    // InternalSqlParser.g:5097:1: rule__WithQuery__Group__5 : rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 ;
    public final void rule__WithQuery__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5101:1: ( rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6 )
            // InternalSqlParser.g:5102:2: rule__WithQuery__Group__5__Impl rule__WithQuery__Group__6
            {
            pushFollow(FOLLOW_7);
            rule__WithQuery__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5"


    // $ANTLR start "rule__WithQuery__Group__5__Impl"
    // InternalSqlParser.g:5109:1: rule__WithQuery__Group__5__Impl : ( ( rule__WithQuery__QueryAssignment_5 ) ) ;
    public final void rule__WithQuery__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5113:1: ( ( ( rule__WithQuery__QueryAssignment_5 ) ) )
            // InternalSqlParser.g:5114:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            {
            // InternalSqlParser.g:5114:1: ( ( rule__WithQuery__QueryAssignment_5 ) )
            // InternalSqlParser.g:5115:1: ( rule__WithQuery__QueryAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }
            // InternalSqlParser.g:5116:1: ( rule__WithQuery__QueryAssignment_5 )
            // InternalSqlParser.g:5116:2: rule__WithQuery__QueryAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__QueryAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQueryAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__5__Impl"


    // $ANTLR start "rule__WithQuery__Group__6"
    // InternalSqlParser.g:5126:1: rule__WithQuery__Group__6 : rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 ;
    public final void rule__WithQuery__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5130:1: ( rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7 )
            // InternalSqlParser.g:5131:2: rule__WithQuery__Group__6__Impl rule__WithQuery__Group__7
            {
            pushFollow(FOLLOW_8);
            rule__WithQuery__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6"


    // $ANTLR start "rule__WithQuery__Group__6__Impl"
    // InternalSqlParser.g:5138:1: rule__WithQuery__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5142:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:5143:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:5143:1: ( RightParenthesis )
            // InternalSqlParser.g:5144:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__6__Impl"


    // $ANTLR start "rule__WithQuery__Group__7"
    // InternalSqlParser.g:5157:1: rule__WithQuery__Group__7 : rule__WithQuery__Group__7__Impl ;
    public final void rule__WithQuery__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5161:1: ( rule__WithQuery__Group__7__Impl )
            // InternalSqlParser.g:5162:2: rule__WithQuery__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7"


    // $ANTLR start "rule__WithQuery__Group__7__Impl"
    // InternalSqlParser.g:5168:1: rule__WithQuery__Group__7__Impl : ( ( rule__WithQuery__Group_7__0 )* ) ;
    public final void rule__WithQuery__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5172:1: ( ( ( rule__WithQuery__Group_7__0 )* ) )
            // InternalSqlParser.g:5173:1: ( ( rule__WithQuery__Group_7__0 )* )
            {
            // InternalSqlParser.g:5173:1: ( ( rule__WithQuery__Group_7__0 )* )
            // InternalSqlParser.g:5174:1: ( rule__WithQuery__Group_7__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }
            // InternalSqlParser.g:5175:1: ( rule__WithQuery__Group_7__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==Comma) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSqlParser.g:5175:2: rule__WithQuery__Group_7__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__WithQuery__Group_7__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group__7__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__0"
    // InternalSqlParser.g:5201:1: rule__WithQuery__Group_7__0 : rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 ;
    public final void rule__WithQuery__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5205:1: ( rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1 )
            // InternalSqlParser.g:5206:2: rule__WithQuery__Group_7__0__Impl rule__WithQuery__Group_7__1
            {
            pushFollow(FOLLOW_4);
            rule__WithQuery__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0"


    // $ANTLR start "rule__WithQuery__Group_7__0__Impl"
    // InternalSqlParser.g:5213:1: rule__WithQuery__Group_7__0__Impl : ( Comma ) ;
    public final void rule__WithQuery__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5217:1: ( ( Comma ) )
            // InternalSqlParser.g:5218:1: ( Comma )
            {
            // InternalSqlParser.g:5218:1: ( Comma )
            // InternalSqlParser.g:5219:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getCommaKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__0__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__1"
    // InternalSqlParser.g:5232:1: rule__WithQuery__Group_7__1 : rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 ;
    public final void rule__WithQuery__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5236:1: ( rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2 )
            // InternalSqlParser.g:5237:2: rule__WithQuery__Group_7__1__Impl rule__WithQuery__Group_7__2
            {
            pushFollow(FOLLOW_5);
            rule__WithQuery__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1"


    // $ANTLR start "rule__WithQuery__Group_7__1__Impl"
    // InternalSqlParser.g:5244:1: rule__WithQuery__Group_7__1__Impl : ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) ;
    public final void rule__WithQuery__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5248:1: ( ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) ) )
            // InternalSqlParser.g:5249:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            {
            // InternalSqlParser.g:5249:1: ( ( rule__WithQuery__AdditionalWnameAssignment_7_1 ) )
            // InternalSqlParser.g:5250:1: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }
            // InternalSqlParser.g:5251:1: ( rule__WithQuery__AdditionalWnameAssignment_7_1 )
            // InternalSqlParser.g:5251:2: rule__WithQuery__AdditionalWnameAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalWnameAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__1__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__2"
    // InternalSqlParser.g:5261:1: rule__WithQuery__Group_7__2 : rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 ;
    public final void rule__WithQuery__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5265:1: ( rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3 )
            // InternalSqlParser.g:5266:2: rule__WithQuery__Group_7__2__Impl rule__WithQuery__Group_7__3
            {
            pushFollow(FOLLOW_5);
            rule__WithQuery__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2"


    // $ANTLR start "rule__WithQuery__Group_7__2__Impl"
    // InternalSqlParser.g:5273:1: rule__WithQuery__Group_7__2__Impl : ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) ;
    public final void rule__WithQuery__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5277:1: ( ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? ) )
            // InternalSqlParser.g:5278:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            {
            // InternalSqlParser.g:5278:1: ( ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )? )
            // InternalSqlParser.g:5279:1: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }
            // InternalSqlParser.g:5280:1: ( rule__WithQuery__AdditionalWithColsAssignment_7_2 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==LeftParenthesis) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSqlParser.g:5280:2: rule__WithQuery__AdditionalWithColsAssignment_7_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__WithQuery__AdditionalWithColsAssignment_7_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__2__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__3"
    // InternalSqlParser.g:5290:1: rule__WithQuery__Group_7__3 : rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 ;
    public final void rule__WithQuery__Group_7__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5294:1: ( rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4 )
            // InternalSqlParser.g:5295:2: rule__WithQuery__Group_7__3__Impl rule__WithQuery__Group_7__4
            {
            pushFollow(FOLLOW_6);
            rule__WithQuery__Group_7__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3"


    // $ANTLR start "rule__WithQuery__Group_7__3__Impl"
    // InternalSqlParser.g:5302:1: rule__WithQuery__Group_7__3__Impl : ( AS ) ;
    public final void rule__WithQuery__Group_7__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5306:1: ( ( AS ) )
            // InternalSqlParser.g:5307:1: ( AS )
            {
            // InternalSqlParser.g:5307:1: ( AS )
            // InternalSqlParser.g:5308:1: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getASKeyword_7_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__3__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__4"
    // InternalSqlParser.g:5321:1: rule__WithQuery__Group_7__4 : rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 ;
    public final void rule__WithQuery__Group_7__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5325:1: ( rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5 )
            // InternalSqlParser.g:5326:2: rule__WithQuery__Group_7__4__Impl rule__WithQuery__Group_7__5
            {
            pushFollow(FOLLOW_3);
            rule__WithQuery__Group_7__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4"


    // $ANTLR start "rule__WithQuery__Group_7__4__Impl"
    // InternalSqlParser.g:5333:1: rule__WithQuery__Group_7__4__Impl : ( LeftParenthesis ) ;
    public final void rule__WithQuery__Group_7__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5337:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:5338:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:5338:1: ( LeftParenthesis )
            // InternalSqlParser.g:5339:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getLeftParenthesisKeyword_7_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__4__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__5"
    // InternalSqlParser.g:5352:1: rule__WithQuery__Group_7__5 : rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 ;
    public final void rule__WithQuery__Group_7__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5356:1: ( rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6 )
            // InternalSqlParser.g:5357:2: rule__WithQuery__Group_7__5__Impl rule__WithQuery__Group_7__6
            {
            pushFollow(FOLLOW_7);
            rule__WithQuery__Group_7__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5"


    // $ANTLR start "rule__WithQuery__Group_7__5__Impl"
    // InternalSqlParser.g:5364:1: rule__WithQuery__Group_7__5__Impl : ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) ;
    public final void rule__WithQuery__Group_7__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5368:1: ( ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) ) )
            // InternalSqlParser.g:5369:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            {
            // InternalSqlParser.g:5369:1: ( ( rule__WithQuery__AdditionalQueriesAssignment_7_5 ) )
            // InternalSqlParser.g:5370:1: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }
            // InternalSqlParser.g:5371:1: ( rule__WithQuery__AdditionalQueriesAssignment_7_5 )
            // InternalSqlParser.g:5371:2: rule__WithQuery__AdditionalQueriesAssignment_7_5
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__AdditionalQueriesAssignment_7_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesAssignment_7_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__5__Impl"


    // $ANTLR start "rule__WithQuery__Group_7__6"
    // InternalSqlParser.g:5381:1: rule__WithQuery__Group_7__6 : rule__WithQuery__Group_7__6__Impl ;
    public final void rule__WithQuery__Group_7__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5385:1: ( rule__WithQuery__Group_7__6__Impl )
            // InternalSqlParser.g:5386:2: rule__WithQuery__Group_7__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithQuery__Group_7__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6"


    // $ANTLR start "rule__WithQuery__Group_7__6__Impl"
    // InternalSqlParser.g:5392:1: rule__WithQuery__Group_7__6__Impl : ( RightParenthesis ) ;
    public final void rule__WithQuery__Group_7__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5396:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:5397:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:5397:1: ( RightParenthesis )
            // InternalSqlParser.g:5398:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getRightParenthesisKeyword_7_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__Group_7__6__Impl"


    // $ANTLR start "rule__WithColumns__Group__0"
    // InternalSqlParser.g:5425:1: rule__WithColumns__Group__0 : rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 ;
    public final void rule__WithColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5429:1: ( rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1 )
            // InternalSqlParser.g:5430:2: rule__WithColumns__Group__0__Impl rule__WithColumns__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__WithColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0"


    // $ANTLR start "rule__WithColumns__Group__0__Impl"
    // InternalSqlParser.g:5437:1: rule__WithColumns__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__WithColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5441:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:5442:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:5442:1: ( LeftParenthesis )
            // InternalSqlParser.g:5443:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__0__Impl"


    // $ANTLR start "rule__WithColumns__Group__1"
    // InternalSqlParser.g:5456:1: rule__WithColumns__Group__1 : rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 ;
    public final void rule__WithColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5460:1: ( rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2 )
            // InternalSqlParser.g:5461:2: rule__WithColumns__Group__1__Impl rule__WithColumns__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__WithColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1"


    // $ANTLR start "rule__WithColumns__Group__1__Impl"
    // InternalSqlParser.g:5468:1: rule__WithColumns__Group__1__Impl : ( ruleUsingCols ) ;
    public final void rule__WithColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5472:1: ( ( ruleUsingCols ) )
            // InternalSqlParser.g:5473:1: ( ruleUsingCols )
            {
            // InternalSqlParser.g:5473:1: ( ruleUsingCols )
            // InternalSqlParser.g:5474:1: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getUsingColsParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__1__Impl"


    // $ANTLR start "rule__WithColumns__Group__2"
    // InternalSqlParser.g:5485:1: rule__WithColumns__Group__2 : rule__WithColumns__Group__2__Impl ;
    public final void rule__WithColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5489:1: ( rule__WithColumns__Group__2__Impl )
            // InternalSqlParser.g:5490:2: rule__WithColumns__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WithColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2"


    // $ANTLR start "rule__WithColumns__Group__2__Impl"
    // InternalSqlParser.g:5496:1: rule__WithColumns__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__WithColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5500:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:5501:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:5501:1: ( RightParenthesis )
            // InternalSqlParser.g:5502:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithColumnsAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithColumns__Group__2__Impl"


    // $ANTLR start "rule__FetchFirst__Group__0"
    // InternalSqlParser.g:5521:1: rule__FetchFirst__Group__0 : rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 ;
    public final void rule__FetchFirst__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5525:1: ( rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1 )
            // InternalSqlParser.g:5526:2: rule__FetchFirst__Group__0__Impl rule__FetchFirst__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__FetchFirst__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0"


    // $ANTLR start "rule__FetchFirst__Group__0__Impl"
    // InternalSqlParser.g:5533:1: rule__FetchFirst__Group__0__Impl : ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) ;
    public final void rule__FetchFirst__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5537:1: ( ( ( rule__FetchFirst__FetchFirstAssignment_0 ) ) )
            // InternalSqlParser.g:5538:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            {
            // InternalSqlParser.g:5538:1: ( ( rule__FetchFirst__FetchFirstAssignment_0 ) )
            // InternalSqlParser.g:5539:1: ( rule__FetchFirst__FetchFirstAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }
            // InternalSqlParser.g:5540:1: ( rule__FetchFirst__FetchFirstAssignment_0 )
            // InternalSqlParser.g:5540:2: rule__FetchFirst__FetchFirstAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__FetchFirstAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__0__Impl"


    // $ANTLR start "rule__FetchFirst__Group__1"
    // InternalSqlParser.g:5550:1: rule__FetchFirst__Group__1 : rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 ;
    public final void rule__FetchFirst__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5554:1: ( rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2 )
            // InternalSqlParser.g:5555:2: rule__FetchFirst__Group__1__Impl rule__FetchFirst__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__FetchFirst__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1"


    // $ANTLR start "rule__FetchFirst__Group__1__Impl"
    // InternalSqlParser.g:5562:1: rule__FetchFirst__Group__1__Impl : ( ( rule__FetchFirst__RowAssignment_1 ) ) ;
    public final void rule__FetchFirst__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5566:1: ( ( ( rule__FetchFirst__RowAssignment_1 ) ) )
            // InternalSqlParser.g:5567:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            {
            // InternalSqlParser.g:5567:1: ( ( rule__FetchFirst__RowAssignment_1 ) )
            // InternalSqlParser.g:5568:1: ( rule__FetchFirst__RowAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }
            // InternalSqlParser.g:5569:1: ( rule__FetchFirst__RowAssignment_1 )
            // InternalSqlParser.g:5569:2: rule__FetchFirst__RowAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__1__Impl"


    // $ANTLR start "rule__FetchFirst__Group__2"
    // InternalSqlParser.g:5579:1: rule__FetchFirst__Group__2 : rule__FetchFirst__Group__2__Impl ;
    public final void rule__FetchFirst__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5583:1: ( rule__FetchFirst__Group__2__Impl )
            // InternalSqlParser.g:5584:2: rule__FetchFirst__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2"


    // $ANTLR start "rule__FetchFirst__Group__2__Impl"
    // InternalSqlParser.g:5590:1: rule__FetchFirst__Group__2__Impl : ( ONLY ) ;
    public final void rule__FetchFirst__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5594:1: ( ( ONLY ) )
            // InternalSqlParser.g:5595:1: ( ONLY )
            {
            // InternalSqlParser.g:5595:1: ( ONLY )
            // InternalSqlParser.g:5596:1: ONLY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }
            match(input,ONLY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getONLYKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__Group__2__Impl"


    // $ANTLR start "rule__Limit__Group_0__0"
    // InternalSqlParser.g:5615:1: rule__Limit__Group_0__0 : rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 ;
    public final void rule__Limit__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5619:1: ( rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1 )
            // InternalSqlParser.g:5620:2: rule__Limit__Group_0__0__Impl rule__Limit__Group_0__1
            {
            pushFollow(FOLLOW_12);
            rule__Limit__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0"


    // $ANTLR start "rule__Limit__Group_0__0__Impl"
    // InternalSqlParser.g:5627:1: rule__Limit__Group_0__0__Impl : ( () ) ;
    public final void rule__Limit__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5631:1: ( ( () ) )
            // InternalSqlParser.g:5632:1: ( () )
            {
            // InternalSqlParser.g:5632:1: ( () )
            // InternalSqlParser.g:5633:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }
            // InternalSqlParser.g:5634:1: ()
            // InternalSqlParser.g:5636:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getLimitAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__0__Impl"


    // $ANTLR start "rule__Limit__Group_0__1"
    // InternalSqlParser.g:5646:1: rule__Limit__Group_0__1 : rule__Limit__Group_0__1__Impl ;
    public final void rule__Limit__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5650:1: ( rule__Limit__Group_0__1__Impl )
            // InternalSqlParser.g:5651:2: rule__Limit__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1"


    // $ANTLR start "rule__Limit__Group_0__1__Impl"
    // InternalSqlParser.g:5657:1: rule__Limit__Group_0__1__Impl : ( ALL ) ;
    public final void rule__Limit__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5661:1: ( ( ALL ) )
            // InternalSqlParser.g:5662:1: ( ALL )
            {
            // InternalSqlParser.g:5662:1: ( ALL )
            // InternalSqlParser.g:5663:1: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getALLKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_0__1__Impl"


    // $ANTLR start "rule__Limit__Group_1__0"
    // InternalSqlParser.g:5680:1: rule__Limit__Group_1__0 : rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 ;
    public final void rule__Limit__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5684:1: ( rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1 )
            // InternalSqlParser.g:5685:2: rule__Limit__Group_1__0__Impl rule__Limit__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Limit__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0"


    // $ANTLR start "rule__Limit__Group_1__0__Impl"
    // InternalSqlParser.g:5692:1: rule__Limit__Group_1__0__Impl : ( ( rule__Limit__L1Assignment_1_0 ) ) ;
    public final void rule__Limit__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5696:1: ( ( ( rule__Limit__L1Assignment_1_0 ) ) )
            // InternalSqlParser.g:5697:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            {
            // InternalSqlParser.g:5697:1: ( ( rule__Limit__L1Assignment_1_0 ) )
            // InternalSqlParser.g:5698:1: ( rule__Limit__L1Assignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }
            // InternalSqlParser.g:5699:1: ( rule__Limit__L1Assignment_1_0 )
            // InternalSqlParser.g:5699:2: rule__Limit__L1Assignment_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L1Assignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1Assignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1__1"
    // InternalSqlParser.g:5709:1: rule__Limit__Group_1__1 : rule__Limit__Group_1__1__Impl ;
    public final void rule__Limit__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5713:1: ( rule__Limit__Group_1__1__Impl )
            // InternalSqlParser.g:5714:2: rule__Limit__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1"


    // $ANTLR start "rule__Limit__Group_1__1__Impl"
    // InternalSqlParser.g:5720:1: rule__Limit__Group_1__1__Impl : ( ( rule__Limit__Group_1_1__0 )? ) ;
    public final void rule__Limit__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5724:1: ( ( ( rule__Limit__Group_1_1__0 )? ) )
            // InternalSqlParser.g:5725:1: ( ( rule__Limit__Group_1_1__0 )? )
            {
            // InternalSqlParser.g:5725:1: ( ( rule__Limit__Group_1_1__0 )? )
            // InternalSqlParser.g:5726:1: ( rule__Limit__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:5727:1: ( rule__Limit__Group_1_1__0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==Comma) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalSqlParser.g:5727:2: rule__Limit__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Limit__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1__1__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__0"
    // InternalSqlParser.g:5741:1: rule__Limit__Group_1_1__0 : rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 ;
    public final void rule__Limit__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5745:1: ( rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1 )
            // InternalSqlParser.g:5746:2: rule__Limit__Group_1_1__0__Impl rule__Limit__Group_1_1__1
            {
            pushFollow(FOLLOW_13);
            rule__Limit__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0"


    // $ANTLR start "rule__Limit__Group_1_1__0__Impl"
    // InternalSqlParser.g:5753:1: rule__Limit__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Limit__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5757:1: ( ( Comma ) )
            // InternalSqlParser.g:5758:1: ( Comma )
            {
            // InternalSqlParser.g:5758:1: ( Comma )
            // InternalSqlParser.g:5759:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__0__Impl"


    // $ANTLR start "rule__Limit__Group_1_1__1"
    // InternalSqlParser.g:5772:1: rule__Limit__Group_1_1__1 : rule__Limit__Group_1_1__1__Impl ;
    public final void rule__Limit__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5776:1: ( rule__Limit__Group_1_1__1__Impl )
            // InternalSqlParser.g:5777:2: rule__Limit__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Limit__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1"


    // $ANTLR start "rule__Limit__Group_1_1__1__Impl"
    // InternalSqlParser.g:5783:1: rule__Limit__Group_1_1__1__Impl : ( ( rule__Limit__L2Assignment_1_1_1 ) ) ;
    public final void rule__Limit__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5787:1: ( ( ( rule__Limit__L2Assignment_1_1_1 ) ) )
            // InternalSqlParser.g:5788:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            {
            // InternalSqlParser.g:5788:1: ( ( rule__Limit__L2Assignment_1_1_1 ) )
            // InternalSqlParser.g:5789:1: ( rule__Limit__L2Assignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }
            // InternalSqlParser.g:5790:1: ( rule__Limit__L2Assignment_1_1_1 )
            // InternalSqlParser.g:5790:2: rule__Limit__L2Assignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Limit__L2Assignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2Assignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__Group_1_1__1__Impl"


    // $ANTLR start "rule__SelectQuery__Group__0"
    // InternalSqlParser.g:5804:1: rule__SelectQuery__Group__0 : rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 ;
    public final void rule__SelectQuery__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5808:1: ( rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1 )
            // InternalSqlParser.g:5809:2: rule__SelectQuery__Group__0__Impl rule__SelectQuery__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__SelectQuery__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0"


    // $ANTLR start "rule__SelectQuery__Group__0__Impl"
    // InternalSqlParser.g:5816:1: rule__SelectQuery__Group__0__Impl : ( ruleSelect ) ;
    public final void rule__SelectQuery__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5820:1: ( ( ruleSelect ) )
            // InternalSqlParser.g:5821:1: ( ruleSelect )
            {
            // InternalSqlParser.g:5821:1: ( ruleSelect )
            // InternalSqlParser.g:5822:1: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getSelectParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__0__Impl"


    // $ANTLR start "rule__SelectQuery__Group__1"
    // InternalSqlParser.g:5833:1: rule__SelectQuery__Group__1 : rule__SelectQuery__Group__1__Impl ;
    public final void rule__SelectQuery__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5837:1: ( rule__SelectQuery__Group__1__Impl )
            // InternalSqlParser.g:5838:2: rule__SelectQuery__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectQuery__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1"


    // $ANTLR start "rule__SelectQuery__Group__1__Impl"
    // InternalSqlParser.g:5844:1: rule__SelectQuery__Group__1__Impl : ( ( rule__SelectQuery__OpAssignment_1 )* ) ;
    public final void rule__SelectQuery__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5848:1: ( ( ( rule__SelectQuery__OpAssignment_1 )* ) )
            // InternalSqlParser.g:5849:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            {
            // InternalSqlParser.g:5849:1: ( ( rule__SelectQuery__OpAssignment_1 )* )
            // InternalSqlParser.g:5850:1: ( rule__SelectQuery__OpAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }
            // InternalSqlParser.g:5851:1: ( rule__SelectQuery__OpAssignment_1 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==INTERSECT||LA60_0==EXCEPT||LA60_0==MINUS||LA60_0==UNION) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSqlParser.g:5851:2: rule__SelectQuery__OpAssignment_1
            	    {
            	    pushFollow(FOLLOW_15);
            	    rule__SelectQuery__OpAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__0"
    // InternalSqlParser.g:5865:1: rule__SelectSubSet__Group__0 : rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 ;
    public final void rule__SelectSubSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5869:1: ( rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1 )
            // InternalSqlParser.g:5870:2: rule__SelectSubSet__Group__0__Impl rule__SelectSubSet__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__SelectSubSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0"


    // $ANTLR start "rule__SelectSubSet__Group__0__Impl"
    // InternalSqlParser.g:5877:1: rule__SelectSubSet__Group__0__Impl : ( ( rule__SelectSubSet__OpAssignment_0 ) ) ;
    public final void rule__SelectSubSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5881:1: ( ( ( rule__SelectSubSet__OpAssignment_0 ) ) )
            // InternalSqlParser.g:5882:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            {
            // InternalSqlParser.g:5882:1: ( ( rule__SelectSubSet__OpAssignment_0 ) )
            // InternalSqlParser.g:5883:1: ( rule__SelectSubSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }
            // InternalSqlParser.g:5884:1: ( rule__SelectSubSet__OpAssignment_0 )
            // InternalSqlParser.g:5884:2: rule__SelectSubSet__OpAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__0__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__1"
    // InternalSqlParser.g:5894:1: rule__SelectSubSet__Group__1 : rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 ;
    public final void rule__SelectSubSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5898:1: ( rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2 )
            // InternalSqlParser.g:5899:2: rule__SelectSubSet__Group__1__Impl rule__SelectSubSet__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__SelectSubSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1"


    // $ANTLR start "rule__SelectSubSet__Group__1__Impl"
    // InternalSqlParser.g:5906:1: rule__SelectSubSet__Group__1__Impl : ( ( rule__SelectSubSet__AllAssignment_1 )? ) ;
    public final void rule__SelectSubSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5910:1: ( ( ( rule__SelectSubSet__AllAssignment_1 )? ) )
            // InternalSqlParser.g:5911:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            {
            // InternalSqlParser.g:5911:1: ( ( rule__SelectSubSet__AllAssignment_1 )? )
            // InternalSqlParser.g:5912:1: ( rule__SelectSubSet__AllAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }
            // InternalSqlParser.g:5913:1: ( rule__SelectSubSet__AllAssignment_1 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==ALL) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalSqlParser.g:5913:2: rule__SelectSubSet__AllAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SelectSubSet__AllAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__1__Impl"


    // $ANTLR start "rule__SelectSubSet__Group__2"
    // InternalSqlParser.g:5923:1: rule__SelectSubSet__Group__2 : rule__SelectSubSet__Group__2__Impl ;
    public final void rule__SelectSubSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5927:1: ( rule__SelectSubSet__Group__2__Impl )
            // InternalSqlParser.g:5928:2: rule__SelectSubSet__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2"


    // $ANTLR start "rule__SelectSubSet__Group__2__Impl"
    // InternalSqlParser.g:5934:1: rule__SelectSubSet__Group__2__Impl : ( ( rule__SelectSubSet__QueryAssignment_2 ) ) ;
    public final void rule__SelectSubSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5938:1: ( ( ( rule__SelectSubSet__QueryAssignment_2 ) ) )
            // InternalSqlParser.g:5939:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            {
            // InternalSqlParser.g:5939:1: ( ( rule__SelectSubSet__QueryAssignment_2 ) )
            // InternalSqlParser.g:5940:1: ( rule__SelectSubSet__QueryAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }
            // InternalSqlParser.g:5941:1: ( rule__SelectSubSet__QueryAssignment_2 )
            // InternalSqlParser.g:5941:2: rule__SelectSubSet__QueryAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__QueryAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQueryAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__0"
    // InternalSqlParser.g:5957:1: rule__Select__Group__0 : rule__Select__Group__0__Impl rule__Select__Group__1 ;
    public final void rule__Select__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5961:1: ( rule__Select__Group__0__Impl rule__Select__Group__1 )
            // InternalSqlParser.g:5962:2: rule__Select__Group__0__Impl rule__Select__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0"


    // $ANTLR start "rule__Select__Group__0__Impl"
    // InternalSqlParser.g:5969:1: rule__Select__Group__0__Impl : ( ( rule__Select__SelectAssignment_0 ) ) ;
    public final void rule__Select__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5973:1: ( ( ( rule__Select__SelectAssignment_0 ) ) )
            // InternalSqlParser.g:5974:1: ( ( rule__Select__SelectAssignment_0 ) )
            {
            // InternalSqlParser.g:5974:1: ( ( rule__Select__SelectAssignment_0 ) )
            // InternalSqlParser.g:5975:1: ( rule__Select__SelectAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }
            // InternalSqlParser.g:5976:1: ( rule__Select__SelectAssignment_0 )
            // InternalSqlParser.g:5976:2: rule__Select__SelectAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Select__SelectAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__0__Impl"


    // $ANTLR start "rule__Select__Group__1"
    // InternalSqlParser.g:5986:1: rule__Select__Group__1 : rule__Select__Group__1__Impl rule__Select__Group__2 ;
    public final void rule__Select__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:5990:1: ( rule__Select__Group__1__Impl rule__Select__Group__2 )
            // InternalSqlParser.g:5991:2: rule__Select__Group__1__Impl rule__Select__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1"


    // $ANTLR start "rule__Select__Group__1__Impl"
    // InternalSqlParser.g:5998:1: rule__Select__Group__1__Impl : ( ( DISTINCT )? ) ;
    public final void rule__Select__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6002:1: ( ( ( DISTINCT )? ) )
            // InternalSqlParser.g:6003:1: ( ( DISTINCT )? )
            {
            // InternalSqlParser.g:6003:1: ( ( DISTINCT )? )
            // InternalSqlParser.g:6004:1: ( DISTINCT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }
            // InternalSqlParser.g:6005:1: ( DISTINCT )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==DISTINCT) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSqlParser.g:6006:2: DISTINCT
                    {
                    match(input,DISTINCT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getDISTINCTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__1__Impl"


    // $ANTLR start "rule__Select__Group__2"
    // InternalSqlParser.g:6017:1: rule__Select__Group__2 : rule__Select__Group__2__Impl rule__Select__Group__3 ;
    public final void rule__Select__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6021:1: ( rule__Select__Group__2__Impl rule__Select__Group__3 )
            // InternalSqlParser.g:6022:2: rule__Select__Group__2__Impl rule__Select__Group__3
            {
            pushFollow(FOLLOW_17);
            rule__Select__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2"


    // $ANTLR start "rule__Select__Group__2__Impl"
    // InternalSqlParser.g:6029:1: rule__Select__Group__2__Impl : ( ( rule__Select__Group_2__0 )? ) ;
    public final void rule__Select__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6033:1: ( ( ( rule__Select__Group_2__0 )? ) )
            // InternalSqlParser.g:6034:1: ( ( rule__Select__Group_2__0 )? )
            {
            // InternalSqlParser.g:6034:1: ( ( rule__Select__Group_2__0 )? )
            // InternalSqlParser.g:6035:1: ( rule__Select__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2()); 
            }
            // InternalSqlParser.g:6036:1: ( rule__Select__Group_2__0 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==TOP) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalSqlParser.g:6036:2: rule__Select__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__2__Impl"


    // $ANTLR start "rule__Select__Group__3"
    // InternalSqlParser.g:6046:1: rule__Select__Group__3 : rule__Select__Group__3__Impl rule__Select__Group__4 ;
    public final void rule__Select__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6050:1: ( rule__Select__Group__3__Impl rule__Select__Group__4 )
            // InternalSqlParser.g:6051:2: rule__Select__Group__3__Impl rule__Select__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__Select__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3"


    // $ANTLR start "rule__Select__Group__3__Impl"
    // InternalSqlParser.g:6058:1: rule__Select__Group__3__Impl : ( ( rule__Select__ColsAssignment_3 ) ) ;
    public final void rule__Select__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6062:1: ( ( ( rule__Select__ColsAssignment_3 ) ) )
            // InternalSqlParser.g:6063:1: ( ( rule__Select__ColsAssignment_3 ) )
            {
            // InternalSqlParser.g:6063:1: ( ( rule__Select__ColsAssignment_3 ) )
            // InternalSqlParser.g:6064:1: ( rule__Select__ColsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }
            // InternalSqlParser.g:6065:1: ( rule__Select__ColsAssignment_3 )
            // InternalSqlParser.g:6065:2: rule__Select__ColsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Select__ColsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__3__Impl"


    // $ANTLR start "rule__Select__Group__4"
    // InternalSqlParser.g:6075:1: rule__Select__Group__4 : rule__Select__Group__4__Impl rule__Select__Group__5 ;
    public final void rule__Select__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6079:1: ( rule__Select__Group__4__Impl rule__Select__Group__5 )
            // InternalSqlParser.g:6080:2: rule__Select__Group__4__Impl rule__Select__Group__5
            {
            pushFollow(FOLLOW_19);
            rule__Select__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4"


    // $ANTLR start "rule__Select__Group__4__Impl"
    // InternalSqlParser.g:6087:1: rule__Select__Group__4__Impl : ( FROM ) ;
    public final void rule__Select__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6091:1: ( ( FROM ) )
            // InternalSqlParser.g:6092:1: ( FROM )
            {
            // InternalSqlParser.g:6092:1: ( FROM )
            // InternalSqlParser.g:6093:1: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFROMKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__4__Impl"


    // $ANTLR start "rule__Select__Group__5"
    // InternalSqlParser.g:6106:1: rule__Select__Group__5 : rule__Select__Group__5__Impl rule__Select__Group__6 ;
    public final void rule__Select__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6110:1: ( rule__Select__Group__5__Impl rule__Select__Group__6 )
            // InternalSqlParser.g:6111:2: rule__Select__Group__5__Impl rule__Select__Group__6
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5"


    // $ANTLR start "rule__Select__Group__5__Impl"
    // InternalSqlParser.g:6118:1: rule__Select__Group__5__Impl : ( ( rule__Select__TblAssignment_5 ) ) ;
    public final void rule__Select__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6122:1: ( ( ( rule__Select__TblAssignment_5 ) ) )
            // InternalSqlParser.g:6123:1: ( ( rule__Select__TblAssignment_5 ) )
            {
            // InternalSqlParser.g:6123:1: ( ( rule__Select__TblAssignment_5 ) )
            // InternalSqlParser.g:6124:1: ( rule__Select__TblAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }
            // InternalSqlParser.g:6125:1: ( rule__Select__TblAssignment_5 )
            // InternalSqlParser.g:6125:2: rule__Select__TblAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__Select__TblAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__5__Impl"


    // $ANTLR start "rule__Select__Group__6"
    // InternalSqlParser.g:6135:1: rule__Select__Group__6 : rule__Select__Group__6__Impl rule__Select__Group__7 ;
    public final void rule__Select__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6139:1: ( rule__Select__Group__6__Impl rule__Select__Group__7 )
            // InternalSqlParser.g:6140:2: rule__Select__Group__6__Impl rule__Select__Group__7
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6"


    // $ANTLR start "rule__Select__Group__6__Impl"
    // InternalSqlParser.g:6147:1: rule__Select__Group__6__Impl : ( ( rule__Select__Group_6__0 )? ) ;
    public final void rule__Select__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6151:1: ( ( ( rule__Select__Group_6__0 )? ) )
            // InternalSqlParser.g:6152:1: ( ( rule__Select__Group_6__0 )? )
            {
            // InternalSqlParser.g:6152:1: ( ( rule__Select__Group_6__0 )? )
            // InternalSqlParser.g:6153:1: ( rule__Select__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_6()); 
            }
            // InternalSqlParser.g:6154:1: ( rule__Select__Group_6__0 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==WHERE) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalSqlParser.g:6154:2: rule__Select__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__6__Impl"


    // $ANTLR start "rule__Select__Group__7"
    // InternalSqlParser.g:6164:1: rule__Select__Group__7 : rule__Select__Group__7__Impl rule__Select__Group__8 ;
    public final void rule__Select__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6168:1: ( rule__Select__Group__7__Impl rule__Select__Group__8 )
            // InternalSqlParser.g:6169:2: rule__Select__Group__7__Impl rule__Select__Group__8
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7"


    // $ANTLR start "rule__Select__Group__7__Impl"
    // InternalSqlParser.g:6176:1: rule__Select__Group__7__Impl : ( ( rule__Select__Group_7__0 )? ) ;
    public final void rule__Select__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6180:1: ( ( ( rule__Select__Group_7__0 )? ) )
            // InternalSqlParser.g:6181:1: ( ( rule__Select__Group_7__0 )? )
            {
            // InternalSqlParser.g:6181:1: ( ( rule__Select__Group_7__0 )? )
            // InternalSqlParser.g:6182:1: ( rule__Select__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_7()); 
            }
            // InternalSqlParser.g:6183:1: ( rule__Select__Group_7__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==GROUP) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalSqlParser.g:6183:2: rule__Select__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__7__Impl"


    // $ANTLR start "rule__Select__Group__8"
    // InternalSqlParser.g:6193:1: rule__Select__Group__8 : rule__Select__Group__8__Impl rule__Select__Group__9 ;
    public final void rule__Select__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6197:1: ( rule__Select__Group__8__Impl rule__Select__Group__9 )
            // InternalSqlParser.g:6198:2: rule__Select__Group__8__Impl rule__Select__Group__9
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8"


    // $ANTLR start "rule__Select__Group__8__Impl"
    // InternalSqlParser.g:6205:1: rule__Select__Group__8__Impl : ( ( rule__Select__Group_8__0 )? ) ;
    public final void rule__Select__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6209:1: ( ( ( rule__Select__Group_8__0 )? ) )
            // InternalSqlParser.g:6210:1: ( ( rule__Select__Group_8__0 )? )
            {
            // InternalSqlParser.g:6210:1: ( ( rule__Select__Group_8__0 )? )
            // InternalSqlParser.g:6211:1: ( rule__Select__Group_8__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_8()); 
            }
            // InternalSqlParser.g:6212:1: ( rule__Select__Group_8__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==HAVING) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalSqlParser.g:6212:2: rule__Select__Group_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__8__Impl"


    // $ANTLR start "rule__Select__Group__9"
    // InternalSqlParser.g:6222:1: rule__Select__Group__9 : rule__Select__Group__9__Impl rule__Select__Group__10 ;
    public final void rule__Select__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6226:1: ( rule__Select__Group__9__Impl rule__Select__Group__10 )
            // InternalSqlParser.g:6227:2: rule__Select__Group__9__Impl rule__Select__Group__10
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__10();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9"


    // $ANTLR start "rule__Select__Group__9__Impl"
    // InternalSqlParser.g:6234:1: rule__Select__Group__9__Impl : ( ( rule__Select__Group_9__0 )? ) ;
    public final void rule__Select__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6238:1: ( ( ( rule__Select__Group_9__0 )? ) )
            // InternalSqlParser.g:6239:1: ( ( rule__Select__Group_9__0 )? )
            {
            // InternalSqlParser.g:6239:1: ( ( rule__Select__Group_9__0 )? )
            // InternalSqlParser.g:6240:1: ( rule__Select__Group_9__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_9()); 
            }
            // InternalSqlParser.g:6241:1: ( rule__Select__Group_9__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==ORDER) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSqlParser.g:6241:2: rule__Select__Group_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__9__Impl"


    // $ANTLR start "rule__Select__Group__10"
    // InternalSqlParser.g:6251:1: rule__Select__Group__10 : rule__Select__Group__10__Impl rule__Select__Group__11 ;
    public final void rule__Select__Group__10() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6255:1: ( rule__Select__Group__10__Impl rule__Select__Group__11 )
            // InternalSqlParser.g:6256:2: rule__Select__Group__10__Impl rule__Select__Group__11
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__10__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__11();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10"


    // $ANTLR start "rule__Select__Group__10__Impl"
    // InternalSqlParser.g:6263:1: rule__Select__Group__10__Impl : ( ( rule__Select__Group_10__0 )? ) ;
    public final void rule__Select__Group__10__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6267:1: ( ( ( rule__Select__Group_10__0 )? ) )
            // InternalSqlParser.g:6268:1: ( ( rule__Select__Group_10__0 )? )
            {
            // InternalSqlParser.g:6268:1: ( ( rule__Select__Group_10__0 )? )
            // InternalSqlParser.g:6269:1: ( rule__Select__Group_10__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_10()); 
            }
            // InternalSqlParser.g:6270:1: ( rule__Select__Group_10__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==LIMIT) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSqlParser.g:6270:2: rule__Select__Group_10__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_10__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_10()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__10__Impl"


    // $ANTLR start "rule__Select__Group__11"
    // InternalSqlParser.g:6280:1: rule__Select__Group__11 : rule__Select__Group__11__Impl rule__Select__Group__12 ;
    public final void rule__Select__Group__11() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6284:1: ( rule__Select__Group__11__Impl rule__Select__Group__12 )
            // InternalSqlParser.g:6285:2: rule__Select__Group__11__Impl rule__Select__Group__12
            {
            pushFollow(FOLLOW_20);
            rule__Select__Group__11__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group__12();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11"


    // $ANTLR start "rule__Select__Group__11__Impl"
    // InternalSqlParser.g:6292:1: rule__Select__Group__11__Impl : ( ( rule__Select__Group_11__0 )? ) ;
    public final void rule__Select__Group__11__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6296:1: ( ( ( rule__Select__Group_11__0 )? ) )
            // InternalSqlParser.g:6297:1: ( ( rule__Select__Group_11__0 )? )
            {
            // InternalSqlParser.g:6297:1: ( ( rule__Select__Group_11__0 )? )
            // InternalSqlParser.g:6298:1: ( rule__Select__Group_11__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_11()); 
            }
            // InternalSqlParser.g:6299:1: ( rule__Select__Group_11__0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==OFFSET) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSqlParser.g:6299:2: rule__Select__Group_11__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_11__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_11()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__11__Impl"


    // $ANTLR start "rule__Select__Group__12"
    // InternalSqlParser.g:6309:1: rule__Select__Group__12 : rule__Select__Group__12__Impl ;
    public final void rule__Select__Group__12() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6313:1: ( rule__Select__Group__12__Impl )
            // InternalSqlParser.g:6314:2: rule__Select__Group__12__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group__12__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12"


    // $ANTLR start "rule__Select__Group__12__Impl"
    // InternalSqlParser.g:6320:1: rule__Select__Group__12__Impl : ( ( rule__Select__Group_12__0 )? ) ;
    public final void rule__Select__Group__12__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6324:1: ( ( ( rule__Select__Group_12__0 )? ) )
            // InternalSqlParser.g:6325:1: ( ( rule__Select__Group_12__0 )? )
            {
            // InternalSqlParser.g:6325:1: ( ( rule__Select__Group_12__0 )? )
            // InternalSqlParser.g:6326:1: ( rule__Select__Group_12__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_12()); 
            }
            // InternalSqlParser.g:6327:1: ( rule__Select__Group_12__0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==FETCH) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalSqlParser.g:6327:2: rule__Select__Group_12__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_12__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_12()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group__12__Impl"


    // $ANTLR start "rule__Select__Group_2__0"
    // InternalSqlParser.g:6363:1: rule__Select__Group_2__0 : rule__Select__Group_2__0__Impl rule__Select__Group_2__1 ;
    public final void rule__Select__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6367:1: ( rule__Select__Group_2__0__Impl rule__Select__Group_2__1 )
            // InternalSqlParser.g:6368:2: rule__Select__Group_2__0__Impl rule__Select__Group_2__1
            {
            pushFollow(FOLLOW_21);
            rule__Select__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0"


    // $ANTLR start "rule__Select__Group_2__0__Impl"
    // InternalSqlParser.g:6375:1: rule__Select__Group_2__0__Impl : ( TOP ) ;
    public final void rule__Select__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6379:1: ( ( TOP ) )
            // InternalSqlParser.g:6380:1: ( TOP )
            {
            // InternalSqlParser.g:6380:1: ( TOP )
            // InternalSqlParser.g:6381:1: TOP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }
            match(input,TOP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTOPKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__0__Impl"


    // $ANTLR start "rule__Select__Group_2__1"
    // InternalSqlParser.g:6394:1: rule__Select__Group_2__1 : rule__Select__Group_2__1__Impl rule__Select__Group_2__2 ;
    public final void rule__Select__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6398:1: ( rule__Select__Group_2__1__Impl rule__Select__Group_2__2 )
            // InternalSqlParser.g:6399:2: rule__Select__Group_2__1__Impl rule__Select__Group_2__2
            {
            pushFollow(FOLLOW_22);
            rule__Select__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1"


    // $ANTLR start "rule__Select__Group_2__1__Impl"
    // InternalSqlParser.g:6406:1: rule__Select__Group_2__1__Impl : ( ( rule__Select__Alternatives_2_1 ) ) ;
    public final void rule__Select__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6410:1: ( ( ( rule__Select__Alternatives_2_1 ) ) )
            // InternalSqlParser.g:6411:1: ( ( rule__Select__Alternatives_2_1 ) )
            {
            // InternalSqlParser.g:6411:1: ( ( rule__Select__Alternatives_2_1 ) )
            // InternalSqlParser.g:6412:1: ( rule__Select__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }
            // InternalSqlParser.g:6413:1: ( rule__Select__Alternatives_2_1 )
            // InternalSqlParser.g:6413:2: rule__Select__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__1__Impl"


    // $ANTLR start "rule__Select__Group_2__2"
    // InternalSqlParser.g:6423:1: rule__Select__Group_2__2 : rule__Select__Group_2__2__Impl rule__Select__Group_2__3 ;
    public final void rule__Select__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6427:1: ( rule__Select__Group_2__2__Impl rule__Select__Group_2__3 )
            // InternalSqlParser.g:6428:2: rule__Select__Group_2__2__Impl rule__Select__Group_2__3
            {
            pushFollow(FOLLOW_22);
            rule__Select__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2"


    // $ANTLR start "rule__Select__Group_2__2__Impl"
    // InternalSqlParser.g:6435:1: rule__Select__Group_2__2__Impl : ( ( PERCENT )? ) ;
    public final void rule__Select__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6439:1: ( ( ( PERCENT )? ) )
            // InternalSqlParser.g:6440:1: ( ( PERCENT )? )
            {
            // InternalSqlParser.g:6440:1: ( ( PERCENT )? )
            // InternalSqlParser.g:6441:1: ( PERCENT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }
            // InternalSqlParser.g:6442:1: ( PERCENT )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==PERCENT) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSqlParser.g:6443:2: PERCENT
                    {
                    match(input,PERCENT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getPERCENTKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__2__Impl"


    // $ANTLR start "rule__Select__Group_2__3"
    // InternalSqlParser.g:6454:1: rule__Select__Group_2__3 : rule__Select__Group_2__3__Impl ;
    public final void rule__Select__Group_2__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6458:1: ( rule__Select__Group_2__3__Impl )
            // InternalSqlParser.g:6459:2: rule__Select__Group_2__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3"


    // $ANTLR start "rule__Select__Group_2__3__Impl"
    // InternalSqlParser.g:6465:1: rule__Select__Group_2__3__Impl : ( ( rule__Select__Group_2_3__0 )? ) ;
    public final void rule__Select__Group_2__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6469:1: ( ( ( rule__Select__Group_2_3__0 )? ) )
            // InternalSqlParser.g:6470:1: ( ( rule__Select__Group_2_3__0 )? )
            {
            // InternalSqlParser.g:6470:1: ( ( rule__Select__Group_2_3__0 )? )
            // InternalSqlParser.g:6471:1: ( rule__Select__Group_2_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }
            // InternalSqlParser.g:6472:1: ( rule__Select__Group_2_3__0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==WITH) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalSqlParser.g:6472:2: rule__Select__Group_2_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Select__Group_2_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroup_2_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2__3__Impl"


    // $ANTLR start "rule__Select__Group_2_3__0"
    // InternalSqlParser.g:6490:1: rule__Select__Group_2_3__0 : rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 ;
    public final void rule__Select__Group_2_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6494:1: ( rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1 )
            // InternalSqlParser.g:6495:2: rule__Select__Group_2_3__0__Impl rule__Select__Group_2_3__1
            {
            pushFollow(FOLLOW_23);
            rule__Select__Group_2_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0"


    // $ANTLR start "rule__Select__Group_2_3__0__Impl"
    // InternalSqlParser.g:6502:1: rule__Select__Group_2_3__0__Impl : ( WITH ) ;
    public final void rule__Select__Group_2_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6506:1: ( ( WITH ) )
            // InternalSqlParser.g:6507:1: ( WITH )
            {
            // InternalSqlParser.g:6507:1: ( WITH )
            // InternalSqlParser.g:6508:1: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWITHKeyword_2_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__0__Impl"


    // $ANTLR start "rule__Select__Group_2_3__1"
    // InternalSqlParser.g:6521:1: rule__Select__Group_2_3__1 : rule__Select__Group_2_3__1__Impl ;
    public final void rule__Select__Group_2_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6525:1: ( rule__Select__Group_2_3__1__Impl )
            // InternalSqlParser.g:6526:2: rule__Select__Group_2_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_2_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1"


    // $ANTLR start "rule__Select__Group_2_3__1__Impl"
    // InternalSqlParser.g:6532:1: rule__Select__Group_2_3__1__Impl : ( TIES ) ;
    public final void rule__Select__Group_2_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6536:1: ( ( TIES ) )
            // InternalSqlParser.g:6537:1: ( TIES )
            {
            // InternalSqlParser.g:6537:1: ( TIES )
            // InternalSqlParser.g:6538:1: TIES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }
            match(input,TIES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTIESKeyword_2_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_2_3__1__Impl"


    // $ANTLR start "rule__Select__Group_6__0"
    // InternalSqlParser.g:6555:1: rule__Select__Group_6__0 : rule__Select__Group_6__0__Impl rule__Select__Group_6__1 ;
    public final void rule__Select__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6559:1: ( rule__Select__Group_6__0__Impl rule__Select__Group_6__1 )
            // InternalSqlParser.g:6560:2: rule__Select__Group_6__0__Impl rule__Select__Group_6__1
            {
            pushFollow(FOLLOW_24);
            rule__Select__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0"


    // $ANTLR start "rule__Select__Group_6__0__Impl"
    // InternalSqlParser.g:6567:1: rule__Select__Group_6__0__Impl : ( WHERE ) ;
    public final void rule__Select__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6571:1: ( ( WHERE ) )
            // InternalSqlParser.g:6572:1: ( WHERE )
            {
            // InternalSqlParser.g:6572:1: ( WHERE )
            // InternalSqlParser.g:6573:1: WHERE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }
            match(input,WHERE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWHEREKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__0__Impl"


    // $ANTLR start "rule__Select__Group_6__1"
    // InternalSqlParser.g:6586:1: rule__Select__Group_6__1 : rule__Select__Group_6__1__Impl ;
    public final void rule__Select__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6590:1: ( rule__Select__Group_6__1__Impl )
            // InternalSqlParser.g:6591:2: rule__Select__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1"


    // $ANTLR start "rule__Select__Group_6__1__Impl"
    // InternalSqlParser.g:6597:1: rule__Select__Group_6__1__Impl : ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) ;
    public final void rule__Select__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6601:1: ( ( ( rule__Select__WhereExpressionAssignment_6_1 ) ) )
            // InternalSqlParser.g:6602:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            {
            // InternalSqlParser.g:6602:1: ( ( rule__Select__WhereExpressionAssignment_6_1 ) )
            // InternalSqlParser.g:6603:1: ( rule__Select__WhereExpressionAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }
            // InternalSqlParser.g:6604:1: ( rule__Select__WhereExpressionAssignment_6_1 )
            // InternalSqlParser.g:6604:2: rule__Select__WhereExpressionAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__WhereExpressionAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_6__1__Impl"


    // $ANTLR start "rule__Select__Group_7__0"
    // InternalSqlParser.g:6618:1: rule__Select__Group_7__0 : rule__Select__Group_7__0__Impl rule__Select__Group_7__1 ;
    public final void rule__Select__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6622:1: ( rule__Select__Group_7__0__Impl rule__Select__Group_7__1 )
            // InternalSqlParser.g:6623:2: rule__Select__Group_7__0__Impl rule__Select__Group_7__1
            {
            pushFollow(FOLLOW_25);
            rule__Select__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0"


    // $ANTLR start "rule__Select__Group_7__0__Impl"
    // InternalSqlParser.g:6630:1: rule__Select__Group_7__0__Impl : ( GROUP ) ;
    public final void rule__Select__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6634:1: ( ( GROUP ) )
            // InternalSqlParser.g:6635:1: ( GROUP )
            {
            // InternalSqlParser.g:6635:1: ( GROUP )
            // InternalSqlParser.g:6636:1: GROUP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }
            match(input,GROUP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGROUPKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__0__Impl"


    // $ANTLR start "rule__Select__Group_7__1"
    // InternalSqlParser.g:6649:1: rule__Select__Group_7__1 : rule__Select__Group_7__1__Impl rule__Select__Group_7__2 ;
    public final void rule__Select__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6653:1: ( rule__Select__Group_7__1__Impl rule__Select__Group_7__2 )
            // InternalSqlParser.g:6654:2: rule__Select__Group_7__1__Impl rule__Select__Group_7__2
            {
            pushFollow(FOLLOW_26);
            rule__Select__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1"


    // $ANTLR start "rule__Select__Group_7__1__Impl"
    // InternalSqlParser.g:6661:1: rule__Select__Group_7__1__Impl : ( BY ) ;
    public final void rule__Select__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6665:1: ( ( BY ) )
            // InternalSqlParser.g:6666:1: ( BY )
            {
            // InternalSqlParser.g:6666:1: ( BY )
            // InternalSqlParser.g:6667:1: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__1__Impl"


    // $ANTLR start "rule__Select__Group_7__2"
    // InternalSqlParser.g:6680:1: rule__Select__Group_7__2 : rule__Select__Group_7__2__Impl ;
    public final void rule__Select__Group_7__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6684:1: ( rule__Select__Group_7__2__Impl )
            // InternalSqlParser.g:6685:2: rule__Select__Group_7__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_7__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2"


    // $ANTLR start "rule__Select__Group_7__2__Impl"
    // InternalSqlParser.g:6691:1: rule__Select__Group_7__2__Impl : ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) ;
    public final void rule__Select__Group_7__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6695:1: ( ( ( rule__Select__GroupByEntryAssignment_7_2 ) ) )
            // InternalSqlParser.g:6696:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            {
            // InternalSqlParser.g:6696:1: ( ( rule__Select__GroupByEntryAssignment_7_2 ) )
            // InternalSqlParser.g:6697:1: ( rule__Select__GroupByEntryAssignment_7_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }
            // InternalSqlParser.g:6698:1: ( rule__Select__GroupByEntryAssignment_7_2 )
            // InternalSqlParser.g:6698:2: rule__Select__GroupByEntryAssignment_7_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__GroupByEntryAssignment_7_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryAssignment_7_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_7__2__Impl"


    // $ANTLR start "rule__Select__Group_8__0"
    // InternalSqlParser.g:6714:1: rule__Select__Group_8__0 : rule__Select__Group_8__0__Impl rule__Select__Group_8__1 ;
    public final void rule__Select__Group_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6718:1: ( rule__Select__Group_8__0__Impl rule__Select__Group_8__1 )
            // InternalSqlParser.g:6719:2: rule__Select__Group_8__0__Impl rule__Select__Group_8__1
            {
            pushFollow(FOLLOW_24);
            rule__Select__Group_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0"


    // $ANTLR start "rule__Select__Group_8__0__Impl"
    // InternalSqlParser.g:6726:1: rule__Select__Group_8__0__Impl : ( HAVING ) ;
    public final void rule__Select__Group_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6730:1: ( ( HAVING ) )
            // InternalSqlParser.g:6731:1: ( HAVING )
            {
            // InternalSqlParser.g:6731:1: ( HAVING )
            // InternalSqlParser.g:6732:1: HAVING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }
            match(input,HAVING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHAVINGKeyword_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__0__Impl"


    // $ANTLR start "rule__Select__Group_8__1"
    // InternalSqlParser.g:6745:1: rule__Select__Group_8__1 : rule__Select__Group_8__1__Impl ;
    public final void rule__Select__Group_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6749:1: ( rule__Select__Group_8__1__Impl )
            // InternalSqlParser.g:6750:2: rule__Select__Group_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1"


    // $ANTLR start "rule__Select__Group_8__1__Impl"
    // InternalSqlParser.g:6756:1: rule__Select__Group_8__1__Impl : ( ( rule__Select__HavingEntryAssignment_8_1 ) ) ;
    public final void rule__Select__Group_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6760:1: ( ( ( rule__Select__HavingEntryAssignment_8_1 ) ) )
            // InternalSqlParser.g:6761:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            {
            // InternalSqlParser.g:6761:1: ( ( rule__Select__HavingEntryAssignment_8_1 ) )
            // InternalSqlParser.g:6762:1: ( rule__Select__HavingEntryAssignment_8_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }
            // InternalSqlParser.g:6763:1: ( rule__Select__HavingEntryAssignment_8_1 )
            // InternalSqlParser.g:6763:2: rule__Select__HavingEntryAssignment_8_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__HavingEntryAssignment_8_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryAssignment_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_8__1__Impl"


    // $ANTLR start "rule__Select__Group_9__0"
    // InternalSqlParser.g:6777:1: rule__Select__Group_9__0 : rule__Select__Group_9__0__Impl rule__Select__Group_9__1 ;
    public final void rule__Select__Group_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6781:1: ( rule__Select__Group_9__0__Impl rule__Select__Group_9__1 )
            // InternalSqlParser.g:6782:2: rule__Select__Group_9__0__Impl rule__Select__Group_9__1
            {
            pushFollow(FOLLOW_25);
            rule__Select__Group_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0"


    // $ANTLR start "rule__Select__Group_9__0__Impl"
    // InternalSqlParser.g:6789:1: rule__Select__Group_9__0__Impl : ( ORDER ) ;
    public final void rule__Select__Group_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6793:1: ( ( ORDER ) )
            // InternalSqlParser.g:6794:1: ( ORDER )
            {
            // InternalSqlParser.g:6794:1: ( ORDER )
            // InternalSqlParser.g:6795:1: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getORDERKeyword_9_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__0__Impl"


    // $ANTLR start "rule__Select__Group_9__1"
    // InternalSqlParser.g:6808:1: rule__Select__Group_9__1 : rule__Select__Group_9__1__Impl rule__Select__Group_9__2 ;
    public final void rule__Select__Group_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6812:1: ( rule__Select__Group_9__1__Impl rule__Select__Group_9__2 )
            // InternalSqlParser.g:6813:2: rule__Select__Group_9__1__Impl rule__Select__Group_9__2
            {
            pushFollow(FOLLOW_26);
            rule__Select__Group_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1"


    // $ANTLR start "rule__Select__Group_9__1__Impl"
    // InternalSqlParser.g:6820:1: rule__Select__Group_9__1__Impl : ( BY ) ;
    public final void rule__Select__Group_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6824:1: ( ( BY ) )
            // InternalSqlParser.g:6825:1: ( BY )
            {
            // InternalSqlParser.g:6825:1: ( BY )
            // InternalSqlParser.g:6826:1: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getBYKeyword_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__1__Impl"


    // $ANTLR start "rule__Select__Group_9__2"
    // InternalSqlParser.g:6839:1: rule__Select__Group_9__2 : rule__Select__Group_9__2__Impl ;
    public final void rule__Select__Group_9__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6843:1: ( rule__Select__Group_9__2__Impl )
            // InternalSqlParser.g:6844:2: rule__Select__Group_9__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_9__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2"


    // $ANTLR start "rule__Select__Group_9__2__Impl"
    // InternalSqlParser.g:6850:1: rule__Select__Group_9__2__Impl : ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) ;
    public final void rule__Select__Group_9__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6854:1: ( ( ( rule__Select__OrderByEntryAssignment_9_2 ) ) )
            // InternalSqlParser.g:6855:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            {
            // InternalSqlParser.g:6855:1: ( ( rule__Select__OrderByEntryAssignment_9_2 ) )
            // InternalSqlParser.g:6856:1: ( rule__Select__OrderByEntryAssignment_9_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }
            // InternalSqlParser.g:6857:1: ( rule__Select__OrderByEntryAssignment_9_2 )
            // InternalSqlParser.g:6857:2: rule__Select__OrderByEntryAssignment_9_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__OrderByEntryAssignment_9_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryAssignment_9_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_9__2__Impl"


    // $ANTLR start "rule__Select__Group_10__0"
    // InternalSqlParser.g:6873:1: rule__Select__Group_10__0 : rule__Select__Group_10__0__Impl rule__Select__Group_10__1 ;
    public final void rule__Select__Group_10__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6877:1: ( rule__Select__Group_10__0__Impl rule__Select__Group_10__1 )
            // InternalSqlParser.g:6878:2: rule__Select__Group_10__0__Impl rule__Select__Group_10__1
            {
            pushFollow(FOLLOW_27);
            rule__Select__Group_10__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0"


    // $ANTLR start "rule__Select__Group_10__0__Impl"
    // InternalSqlParser.g:6885:1: rule__Select__Group_10__0__Impl : ( LIMIT ) ;
    public final void rule__Select__Group_10__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6889:1: ( ( LIMIT ) )
            // InternalSqlParser.g:6890:1: ( LIMIT )
            {
            // InternalSqlParser.g:6890:1: ( LIMIT )
            // InternalSqlParser.g:6891:1: LIMIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }
            match(input,LIMIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLIMITKeyword_10_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__0__Impl"


    // $ANTLR start "rule__Select__Group_10__1"
    // InternalSqlParser.g:6904:1: rule__Select__Group_10__1 : rule__Select__Group_10__1__Impl ;
    public final void rule__Select__Group_10__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6908:1: ( rule__Select__Group_10__1__Impl )
            // InternalSqlParser.g:6909:2: rule__Select__Group_10__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_10__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1"


    // $ANTLR start "rule__Select__Group_10__1__Impl"
    // InternalSqlParser.g:6915:1: rule__Select__Group_10__1__Impl : ( ( rule__Select__LimAssignment_10_1 ) ) ;
    public final void rule__Select__Group_10__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6919:1: ( ( ( rule__Select__LimAssignment_10_1 ) ) )
            // InternalSqlParser.g:6920:1: ( ( rule__Select__LimAssignment_10_1 ) )
            {
            // InternalSqlParser.g:6920:1: ( ( rule__Select__LimAssignment_10_1 ) )
            // InternalSqlParser.g:6921:1: ( rule__Select__LimAssignment_10_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }
            // InternalSqlParser.g:6922:1: ( rule__Select__LimAssignment_10_1 )
            // InternalSqlParser.g:6922:2: rule__Select__LimAssignment_10_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__LimAssignment_10_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimAssignment_10_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_10__1__Impl"


    // $ANTLR start "rule__Select__Group_11__0"
    // InternalSqlParser.g:6936:1: rule__Select__Group_11__0 : rule__Select__Group_11__0__Impl rule__Select__Group_11__1 ;
    public final void rule__Select__Group_11__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6940:1: ( rule__Select__Group_11__0__Impl rule__Select__Group_11__1 )
            // InternalSqlParser.g:6941:2: rule__Select__Group_11__0__Impl rule__Select__Group_11__1
            {
            pushFollow(FOLLOW_28);
            rule__Select__Group_11__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0"


    // $ANTLR start "rule__Select__Group_11__0__Impl"
    // InternalSqlParser.g:6948:1: rule__Select__Group_11__0__Impl : ( OFFSET ) ;
    public final void rule__Select__Group_11__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6952:1: ( ( OFFSET ) )
            // InternalSqlParser.g:6953:1: ( OFFSET )
            {
            // InternalSqlParser.g:6953:1: ( OFFSET )
            // InternalSqlParser.g:6954:1: OFFSET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }
            match(input,OFFSET,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOFFSETKeyword_11_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__0__Impl"


    // $ANTLR start "rule__Select__Group_11__1"
    // InternalSqlParser.g:6967:1: rule__Select__Group_11__1 : rule__Select__Group_11__1__Impl ;
    public final void rule__Select__Group_11__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6971:1: ( rule__Select__Group_11__1__Impl )
            // InternalSqlParser.g:6972:2: rule__Select__Group_11__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_11__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1"


    // $ANTLR start "rule__Select__Group_11__1__Impl"
    // InternalSqlParser.g:6978:1: rule__Select__Group_11__1__Impl : ( ( rule__Select__OffsetAssignment_11_1 ) ) ;
    public final void rule__Select__Group_11__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:6982:1: ( ( ( rule__Select__OffsetAssignment_11_1 ) ) )
            // InternalSqlParser.g:6983:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            {
            // InternalSqlParser.g:6983:1: ( ( rule__Select__OffsetAssignment_11_1 ) )
            // InternalSqlParser.g:6984:1: ( rule__Select__OffsetAssignment_11_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }
            // InternalSqlParser.g:6985:1: ( rule__Select__OffsetAssignment_11_1 )
            // InternalSqlParser.g:6985:2: rule__Select__OffsetAssignment_11_1
            {
            pushFollow(FOLLOW_2);
            rule__Select__OffsetAssignment_11_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetAssignment_11_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_11__1__Impl"


    // $ANTLR start "rule__Select__Group_12__0"
    // InternalSqlParser.g:6999:1: rule__Select__Group_12__0 : rule__Select__Group_12__0__Impl rule__Select__Group_12__1 ;
    public final void rule__Select__Group_12__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7003:1: ( rule__Select__Group_12__0__Impl rule__Select__Group_12__1 )
            // InternalSqlParser.g:7004:2: rule__Select__Group_12__0__Impl rule__Select__Group_12__1
            {
            pushFollow(FOLLOW_29);
            rule__Select__Group_12__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0"


    // $ANTLR start "rule__Select__Group_12__0__Impl"
    // InternalSqlParser.g:7011:1: rule__Select__Group_12__0__Impl : ( FETCH ) ;
    public final void rule__Select__Group_12__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7015:1: ( ( FETCH ) )
            // InternalSqlParser.g:7016:1: ( FETCH )
            {
            // InternalSqlParser.g:7016:1: ( FETCH )
            // InternalSqlParser.g:7017:1: FETCH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }
            match(input,FETCH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFETCHKeyword_12_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__0__Impl"


    // $ANTLR start "rule__Select__Group_12__1"
    // InternalSqlParser.g:7030:1: rule__Select__Group_12__1 : rule__Select__Group_12__1__Impl rule__Select__Group_12__2 ;
    public final void rule__Select__Group_12__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7034:1: ( rule__Select__Group_12__1__Impl rule__Select__Group_12__2 )
            // InternalSqlParser.g:7035:2: rule__Select__Group_12__1__Impl rule__Select__Group_12__2
            {
            pushFollow(FOLLOW_13);
            rule__Select__Group_12__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1"


    // $ANTLR start "rule__Select__Group_12__1__Impl"
    // InternalSqlParser.g:7042:1: rule__Select__Group_12__1__Impl : ( FIRST ) ;
    public final void rule__Select__Group_12__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7046:1: ( ( FIRST ) )
            // InternalSqlParser.g:7047:1: ( FIRST )
            {
            // InternalSqlParser.g:7047:1: ( FIRST )
            // InternalSqlParser.g:7048:1: FIRST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }
            match(input,FIRST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFIRSTKeyword_12_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__1__Impl"


    // $ANTLR start "rule__Select__Group_12__2"
    // InternalSqlParser.g:7061:1: rule__Select__Group_12__2 : rule__Select__Group_12__2__Impl ;
    public final void rule__Select__Group_12__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7065:1: ( rule__Select__Group_12__2__Impl )
            // InternalSqlParser.g:7066:2: rule__Select__Group_12__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Select__Group_12__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2"


    // $ANTLR start "rule__Select__Group_12__2__Impl"
    // InternalSqlParser.g:7072:1: rule__Select__Group_12__2__Impl : ( ( rule__Select__FetchFirstAssignment_12_2 ) ) ;
    public final void rule__Select__Group_12__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7076:1: ( ( ( rule__Select__FetchFirstAssignment_12_2 ) ) )
            // InternalSqlParser.g:7077:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            {
            // InternalSqlParser.g:7077:1: ( ( rule__Select__FetchFirstAssignment_12_2 ) )
            // InternalSqlParser.g:7078:1: ( rule__Select__FetchFirstAssignment_12_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }
            // InternalSqlParser.g:7079:1: ( rule__Select__FetchFirstAssignment_12_2 )
            // InternalSqlParser.g:7079:2: rule__Select__FetchFirstAssignment_12_2
            {
            pushFollow(FOLLOW_2);
            rule__Select__FetchFirstAssignment_12_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstAssignment_12_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__Group_12__2__Impl"


    // $ANTLR start "rule__Columns__Group__0"
    // InternalSqlParser.g:7095:1: rule__Columns__Group__0 : rule__Columns__Group__0__Impl rule__Columns__Group__1 ;
    public final void rule__Columns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7099:1: ( rule__Columns__Group__0__Impl rule__Columns__Group__1 )
            // InternalSqlParser.g:7100:2: rule__Columns__Group__0__Impl rule__Columns__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__Columns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0"


    // $ANTLR start "rule__Columns__Group__0__Impl"
    // InternalSqlParser.g:7107:1: rule__Columns__Group__0__Impl : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7111:1: ( ( ruleColumnOrAlias ) )
            // InternalSqlParser.g:7112:1: ( ruleColumnOrAlias )
            {
            // InternalSqlParser.g:7112:1: ( ruleColumnOrAlias )
            // InternalSqlParser.g:7113:1: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getColumnOrAliasParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__0__Impl"


    // $ANTLR start "rule__Columns__Group__1"
    // InternalSqlParser.g:7124:1: rule__Columns__Group__1 : rule__Columns__Group__1__Impl ;
    public final void rule__Columns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7128:1: ( rule__Columns__Group__1__Impl )
            // InternalSqlParser.g:7129:2: rule__Columns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1"


    // $ANTLR start "rule__Columns__Group__1__Impl"
    // InternalSqlParser.g:7135:1: rule__Columns__Group__1__Impl : ( ( rule__Columns__Group_1__0 )? ) ;
    public final void rule__Columns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7139:1: ( ( ( rule__Columns__Group_1__0 )? ) )
            // InternalSqlParser.g:7140:1: ( ( rule__Columns__Group_1__0 )? )
            {
            // InternalSqlParser.g:7140:1: ( ( rule__Columns__Group_1__0 )? )
            // InternalSqlParser.g:7141:1: ( rule__Columns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:7142:1: ( rule__Columns__Group_1__0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==Comma) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalSqlParser.g:7142:2: rule__Columns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Columns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group__1__Impl"


    // $ANTLR start "rule__Columns__Group_1__0"
    // InternalSqlParser.g:7156:1: rule__Columns__Group_1__0 : rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 ;
    public final void rule__Columns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7160:1: ( rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1 )
            // InternalSqlParser.g:7161:2: rule__Columns__Group_1__0__Impl rule__Columns__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Columns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0"


    // $ANTLR start "rule__Columns__Group_1__0__Impl"
    // InternalSqlParser.g:7168:1: rule__Columns__Group_1__0__Impl : ( () ) ;
    public final void rule__Columns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7172:1: ( ( () ) )
            // InternalSqlParser.g:7173:1: ( () )
            {
            // InternalSqlParser.g:7173:1: ( () )
            // InternalSqlParser.g:7174:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:7175:1: ()
            // InternalSqlParser.g:7177:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getOrColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1__1"
    // InternalSqlParser.g:7187:1: rule__Columns__Group_1__1 : rule__Columns__Group_1__1__Impl ;
    public final void rule__Columns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7191:1: ( rule__Columns__Group_1__1__Impl )
            // InternalSqlParser.g:7192:2: rule__Columns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1"


    // $ANTLR start "rule__Columns__Group_1__1__Impl"
    // InternalSqlParser.g:7198:1: rule__Columns__Group_1__1__Impl : ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) ;
    public final void rule__Columns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7202:1: ( ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:7203:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:7203:1: ( ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* ) )
            // InternalSqlParser.g:7204:1: ( ( rule__Columns__Group_1_1__0 ) ) ( ( rule__Columns__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:7204:1: ( ( rule__Columns__Group_1_1__0 ) )
            // InternalSqlParser.g:7205:1: ( rule__Columns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:7206:1: ( rule__Columns__Group_1_1__0 )
            // InternalSqlParser.g:7206:2: rule__Columns__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__Columns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:7209:1: ( ( rule__Columns__Group_1_1__0 )* )
            // InternalSqlParser.g:7210:1: ( rule__Columns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:7211:1: ( rule__Columns__Group_1_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==Comma) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSqlParser.g:7211:2: rule__Columns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Columns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1__1__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__0"
    // InternalSqlParser.g:7226:1: rule__Columns__Group_1_1__0 : rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 ;
    public final void rule__Columns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7230:1: ( rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1 )
            // InternalSqlParser.g:7231:2: rule__Columns__Group_1_1__0__Impl rule__Columns__Group_1_1__1
            {
            pushFollow(FOLLOW_17);
            rule__Columns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0"


    // $ANTLR start "rule__Columns__Group_1_1__0__Impl"
    // InternalSqlParser.g:7238:1: rule__Columns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Columns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7242:1: ( ( Comma ) )
            // InternalSqlParser.g:7243:1: ( Comma )
            {
            // InternalSqlParser.g:7243:1: ( Comma )
            // InternalSqlParser.g:7244:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__0__Impl"


    // $ANTLR start "rule__Columns__Group_1_1__1"
    // InternalSqlParser.g:7257:1: rule__Columns__Group_1_1__1 : rule__Columns__Group_1_1__1__Impl ;
    public final void rule__Columns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7261:1: ( rule__Columns__Group_1_1__1__Impl )
            // InternalSqlParser.g:7262:2: rule__Columns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Columns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1"


    // $ANTLR start "rule__Columns__Group_1_1__1__Impl"
    // InternalSqlParser.g:7268:1: rule__Columns__Group_1_1__1__Impl : ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Columns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7272:1: ( ( ( rule__Columns__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:7273:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:7273:1: ( ( rule__Columns__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:7274:1: ( rule__Columns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:7275:1: ( rule__Columns__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:7275:2: rule__Columns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Columns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__Group_1_1__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0"
    // InternalSqlParser.g:7289:1: rule__ColumnOrAlias__Group_0__0 : rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 ;
    public final void rule__ColumnOrAlias__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7293:1: ( rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1 )
            // InternalSqlParser.g:7294:2: rule__ColumnOrAlias__Group_0__0__Impl rule__ColumnOrAlias__Group_0__1
            {
            pushFollow(FOLLOW_30);
            rule__ColumnOrAlias__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__0__Impl"
    // InternalSqlParser.g:7301:1: rule__ColumnOrAlias__Group_0__0__Impl : ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) ;
    public final void rule__ColumnOrAlias__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7305:1: ( ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) ) )
            // InternalSqlParser.g:7306:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            {
            // InternalSqlParser.g:7306:1: ( ( rule__ColumnOrAlias__CeAssignment_0_0 ) )
            // InternalSqlParser.g:7307:1: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }
            // InternalSqlParser.g:7308:1: ( rule__ColumnOrAlias__CeAssignment_0_0 )
            // InternalSqlParser.g:7308:2: rule__ColumnOrAlias__CeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__CeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__0__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1"
    // InternalSqlParser.g:7318:1: rule__ColumnOrAlias__Group_0__1 : rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 ;
    public final void rule__ColumnOrAlias__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7322:1: ( rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2 )
            // InternalSqlParser.g:7323:2: rule__ColumnOrAlias__Group_0__1__Impl rule__ColumnOrAlias__Group_0__2
            {
            pushFollow(FOLLOW_30);
            rule__ColumnOrAlias__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__1__Impl"
    // InternalSqlParser.g:7330:1: rule__ColumnOrAlias__Group_0__1__Impl : ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7334:1: ( ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? ) )
            // InternalSqlParser.g:7335:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            {
            // InternalSqlParser.g:7335:1: ( ( rule__ColumnOrAlias__AliasAssignment_0_1 )? )
            // InternalSqlParser.g:7336:1: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }
            // InternalSqlParser.g:7337:1: ( rule__ColumnOrAlias__AliasAssignment_0_1 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==AS) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalSqlParser.g:7337:2: rule__ColumnOrAlias__AliasAssignment_0_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__AliasAssignment_0_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__1__Impl"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2"
    // InternalSqlParser.g:7347:1: rule__ColumnOrAlias__Group_0__2 : rule__ColumnOrAlias__Group_0__2__Impl ;
    public final void rule__ColumnOrAlias__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7351:1: ( rule__ColumnOrAlias__Group_0__2__Impl )
            // InternalSqlParser.g:7352:2: rule__ColumnOrAlias__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOrAlias__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2"


    // $ANTLR start "rule__ColumnOrAlias__Group_0__2__Impl"
    // InternalSqlParser.g:7358:1: rule__ColumnOrAlias__Group_0__2__Impl : ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) ;
    public final void rule__ColumnOrAlias__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7362:1: ( ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? ) )
            // InternalSqlParser.g:7363:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            {
            // InternalSqlParser.g:7363:1: ( ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )? )
            // InternalSqlParser.g:7364:1: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }
            // InternalSqlParser.g:7365:1: ( rule__ColumnOrAlias__ColAliasAssignment_0_2 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=RULE_STRING && LA76_0<=RULE_ID)) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSqlParser.g:7365:2: rule__ColumnOrAlias__ColAliasAssignment_0_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOrAlias__ColAliasAssignment_0_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasAssignment_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__Group_0__2__Impl"


    // $ANTLR start "rule__ColumnFull__Group__0"
    // InternalSqlParser.g:7381:1: rule__ColumnFull__Group__0 : rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 ;
    public final void rule__ColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7385:1: ( rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1 )
            // InternalSqlParser.g:7386:2: rule__ColumnFull__Group__0__Impl rule__ColumnFull__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__ColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0"


    // $ANTLR start "rule__ColumnFull__Group__0__Impl"
    // InternalSqlParser.g:7393:1: rule__ColumnFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7397:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:7398:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:7398:1: ( ruleDbObjectName )
            // InternalSqlParser.g:7399:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group__1"
    // InternalSqlParser.g:7410:1: rule__ColumnFull__Group__1 : rule__ColumnFull__Group__1__Impl ;
    public final void rule__ColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7414:1: ( rule__ColumnFull__Group__1__Impl )
            // InternalSqlParser.g:7415:2: rule__ColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1"


    // $ANTLR start "rule__ColumnFull__Group__1__Impl"
    // InternalSqlParser.g:7421:1: rule__ColumnFull__Group__1__Impl : ( ( rule__ColumnFull__Group_1__0 )? ) ;
    public final void rule__ColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7425:1: ( ( ( rule__ColumnFull__Group_1__0 )? ) )
            // InternalSqlParser.g:7426:1: ( ( rule__ColumnFull__Group_1__0 )? )
            {
            // InternalSqlParser.g:7426:1: ( ( rule__ColumnFull__Group_1__0 )? )
            // InternalSqlParser.g:7427:1: ( rule__ColumnFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:7428:1: ( rule__ColumnFull__Group_1__0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==FullStop) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSqlParser.g:7428:2: rule__ColumnFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__0"
    // InternalSqlParser.g:7442:1: rule__ColumnFull__Group_1__0 : rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 ;
    public final void rule__ColumnFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7446:1: ( rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1 )
            // InternalSqlParser.g:7447:2: rule__ColumnFull__Group_1__0__Impl rule__ColumnFull__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__ColumnFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1__0__Impl"
    // InternalSqlParser.g:7454:1: rule__ColumnFull__Group_1__0__Impl : ( () ) ;
    public final void rule__ColumnFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7458:1: ( ( () ) )
            // InternalSqlParser.g:7459:1: ( () )
            {
            // InternalSqlParser.g:7459:1: ( () )
            // InternalSqlParser.g:7460:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:7461:1: ()
            // InternalSqlParser.g:7463:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getColEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1__1"
    // InternalSqlParser.g:7473:1: rule__ColumnFull__Group_1__1 : rule__ColumnFull__Group_1__1__Impl ;
    public final void rule__ColumnFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7477:1: ( rule__ColumnFull__Group_1__1__Impl )
            // InternalSqlParser.g:7478:2: rule__ColumnFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1__1__Impl"
    // InternalSqlParser.g:7484:1: rule__ColumnFull__Group_1__1__Impl : ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) ;
    public final void rule__ColumnFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7488:1: ( ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:7489:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:7489:1: ( ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* ) )
            // InternalSqlParser.g:7490:1: ( ( rule__ColumnFull__Group_1_1__0 ) ) ( ( rule__ColumnFull__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:7490:1: ( ( rule__ColumnFull__Group_1_1__0 ) )
            // InternalSqlParser.g:7491:1: ( rule__ColumnFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:7492:1: ( rule__ColumnFull__Group_1_1__0 )
            // InternalSqlParser.g:7492:2: rule__ColumnFull__Group_1_1__0
            {
            pushFollow(FOLLOW_32);
            rule__ColumnFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:7495:1: ( ( rule__ColumnFull__Group_1_1__0 )* )
            // InternalSqlParser.g:7496:1: ( rule__ColumnFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:7497:1: ( rule__ColumnFull__Group_1_1__0 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==FullStop) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSqlParser.g:7497:2: rule__ColumnFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_32);
            	    rule__ColumnFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1__1__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0"
    // InternalSqlParser.g:7512:1: rule__ColumnFull__Group_1_1__0 : rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 ;
    public final void rule__ColumnFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7516:1: ( rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1 )
            // InternalSqlParser.g:7517:2: rule__ColumnFull__Group_1_1__0__Impl rule__ColumnFull__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__ColumnFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0"


    // $ANTLR start "rule__ColumnFull__Group_1_1__0__Impl"
    // InternalSqlParser.g:7524:1: rule__ColumnFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__ColumnFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7528:1: ( ( FullStop ) )
            // InternalSqlParser.g:7529:1: ( FullStop )
            {
            // InternalSqlParser.g:7529:1: ( FullStop )
            // InternalSqlParser.g:7530:1: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1"
    // InternalSqlParser.g:7543:1: rule__ColumnFull__Group_1_1__1 : rule__ColumnFull__Group_1_1__1__Impl ;
    public final void rule__ColumnFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7547:1: ( rule__ColumnFull__Group_1_1__1__Impl )
            // InternalSqlParser.g:7548:2: rule__ColumnFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1"


    // $ANTLR start "rule__ColumnFull__Group_1_1__1__Impl"
    // InternalSqlParser.g:7554:1: rule__ColumnFull__Group_1_1__1__Impl : ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__ColumnFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7558:1: ( ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:7559:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:7559:1: ( ( rule__ColumnFull__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:7560:1: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:7561:1: ( rule__ColumnFull__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:7561:2: rule__ColumnFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ColumnFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__Tables__Group__0"
    // InternalSqlParser.g:7575:1: rule__Tables__Group__0 : rule__Tables__Group__0__Impl rule__Tables__Group__1 ;
    public final void rule__Tables__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7579:1: ( rule__Tables__Group__0__Impl rule__Tables__Group__1 )
            // InternalSqlParser.g:7580:2: rule__Tables__Group__0__Impl rule__Tables__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__Tables__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0"


    // $ANTLR start "rule__Tables__Group__0__Impl"
    // InternalSqlParser.g:7587:1: rule__Tables__Group__0__Impl : ( ruleFromTable ) ;
    public final void rule__Tables__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7591:1: ( ( ruleFromTable ) )
            // InternalSqlParser.g:7592:1: ( ruleFromTable )
            {
            // InternalSqlParser.g:7592:1: ( ruleFromTable )
            // InternalSqlParser.g:7593:1: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getFromTableParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__0__Impl"


    // $ANTLR start "rule__Tables__Group__1"
    // InternalSqlParser.g:7604:1: rule__Tables__Group__1 : rule__Tables__Group__1__Impl ;
    public final void rule__Tables__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7608:1: ( rule__Tables__Group__1__Impl )
            // InternalSqlParser.g:7609:2: rule__Tables__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1"


    // $ANTLR start "rule__Tables__Group__1__Impl"
    // InternalSqlParser.g:7615:1: rule__Tables__Group__1__Impl : ( ( rule__Tables__Group_1__0 )? ) ;
    public final void rule__Tables__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7619:1: ( ( ( rule__Tables__Group_1__0 )? ) )
            // InternalSqlParser.g:7620:1: ( ( rule__Tables__Group_1__0 )? )
            {
            // InternalSqlParser.g:7620:1: ( ( rule__Tables__Group_1__0 )? )
            // InternalSqlParser.g:7621:1: ( rule__Tables__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:7622:1: ( rule__Tables__Group_1__0 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==Comma) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSqlParser.g:7622:2: rule__Tables__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Tables__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group__1__Impl"


    // $ANTLR start "rule__Tables__Group_1__0"
    // InternalSqlParser.g:7636:1: rule__Tables__Group_1__0 : rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 ;
    public final void rule__Tables__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7640:1: ( rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1 )
            // InternalSqlParser.g:7641:2: rule__Tables__Group_1__0__Impl rule__Tables__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Tables__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0"


    // $ANTLR start "rule__Tables__Group_1__0__Impl"
    // InternalSqlParser.g:7648:1: rule__Tables__Group_1__0__Impl : ( () ) ;
    public final void rule__Tables__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7652:1: ( ( () ) )
            // InternalSqlParser.g:7653:1: ( () )
            {
            // InternalSqlParser.g:7653:1: ( () )
            // InternalSqlParser.g:7654:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:7655:1: ()
            // InternalSqlParser.g:7657:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getOrTableEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1__1"
    // InternalSqlParser.g:7667:1: rule__Tables__Group_1__1 : rule__Tables__Group_1__1__Impl ;
    public final void rule__Tables__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7671:1: ( rule__Tables__Group_1__1__Impl )
            // InternalSqlParser.g:7672:2: rule__Tables__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1"


    // $ANTLR start "rule__Tables__Group_1__1__Impl"
    // InternalSqlParser.g:7678:1: rule__Tables__Group_1__1__Impl : ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) ;
    public final void rule__Tables__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7682:1: ( ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:7683:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:7683:1: ( ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* ) )
            // InternalSqlParser.g:7684:1: ( ( rule__Tables__Group_1_1__0 ) ) ( ( rule__Tables__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:7684:1: ( ( rule__Tables__Group_1_1__0 ) )
            // InternalSqlParser.g:7685:1: ( rule__Tables__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:7686:1: ( rule__Tables__Group_1_1__0 )
            // InternalSqlParser.g:7686:2: rule__Tables__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__Tables__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:7689:1: ( ( rule__Tables__Group_1_1__0 )* )
            // InternalSqlParser.g:7690:1: ( rule__Tables__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:7691:1: ( rule__Tables__Group_1_1__0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==Comma) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSqlParser.g:7691:2: rule__Tables__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Tables__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1__1__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__0"
    // InternalSqlParser.g:7706:1: rule__Tables__Group_1_1__0 : rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 ;
    public final void rule__Tables__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7710:1: ( rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1 )
            // InternalSqlParser.g:7711:2: rule__Tables__Group_1_1__0__Impl rule__Tables__Group_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__Tables__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0"


    // $ANTLR start "rule__Tables__Group_1_1__0__Impl"
    // InternalSqlParser.g:7718:1: rule__Tables__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Tables__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7722:1: ( ( Comma ) )
            // InternalSqlParser.g:7723:1: ( Comma )
            {
            // InternalSqlParser.g:7723:1: ( Comma )
            // InternalSqlParser.g:7724:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__0__Impl"


    // $ANTLR start "rule__Tables__Group_1_1__1"
    // InternalSqlParser.g:7737:1: rule__Tables__Group_1_1__1 : rule__Tables__Group_1_1__1__Impl ;
    public final void rule__Tables__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7741:1: ( rule__Tables__Group_1_1__1__Impl )
            // InternalSqlParser.g:7742:2: rule__Tables__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Tables__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1"


    // $ANTLR start "rule__Tables__Group_1_1__1__Impl"
    // InternalSqlParser.g:7748:1: rule__Tables__Group_1_1__1__Impl : ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Tables__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7752:1: ( ( ( rule__Tables__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:7753:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:7753:1: ( ( rule__Tables__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:7754:1: ( rule__Tables__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:7755:1: ( rule__Tables__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:7755:2: rule__Tables__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Tables__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__Group_1_1__1__Impl"


    // $ANTLR start "rule__FromTable__Group__0"
    // InternalSqlParser.g:7769:1: rule__FromTable__Group__0 : rule__FromTable__Group__0__Impl rule__FromTable__Group__1 ;
    public final void rule__FromTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7773:1: ( rule__FromTable__Group__0__Impl rule__FromTable__Group__1 )
            // InternalSqlParser.g:7774:2: rule__FromTable__Group__0__Impl rule__FromTable__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__FromTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0"


    // $ANTLR start "rule__FromTable__Group__0__Impl"
    // InternalSqlParser.g:7781:1: rule__FromTable__Group__0__Impl : ( ( rule__FromTable__TableAssignment_0 ) ) ;
    public final void rule__FromTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7785:1: ( ( ( rule__FromTable__TableAssignment_0 ) ) )
            // InternalSqlParser.g:7786:1: ( ( rule__FromTable__TableAssignment_0 ) )
            {
            // InternalSqlParser.g:7786:1: ( ( rule__FromTable__TableAssignment_0 ) )
            // InternalSqlParser.g:7787:1: ( rule__FromTable__TableAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }
            // InternalSqlParser.g:7788:1: ( rule__FromTable__TableAssignment_0 )
            // InternalSqlParser.g:7788:2: rule__FromTable__TableAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__TableAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__0__Impl"


    // $ANTLR start "rule__FromTable__Group__1"
    // InternalSqlParser.g:7798:1: rule__FromTable__Group__1 : rule__FromTable__Group__1__Impl ;
    public final void rule__FromTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7802:1: ( rule__FromTable__Group__1__Impl )
            // InternalSqlParser.g:7803:2: rule__FromTable__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1"


    // $ANTLR start "rule__FromTable__Group__1__Impl"
    // InternalSqlParser.g:7809:1: rule__FromTable__Group__1__Impl : ( ( rule__FromTable__FjoinAssignment_1 )* ) ;
    public final void rule__FromTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7813:1: ( ( ( rule__FromTable__FjoinAssignment_1 )* ) )
            // InternalSqlParser.g:7814:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            {
            // InternalSqlParser.g:7814:1: ( ( rule__FromTable__FjoinAssignment_1 )* )
            // InternalSqlParser.g:7815:1: ( rule__FromTable__FjoinAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }
            // InternalSqlParser.g:7816:1: ( rule__FromTable__FjoinAssignment_1 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==STRAIGHT_JOIN||LA81_0==NATURAL||LA81_0==CROSS||LA81_0==INNER||LA81_0==RIGHT||LA81_0==FULL||LA81_0==JOIN||LA81_0==LEFT) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalSqlParser.g:7816:2: rule__FromTable__FjoinAssignment_1
            	    {
            	    pushFollow(FOLLOW_34);
            	    rule__FromTable__FjoinAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__0"
    // InternalSqlParser.g:7830:1: rule__FromTableJoin__Group__0 : rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 ;
    public final void rule__FromTableJoin__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7834:1: ( rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1 )
            // InternalSqlParser.g:7835:2: rule__FromTableJoin__Group__0__Impl rule__FromTableJoin__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__FromTableJoin__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0"


    // $ANTLR start "rule__FromTableJoin__Group__0__Impl"
    // InternalSqlParser.g:7842:1: rule__FromTableJoin__Group__0__Impl : ( ( rule__FromTableJoin__JoinAssignment_0 ) ) ;
    public final void rule__FromTableJoin__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7846:1: ( ( ( rule__FromTableJoin__JoinAssignment_0 ) ) )
            // InternalSqlParser.g:7847:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            {
            // InternalSqlParser.g:7847:1: ( ( rule__FromTableJoin__JoinAssignment_0 ) )
            // InternalSqlParser.g:7848:1: ( rule__FromTableJoin__JoinAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }
            // InternalSqlParser.g:7849:1: ( rule__FromTableJoin__JoinAssignment_0 )
            // InternalSqlParser.g:7849:2: rule__FromTableJoin__JoinAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__1"
    // InternalSqlParser.g:7859:1: rule__FromTableJoin__Group__1 : rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 ;
    public final void rule__FromTableJoin__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7863:1: ( rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2 )
            // InternalSqlParser.g:7864:2: rule__FromTableJoin__Group__1__Impl rule__FromTableJoin__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__FromTableJoin__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1"


    // $ANTLR start "rule__FromTableJoin__Group__1__Impl"
    // InternalSqlParser.g:7871:1: rule__FromTableJoin__Group__1__Impl : ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) ;
    public final void rule__FromTableJoin__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7875:1: ( ( ( rule__FromTableJoin__OnTableAssignment_1 ) ) )
            // InternalSqlParser.g:7876:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            {
            // InternalSqlParser.g:7876:1: ( ( rule__FromTableJoin__OnTableAssignment_1 ) )
            // InternalSqlParser.g:7877:1: ( rule__FromTableJoin__OnTableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }
            // InternalSqlParser.g:7878:1: ( rule__FromTableJoin__OnTableAssignment_1 )
            // InternalSqlParser.g:7878:2: rule__FromTableJoin__OnTableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__OnTableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__1__Impl"


    // $ANTLR start "rule__FromTableJoin__Group__2"
    // InternalSqlParser.g:7888:1: rule__FromTableJoin__Group__2 : rule__FromTableJoin__Group__2__Impl ;
    public final void rule__FromTableJoin__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7892:1: ( rule__FromTableJoin__Group__2__Impl )
            // InternalSqlParser.g:7893:2: rule__FromTableJoin__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2"


    // $ANTLR start "rule__FromTableJoin__Group__2__Impl"
    // InternalSqlParser.g:7899:1: rule__FromTableJoin__Group__2__Impl : ( ( rule__FromTableJoin__Alternatives_2 ) ) ;
    public final void rule__FromTableJoin__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7903:1: ( ( ( rule__FromTableJoin__Alternatives_2 ) ) )
            // InternalSqlParser.g:7904:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            {
            // InternalSqlParser.g:7904:1: ( ( rule__FromTableJoin__Alternatives_2 ) )
            // InternalSqlParser.g:7905:1: ( rule__FromTableJoin__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }
            // InternalSqlParser.g:7906:1: ( rule__FromTableJoin__Alternatives_2 )
            // InternalSqlParser.g:7906:2: rule__FromTableJoin__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group__2__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0"
    // InternalSqlParser.g:7922:1: rule__FromTableJoin__Group_2_0__0 : rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 ;
    public final void rule__FromTableJoin__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7926:1: ( rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1 )
            // InternalSqlParser.g:7927:2: rule__FromTableJoin__Group_2_0__0__Impl rule__FromTableJoin__Group_2_0__1
            {
            pushFollow(FOLLOW_24);
            rule__FromTableJoin__Group_2_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__0__Impl"
    // InternalSqlParser.g:7934:1: rule__FromTableJoin__Group_2_0__0__Impl : ( ON ) ;
    public final void rule__FromTableJoin__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7938:1: ( ( ON ) )
            // InternalSqlParser.g:7939:1: ( ON )
            {
            // InternalSqlParser.g:7939:1: ( ON )
            // InternalSqlParser.g:7940:1: ON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }
            match(input,ON,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getONKeyword_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__0__Impl"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1"
    // InternalSqlParser.g:7953:1: rule__FromTableJoin__Group_2_0__1 : rule__FromTableJoin__Group_2_0__1__Impl ;
    public final void rule__FromTableJoin__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7957:1: ( rule__FromTableJoin__Group_2_0__1__Impl )
            // InternalSqlParser.g:7958:2: rule__FromTableJoin__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__Group_2_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1"


    // $ANTLR start "rule__FromTableJoin__Group_2_0__1__Impl"
    // InternalSqlParser.g:7964:1: rule__FromTableJoin__Group_2_0__1__Impl : ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) ;
    public final void rule__FromTableJoin__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7968:1: ( ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) ) )
            // InternalSqlParser.g:7969:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            {
            // InternalSqlParser.g:7969:1: ( ( rule__FromTableJoin__JoinExprAssignment_2_0_1 ) )
            // InternalSqlParser.g:7970:1: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }
            // InternalSqlParser.g:7971:1: ( rule__FromTableJoin__JoinExprAssignment_2_0_1 )
            // InternalSqlParser.g:7971:2: rule__FromTableJoin__JoinExprAssignment_2_0_1
            {
            pushFollow(FOLLOW_2);
            rule__FromTableJoin__JoinExprAssignment_2_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprAssignment_2_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__Group_2_0__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__0"
    // InternalSqlParser.g:7985:1: rule__JoinCondition__Group__0 : rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 ;
    public final void rule__JoinCondition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:7989:1: ( rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1 )
            // InternalSqlParser.g:7990:2: rule__JoinCondition__Group__0__Impl rule__JoinCondition__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__JoinCondition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0"


    // $ANTLR start "rule__JoinCondition__Group__0__Impl"
    // InternalSqlParser.g:7997:1: rule__JoinCondition__Group__0__Impl : ( USING ) ;
    public final void rule__JoinCondition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8001:1: ( ( USING ) )
            // InternalSqlParser.g:8002:1: ( USING )
            {
            // InternalSqlParser.g:8002:1: ( USING )
            // InternalSqlParser.g:8003:1: USING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }
            match(input,USING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUSINGKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__0__Impl"


    // $ANTLR start "rule__JoinCondition__Group__1"
    // InternalSqlParser.g:8016:1: rule__JoinCondition__Group__1 : rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 ;
    public final void rule__JoinCondition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8020:1: ( rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2 )
            // InternalSqlParser.g:8021:2: rule__JoinCondition__Group__1__Impl rule__JoinCondition__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__JoinCondition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1"


    // $ANTLR start "rule__JoinCondition__Group__1__Impl"
    // InternalSqlParser.g:8028:1: rule__JoinCondition__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__JoinCondition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8032:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:8033:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:8033:1: ( LeftParenthesis )
            // InternalSqlParser.g:8034:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__1__Impl"


    // $ANTLR start "rule__JoinCondition__Group__2"
    // InternalSqlParser.g:8047:1: rule__JoinCondition__Group__2 : rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 ;
    public final void rule__JoinCondition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8051:1: ( rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3 )
            // InternalSqlParser.g:8052:2: rule__JoinCondition__Group__2__Impl rule__JoinCondition__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__JoinCondition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2"


    // $ANTLR start "rule__JoinCondition__Group__2__Impl"
    // InternalSqlParser.g:8059:1: rule__JoinCondition__Group__2__Impl : ( ( rule__JoinCondition__UseColsAssignment_2 ) ) ;
    public final void rule__JoinCondition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8063:1: ( ( ( rule__JoinCondition__UseColsAssignment_2 ) ) )
            // InternalSqlParser.g:8064:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            {
            // InternalSqlParser.g:8064:1: ( ( rule__JoinCondition__UseColsAssignment_2 ) )
            // InternalSqlParser.g:8065:1: ( rule__JoinCondition__UseColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }
            // InternalSqlParser.g:8066:1: ( rule__JoinCondition__UseColsAssignment_2 )
            // InternalSqlParser.g:8066:2: rule__JoinCondition__UseColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__UseColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__2__Impl"


    // $ANTLR start "rule__JoinCondition__Group__3"
    // InternalSqlParser.g:8076:1: rule__JoinCondition__Group__3 : rule__JoinCondition__Group__3__Impl ;
    public final void rule__JoinCondition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8080:1: ( rule__JoinCondition__Group__3__Impl )
            // InternalSqlParser.g:8081:2: rule__JoinCondition__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinCondition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3"


    // $ANTLR start "rule__JoinCondition__Group__3__Impl"
    // InternalSqlParser.g:8087:1: rule__JoinCondition__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__JoinCondition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8091:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8092:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8092:1: ( RightParenthesis )
            // InternalSqlParser.g:8093:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__Group__3__Impl"


    // $ANTLR start "rule__UsingCols__Group__0"
    // InternalSqlParser.g:8114:1: rule__UsingCols__Group__0 : rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 ;
    public final void rule__UsingCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8118:1: ( rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1 )
            // InternalSqlParser.g:8119:2: rule__UsingCols__Group__0__Impl rule__UsingCols__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__UsingCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0"


    // $ANTLR start "rule__UsingCols__Group__0__Impl"
    // InternalSqlParser.g:8126:1: rule__UsingCols__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8130:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:8131:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:8131:1: ( ruleDbObjectName )
            // InternalSqlParser.g:8132:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__0__Impl"


    // $ANTLR start "rule__UsingCols__Group__1"
    // InternalSqlParser.g:8143:1: rule__UsingCols__Group__1 : rule__UsingCols__Group__1__Impl ;
    public final void rule__UsingCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8147:1: ( rule__UsingCols__Group__1__Impl )
            // InternalSqlParser.g:8148:2: rule__UsingCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1"


    // $ANTLR start "rule__UsingCols__Group__1__Impl"
    // InternalSqlParser.g:8154:1: rule__UsingCols__Group__1__Impl : ( ( rule__UsingCols__Group_1__0 )? ) ;
    public final void rule__UsingCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8158:1: ( ( ( rule__UsingCols__Group_1__0 )? ) )
            // InternalSqlParser.g:8159:1: ( ( rule__UsingCols__Group_1__0 )? )
            {
            // InternalSqlParser.g:8159:1: ( ( rule__UsingCols__Group_1__0 )? )
            // InternalSqlParser.g:8160:1: ( rule__UsingCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:8161:1: ( rule__UsingCols__Group_1__0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==Comma) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSqlParser.g:8161:2: rule__UsingCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UsingCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__0"
    // InternalSqlParser.g:8175:1: rule__UsingCols__Group_1__0 : rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 ;
    public final void rule__UsingCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8179:1: ( rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1 )
            // InternalSqlParser.g:8180:2: rule__UsingCols__Group_1__0__Impl rule__UsingCols__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__UsingCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0"


    // $ANTLR start "rule__UsingCols__Group_1__0__Impl"
    // InternalSqlParser.g:8187:1: rule__UsingCols__Group_1__0__Impl : ( () ) ;
    public final void rule__UsingCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8191:1: ( ( () ) )
            // InternalSqlParser.g:8192:1: ( () )
            {
            // InternalSqlParser.g:8192:1: ( () )
            // InternalSqlParser.g:8193:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:8194:1: ()
            // InternalSqlParser.g:8196:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getUsingColsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1__1"
    // InternalSqlParser.g:8206:1: rule__UsingCols__Group_1__1 : rule__UsingCols__Group_1__1__Impl ;
    public final void rule__UsingCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8210:1: ( rule__UsingCols__Group_1__1__Impl )
            // InternalSqlParser.g:8211:2: rule__UsingCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1"


    // $ANTLR start "rule__UsingCols__Group_1__1__Impl"
    // InternalSqlParser.g:8217:1: rule__UsingCols__Group_1__1__Impl : ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) ;
    public final void rule__UsingCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8221:1: ( ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:8222:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:8222:1: ( ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* ) )
            // InternalSqlParser.g:8223:1: ( ( rule__UsingCols__Group_1_1__0 ) ) ( ( rule__UsingCols__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:8223:1: ( ( rule__UsingCols__Group_1_1__0 ) )
            // InternalSqlParser.g:8224:1: ( rule__UsingCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:8225:1: ( rule__UsingCols__Group_1_1__0 )
            // InternalSqlParser.g:8225:2: rule__UsingCols__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__UsingCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:8228:1: ( ( rule__UsingCols__Group_1_1__0 )* )
            // InternalSqlParser.g:8229:1: ( rule__UsingCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:8230:1: ( rule__UsingCols__Group_1_1__0 )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==Comma) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalSqlParser.g:8230:2: rule__UsingCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__UsingCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1__1__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__0"
    // InternalSqlParser.g:8245:1: rule__UsingCols__Group_1_1__0 : rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 ;
    public final void rule__UsingCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8249:1: ( rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1 )
            // InternalSqlParser.g:8250:2: rule__UsingCols__Group_1_1__0__Impl rule__UsingCols__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__UsingCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0"


    // $ANTLR start "rule__UsingCols__Group_1_1__0__Impl"
    // InternalSqlParser.g:8257:1: rule__UsingCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UsingCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8261:1: ( ( Comma ) )
            // InternalSqlParser.g:8262:1: ( Comma )
            {
            // InternalSqlParser.g:8262:1: ( Comma )
            // InternalSqlParser.g:8263:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__UsingCols__Group_1_1__1"
    // InternalSqlParser.g:8276:1: rule__UsingCols__Group_1_1__1 : rule__UsingCols__Group_1_1__1__Impl ;
    public final void rule__UsingCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8280:1: ( rule__UsingCols__Group_1_1__1__Impl )
            // InternalSqlParser.g:8281:2: rule__UsingCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1"


    // $ANTLR start "rule__UsingCols__Group_1_1__1__Impl"
    // InternalSqlParser.g:8287:1: rule__UsingCols__Group_1_1__1__Impl : ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UsingCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8291:1: ( ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:8292:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:8292:1: ( ( rule__UsingCols__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:8293:1: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:8294:1: ( rule__UsingCols__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:8294:2: rule__UsingCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UsingCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__0"
    // InternalSqlParser.g:8308:1: rule__TableOrAlias__Group__0 : rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 ;
    public final void rule__TableOrAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8312:1: ( rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1 )
            // InternalSqlParser.g:8313:2: rule__TableOrAlias__Group__0__Impl rule__TableOrAlias__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__TableOrAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0"


    // $ANTLR start "rule__TableOrAlias__Group__0__Impl"
    // InternalSqlParser.g:8320:1: rule__TableOrAlias__Group__0__Impl : ( ( rule__TableOrAlias__Alternatives_0 ) ) ;
    public final void rule__TableOrAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8324:1: ( ( ( rule__TableOrAlias__Alternatives_0 ) ) )
            // InternalSqlParser.g:8325:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            {
            // InternalSqlParser.g:8325:1: ( ( rule__TableOrAlias__Alternatives_0 ) )
            // InternalSqlParser.g:8326:1: ( rule__TableOrAlias__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }
            // InternalSqlParser.g:8327:1: ( rule__TableOrAlias__Alternatives_0 )
            // InternalSqlParser.g:8327:2: rule__TableOrAlias__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__0__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__1"
    // InternalSqlParser.g:8337:1: rule__TableOrAlias__Group__1 : rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 ;
    public final void rule__TableOrAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8341:1: ( rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2 )
            // InternalSqlParser.g:8342:2: rule__TableOrAlias__Group__1__Impl rule__TableOrAlias__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__TableOrAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1"


    // $ANTLR start "rule__TableOrAlias__Group__1__Impl"
    // InternalSqlParser.g:8349:1: rule__TableOrAlias__Group__1__Impl : ( ( rule__TableOrAlias__Alternatives_1 )? ) ;
    public final void rule__TableOrAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8353:1: ( ( ( rule__TableOrAlias__Alternatives_1 )? ) )
            // InternalSqlParser.g:8354:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            {
            // InternalSqlParser.g:8354:1: ( ( rule__TableOrAlias__Alternatives_1 )? )
            // InternalSqlParser.g:8355:1: ( rule__TableOrAlias__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:8356:1: ( rule__TableOrAlias__Alternatives_1 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==UNPIVOT||LA84_0==PIVOT) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSqlParser.g:8356:2: rule__TableOrAlias__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__1__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__2"
    // InternalSqlParser.g:8366:1: rule__TableOrAlias__Group__2 : rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 ;
    public final void rule__TableOrAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8370:1: ( rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3 )
            // InternalSqlParser.g:8371:2: rule__TableOrAlias__Group__2__Impl rule__TableOrAlias__Group__3
            {
            pushFollow(FOLLOW_36);
            rule__TableOrAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2"


    // $ANTLR start "rule__TableOrAlias__Group__2__Impl"
    // InternalSqlParser.g:8378:1: rule__TableOrAlias__Group__2__Impl : ( ( rule__TableOrAlias__AliasAssignment_2 )? ) ;
    public final void rule__TableOrAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8382:1: ( ( ( rule__TableOrAlias__AliasAssignment_2 )? ) )
            // InternalSqlParser.g:8383:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            {
            // InternalSqlParser.g:8383:1: ( ( rule__TableOrAlias__AliasAssignment_2 )? )
            // InternalSqlParser.g:8384:1: ( rule__TableOrAlias__AliasAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }
            // InternalSqlParser.g:8385:1: ( rule__TableOrAlias__AliasAssignment_2 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==AS) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSqlParser.g:8385:2: rule__TableOrAlias__AliasAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__AliasAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__2__Impl"


    // $ANTLR start "rule__TableOrAlias__Group__3"
    // InternalSqlParser.g:8395:1: rule__TableOrAlias__Group__3 : rule__TableOrAlias__Group__3__Impl ;
    public final void rule__TableOrAlias__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8399:1: ( rule__TableOrAlias__Group__3__Impl )
            // InternalSqlParser.g:8400:2: rule__TableOrAlias__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableOrAlias__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3"


    // $ANTLR start "rule__TableOrAlias__Group__3__Impl"
    // InternalSqlParser.g:8406:1: rule__TableOrAlias__Group__3__Impl : ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) ;
    public final void rule__TableOrAlias__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8410:1: ( ( ( rule__TableOrAlias__TblAliasAssignment_3 )? ) )
            // InternalSqlParser.g:8411:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            {
            // InternalSqlParser.g:8411:1: ( ( rule__TableOrAlias__TblAliasAssignment_3 )? )
            // InternalSqlParser.g:8412:1: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }
            // InternalSqlParser.g:8413:1: ( rule__TableOrAlias__TblAliasAssignment_3 )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( ((LA86_0>=RULE_STRING && LA86_0<=RULE_ID)) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalSqlParser.g:8413:2: rule__TableOrAlias__TblAliasAssignment_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableOrAlias__TblAliasAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__Group__3__Impl"


    // $ANTLR start "rule__FromValues__Group__0"
    // InternalSqlParser.g:8431:1: rule__FromValues__Group__0 : rule__FromValues__Group__0__Impl rule__FromValues__Group__1 ;
    public final void rule__FromValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8435:1: ( rule__FromValues__Group__0__Impl rule__FromValues__Group__1 )
            // InternalSqlParser.g:8436:2: rule__FromValues__Group__0__Impl rule__FromValues__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__FromValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0"


    // $ANTLR start "rule__FromValues__Group__0__Impl"
    // InternalSqlParser.g:8443:1: rule__FromValues__Group__0__Impl : ( ( rule__FromValues__ValuesAssignment_0 ) ) ;
    public final void rule__FromValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8447:1: ( ( ( rule__FromValues__ValuesAssignment_0 ) ) )
            // InternalSqlParser.g:8448:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            {
            // InternalSqlParser.g:8448:1: ( ( rule__FromValues__ValuesAssignment_0 ) )
            // InternalSqlParser.g:8449:1: ( rule__FromValues__ValuesAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }
            // InternalSqlParser.g:8450:1: ( rule__FromValues__ValuesAssignment_0 )
            // InternalSqlParser.g:8450:2: rule__FromValues__ValuesAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__ValuesAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__0__Impl"


    // $ANTLR start "rule__FromValues__Group__1"
    // InternalSqlParser.g:8460:1: rule__FromValues__Group__1 : rule__FromValues__Group__1__Impl ;
    public final void rule__FromValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8464:1: ( rule__FromValues__Group__1__Impl )
            // InternalSqlParser.g:8465:2: rule__FromValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1"


    // $ANTLR start "rule__FromValues__Group__1__Impl"
    // InternalSqlParser.g:8471:1: rule__FromValues__Group__1__Impl : ( ( rule__FromValues__CAssignment_1 )? ) ;
    public final void rule__FromValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8475:1: ( ( ( rule__FromValues__CAssignment_1 )? ) )
            // InternalSqlParser.g:8476:1: ( ( rule__FromValues__CAssignment_1 )? )
            {
            // InternalSqlParser.g:8476:1: ( ( rule__FromValues__CAssignment_1 )? )
            // InternalSqlParser.g:8477:1: ( rule__FromValues__CAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }
            // InternalSqlParser.g:8478:1: ( rule__FromValues__CAssignment_1 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_ID) ) {
                int LA87_1 = input.LA(2);

                if ( (LA87_1==LeftParenthesis) ) {
                    alt87=1;
                }
            }
            switch (alt87) {
                case 1 :
                    // InternalSqlParser.g:8478:2: rule__FromValues__CAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValues__CAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__0"
    // InternalSqlParser.g:8492:1: rule__FromValuesColumns__Group__0 : rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 ;
    public final void rule__FromValuesColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8496:1: ( rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1 )
            // InternalSqlParser.g:8497:2: rule__FromValuesColumns__Group__0__Impl rule__FromValuesColumns__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FromValuesColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0"


    // $ANTLR start "rule__FromValuesColumns__Group__0__Impl"
    // InternalSqlParser.g:8504:1: rule__FromValuesColumns__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FromValuesColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8508:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:8509:1: ( RULE_ID )
            {
            // InternalSqlParser.g:8509:1: ( RULE_ID )
            // InternalSqlParser.g:8510:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__1"
    // InternalSqlParser.g:8521:1: rule__FromValuesColumns__Group__1 : rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 ;
    public final void rule__FromValuesColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8525:1: ( rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2 )
            // InternalSqlParser.g:8526:2: rule__FromValuesColumns__Group__1__Impl rule__FromValuesColumns__Group__2
            {
            pushFollow(FOLLOW_38);
            rule__FromValuesColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1"


    // $ANTLR start "rule__FromValuesColumns__Group__1__Impl"
    // InternalSqlParser.g:8533:1: rule__FromValuesColumns__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FromValuesColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8537:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:8538:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:8538:1: ( LeftParenthesis )
            // InternalSqlParser.g:8539:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__2"
    // InternalSqlParser.g:8552:1: rule__FromValuesColumns__Group__2 : rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 ;
    public final void rule__FromValuesColumns__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8556:1: ( rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3 )
            // InternalSqlParser.g:8557:2: rule__FromValuesColumns__Group__2__Impl rule__FromValuesColumns__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__FromValuesColumns__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2"


    // $ANTLR start "rule__FromValuesColumns__Group__2__Impl"
    // InternalSqlParser.g:8564:1: rule__FromValuesColumns__Group__2__Impl : ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) ;
    public final void rule__FromValuesColumns__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8568:1: ( ( ( rule__FromValuesColumns__FvColsAssignment_2 ) ) )
            // InternalSqlParser.g:8569:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            {
            // InternalSqlParser.g:8569:1: ( ( rule__FromValuesColumns__FvColsAssignment_2 ) )
            // InternalSqlParser.g:8570:1: ( rule__FromValuesColumns__FvColsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }
            // InternalSqlParser.g:8571:1: ( rule__FromValuesColumns__FvColsAssignment_2 )
            // InternalSqlParser.g:8571:2: rule__FromValuesColumns__FvColsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__FvColsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__2__Impl"


    // $ANTLR start "rule__FromValuesColumns__Group__3"
    // InternalSqlParser.g:8581:1: rule__FromValuesColumns__Group__3 : rule__FromValuesColumns__Group__3__Impl ;
    public final void rule__FromValuesColumns__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8585:1: ( rule__FromValuesColumns__Group__3__Impl )
            // InternalSqlParser.g:8586:2: rule__FromValuesColumns__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumns__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3"


    // $ANTLR start "rule__FromValuesColumns__Group__3__Impl"
    // InternalSqlParser.g:8592:1: rule__FromValuesColumns__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FromValuesColumns__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8596:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8597:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8597:1: ( RightParenthesis )
            // InternalSqlParser.g:8598:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__Group__3__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0"
    // InternalSqlParser.g:8619:1: rule__FromValuesColumnNames__Group__0 : rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 ;
    public final void rule__FromValuesColumnNames__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8623:1: ( rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1 )
            // InternalSqlParser.g:8624:2: rule__FromValuesColumnNames__Group__0__Impl rule__FromValuesColumnNames__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__FromValuesColumnNames__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group__0__Impl"
    // InternalSqlParser.g:8631:1: rule__FromValuesColumnNames__Group__0__Impl : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8635:1: ( ( ruleColumnName ) )
            // InternalSqlParser.g:8636:1: ( ruleColumnName )
            {
            // InternalSqlParser.g:8636:1: ( ruleColumnName )
            // InternalSqlParser.g:8637:1: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getColumnNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1"
    // InternalSqlParser.g:8648:1: rule__FromValuesColumnNames__Group__1 : rule__FromValuesColumnNames__Group__1__Impl ;
    public final void rule__FromValuesColumnNames__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8652:1: ( rule__FromValuesColumnNames__Group__1__Impl )
            // InternalSqlParser.g:8653:2: rule__FromValuesColumnNames__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group__1__Impl"
    // InternalSqlParser.g:8659:1: rule__FromValuesColumnNames__Group__1__Impl : ( ( rule__FromValuesColumnNames__Group_1__0 )? ) ;
    public final void rule__FromValuesColumnNames__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8663:1: ( ( ( rule__FromValuesColumnNames__Group_1__0 )? ) )
            // InternalSqlParser.g:8664:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            {
            // InternalSqlParser.g:8664:1: ( ( rule__FromValuesColumnNames__Group_1__0 )? )
            // InternalSqlParser.g:8665:1: ( rule__FromValuesColumnNames__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:8666:1: ( rule__FromValuesColumnNames__Group_1__0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==Comma) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSqlParser.g:8666:2: rule__FromValuesColumnNames__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FromValuesColumnNames__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0"
    // InternalSqlParser.g:8680:1: rule__FromValuesColumnNames__Group_1__0 : rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8684:1: ( rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1 )
            // InternalSqlParser.g:8685:2: rule__FromValuesColumnNames__Group_1__0__Impl rule__FromValuesColumnNames__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__FromValuesColumnNames__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__0__Impl"
    // InternalSqlParser.g:8692:1: rule__FromValuesColumnNames__Group_1__0__Impl : ( () ) ;
    public final void rule__FromValuesColumnNames__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8696:1: ( ( () ) )
            // InternalSqlParser.g:8697:1: ( () )
            {
            // InternalSqlParser.g:8697:1: ( () )
            // InternalSqlParser.g:8698:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:8699:1: ()
            // InternalSqlParser.g:8701:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getAbcEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1"
    // InternalSqlParser.g:8711:1: rule__FromValuesColumnNames__Group_1__1 : rule__FromValuesColumnNames__Group_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8715:1: ( rule__FromValuesColumnNames__Group_1__1__Impl )
            // InternalSqlParser.g:8716:2: rule__FromValuesColumnNames__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1__1__Impl"
    // InternalSqlParser.g:8722:1: rule__FromValuesColumnNames__Group_1__1__Impl : ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) ;
    public final void rule__FromValuesColumnNames__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8726:1: ( ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:8727:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:8727:1: ( ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* ) )
            // InternalSqlParser.g:8728:1: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) ) ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:8728:1: ( ( rule__FromValuesColumnNames__Group_1_1__0 ) )
            // InternalSqlParser.g:8729:1: ( rule__FromValuesColumnNames__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:8730:1: ( rule__FromValuesColumnNames__Group_1_1__0 )
            // InternalSqlParser.g:8730:2: rule__FromValuesColumnNames__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__FromValuesColumnNames__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:8733:1: ( ( rule__FromValuesColumnNames__Group_1_1__0 )* )
            // InternalSqlParser.g:8734:1: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:8735:1: ( rule__FromValuesColumnNames__Group_1_1__0 )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==Comma) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalSqlParser.g:8735:2: rule__FromValuesColumnNames__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__FromValuesColumnNames__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1__1__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0"
    // InternalSqlParser.g:8750:1: rule__FromValuesColumnNames__Group_1_1__0 : rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 ;
    public final void rule__FromValuesColumnNames__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8754:1: ( rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1 )
            // InternalSqlParser.g:8755:2: rule__FromValuesColumnNames__Group_1_1__0__Impl rule__FromValuesColumnNames__Group_1_1__1
            {
            pushFollow(FOLLOW_38);
            rule__FromValuesColumnNames__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__0__Impl"
    // InternalSqlParser.g:8762:1: rule__FromValuesColumnNames__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8766:1: ( ( Comma ) )
            // InternalSqlParser.g:8767:1: ( Comma )
            {
            // InternalSqlParser.g:8767:1: ( Comma )
            // InternalSqlParser.g:8768:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__0__Impl"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1"
    // InternalSqlParser.g:8781:1: rule__FromValuesColumnNames__Group_1_1__1 : rule__FromValuesColumnNames__Group_1_1__1__Impl ;
    public final void rule__FromValuesColumnNames__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8785:1: ( rule__FromValuesColumnNames__Group_1_1__1__Impl )
            // InternalSqlParser.g:8786:2: rule__FromValuesColumnNames__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1"


    // $ANTLR start "rule__FromValuesColumnNames__Group_1_1__1__Impl"
    // InternalSqlParser.g:8792:1: rule__FromValuesColumnNames__Group_1_1__1__Impl : ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__FromValuesColumnNames__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8796:1: ( ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:8797:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:8797:1: ( ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:8798:1: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:8799:1: ( rule__FromValuesColumnNames__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:8799:2: rule__FromValuesColumnNames__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__FromValuesColumnNames__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__Group_1_1__1__Impl"


    // $ANTLR start "rule__Values__Group__0"
    // InternalSqlParser.g:8813:1: rule__Values__Group__0 : rule__Values__Group__0__Impl rule__Values__Group__1 ;
    public final void rule__Values__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8817:1: ( rule__Values__Group__0__Impl rule__Values__Group__1 )
            // InternalSqlParser.g:8818:2: rule__Values__Group__0__Impl rule__Values__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__Values__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0"


    // $ANTLR start "rule__Values__Group__0__Impl"
    // InternalSqlParser.g:8825:1: rule__Values__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Values__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8829:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:8830:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:8830:1: ( LeftParenthesis )
            // InternalSqlParser.g:8831:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__0__Impl"


    // $ANTLR start "rule__Values__Group__1"
    // InternalSqlParser.g:8844:1: rule__Values__Group__1 : rule__Values__Group__1__Impl rule__Values__Group__2 ;
    public final void rule__Values__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8848:1: ( rule__Values__Group__1__Impl rule__Values__Group__2 )
            // InternalSqlParser.g:8849:2: rule__Values__Group__1__Impl rule__Values__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__Values__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1"


    // $ANTLR start "rule__Values__Group__1__Impl"
    // InternalSqlParser.g:8856:1: rule__Values__Group__1__Impl : ( VALUES ) ;
    public final void rule__Values__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8860:1: ( ( VALUES ) )
            // InternalSqlParser.g:8861:1: ( VALUES )
            {
            // InternalSqlParser.g:8861:1: ( VALUES )
            // InternalSqlParser.g:8862:1: VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }
            match(input,VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getVALUESKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__1__Impl"


    // $ANTLR start "rule__Values__Group__2"
    // InternalSqlParser.g:8875:1: rule__Values__Group__2 : rule__Values__Group__2__Impl rule__Values__Group__3 ;
    public final void rule__Values__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8879:1: ( rule__Values__Group__2__Impl rule__Values__Group__3 )
            // InternalSqlParser.g:8880:2: rule__Values__Group__2__Impl rule__Values__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__Values__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Values__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2"


    // $ANTLR start "rule__Values__Group__2__Impl"
    // InternalSqlParser.g:8887:1: rule__Values__Group__2__Impl : ( ( rule__Values__RowsAssignment_2 ) ) ;
    public final void rule__Values__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8891:1: ( ( ( rule__Values__RowsAssignment_2 ) ) )
            // InternalSqlParser.g:8892:1: ( ( rule__Values__RowsAssignment_2 ) )
            {
            // InternalSqlParser.g:8892:1: ( ( rule__Values__RowsAssignment_2 ) )
            // InternalSqlParser.g:8893:1: ( rule__Values__RowsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }
            // InternalSqlParser.g:8894:1: ( rule__Values__RowsAssignment_2 )
            // InternalSqlParser.g:8894:2: rule__Values__RowsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Values__RowsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__2__Impl"


    // $ANTLR start "rule__Values__Group__3"
    // InternalSqlParser.g:8904:1: rule__Values__Group__3 : rule__Values__Group__3__Impl ;
    public final void rule__Values__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8908:1: ( rule__Values__Group__3__Impl )
            // InternalSqlParser.g:8909:2: rule__Values__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Values__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3"


    // $ANTLR start "rule__Values__Group__3__Impl"
    // InternalSqlParser.g:8915:1: rule__Values__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__Values__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8919:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:8920:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:8920:1: ( RightParenthesis )
            // InternalSqlParser.g:8921:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__Group__3__Impl"


    // $ANTLR start "rule__Rows__Group__0"
    // InternalSqlParser.g:8942:1: rule__Rows__Group__0 : rule__Rows__Group__0__Impl rule__Rows__Group__1 ;
    public final void rule__Rows__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8946:1: ( rule__Rows__Group__0__Impl rule__Rows__Group__1 )
            // InternalSqlParser.g:8947:2: rule__Rows__Group__0__Impl rule__Rows__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__Rows__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0"


    // $ANTLR start "rule__Rows__Group__0__Impl"
    // InternalSqlParser.g:8954:1: rule__Rows__Group__0__Impl : ( ruleRow ) ;
    public final void rule__Rows__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8958:1: ( ( ruleRow ) )
            // InternalSqlParser.g:8959:1: ( ruleRow )
            {
            // InternalSqlParser.g:8959:1: ( ruleRow )
            // InternalSqlParser.g:8960:1: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__0__Impl"


    // $ANTLR start "rule__Rows__Group__1"
    // InternalSqlParser.g:8971:1: rule__Rows__Group__1 : rule__Rows__Group__1__Impl ;
    public final void rule__Rows__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8975:1: ( rule__Rows__Group__1__Impl )
            // InternalSqlParser.g:8976:2: rule__Rows__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1"


    // $ANTLR start "rule__Rows__Group__1__Impl"
    // InternalSqlParser.g:8982:1: rule__Rows__Group__1__Impl : ( ( rule__Rows__Group_1__0 )? ) ;
    public final void rule__Rows__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:8986:1: ( ( ( rule__Rows__Group_1__0 )? ) )
            // InternalSqlParser.g:8987:1: ( ( rule__Rows__Group_1__0 )? )
            {
            // InternalSqlParser.g:8987:1: ( ( rule__Rows__Group_1__0 )? )
            // InternalSqlParser.g:8988:1: ( rule__Rows__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:8989:1: ( rule__Rows__Group_1__0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==Comma) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSqlParser.g:8989:2: rule__Rows__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Rows__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group__1__Impl"


    // $ANTLR start "rule__Rows__Group_1__0"
    // InternalSqlParser.g:9003:1: rule__Rows__Group_1__0 : rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 ;
    public final void rule__Rows__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9007:1: ( rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1 )
            // InternalSqlParser.g:9008:2: rule__Rows__Group_1__0__Impl rule__Rows__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__Rows__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0"


    // $ANTLR start "rule__Rows__Group_1__0__Impl"
    // InternalSqlParser.g:9015:1: rule__Rows__Group_1__0__Impl : ( () ) ;
    public final void rule__Rows__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9019:1: ( ( () ) )
            // InternalSqlParser.g:9020:1: ( () )
            {
            // InternalSqlParser.g:9020:1: ( () )
            // InternalSqlParser.g:9021:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:9022:1: ()
            // InternalSqlParser.g:9024:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getRowsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1__1"
    // InternalSqlParser.g:9034:1: rule__Rows__Group_1__1 : rule__Rows__Group_1__1__Impl ;
    public final void rule__Rows__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9038:1: ( rule__Rows__Group_1__1__Impl )
            // InternalSqlParser.g:9039:2: rule__Rows__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1"


    // $ANTLR start "rule__Rows__Group_1__1__Impl"
    // InternalSqlParser.g:9045:1: rule__Rows__Group_1__1__Impl : ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) ;
    public final void rule__Rows__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9049:1: ( ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:9050:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:9050:1: ( ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* ) )
            // InternalSqlParser.g:9051:1: ( ( rule__Rows__Group_1_1__0 ) ) ( ( rule__Rows__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:9051:1: ( ( rule__Rows__Group_1_1__0 ) )
            // InternalSqlParser.g:9052:1: ( rule__Rows__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:9053:1: ( rule__Rows__Group_1_1__0 )
            // InternalSqlParser.g:9053:2: rule__Rows__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__Rows__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:9056:1: ( ( rule__Rows__Group_1_1__0 )* )
            // InternalSqlParser.g:9057:1: ( rule__Rows__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:9058:1: ( rule__Rows__Group_1_1__0 )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==Comma) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalSqlParser.g:9058:2: rule__Rows__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__Rows__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1__1__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__0"
    // InternalSqlParser.g:9073:1: rule__Rows__Group_1_1__0 : rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 ;
    public final void rule__Rows__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9077:1: ( rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1 )
            // InternalSqlParser.g:9078:2: rule__Rows__Group_1_1__0__Impl rule__Rows__Group_1_1__1
            {
            pushFollow(FOLLOW_6);
            rule__Rows__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0"


    // $ANTLR start "rule__Rows__Group_1_1__0__Impl"
    // InternalSqlParser.g:9085:1: rule__Rows__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__Rows__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9089:1: ( ( Comma ) )
            // InternalSqlParser.g:9090:1: ( Comma )
            {
            // InternalSqlParser.g:9090:1: ( Comma )
            // InternalSqlParser.g:9091:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__0__Impl"


    // $ANTLR start "rule__Rows__Group_1_1__1"
    // InternalSqlParser.g:9104:1: rule__Rows__Group_1_1__1 : rule__Rows__Group_1_1__1__Impl ;
    public final void rule__Rows__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9108:1: ( rule__Rows__Group_1_1__1__Impl )
            // InternalSqlParser.g:9109:2: rule__Rows__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Rows__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1"


    // $ANTLR start "rule__Rows__Group_1_1__1__Impl"
    // InternalSqlParser.g:9115:1: rule__Rows__Group_1_1__1__Impl : ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__Rows__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9119:1: ( ( ( rule__Rows__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:9120:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:9120:1: ( ( rule__Rows__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:9121:1: ( rule__Rows__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:9122:1: ( rule__Rows__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:9122:2: rule__Rows__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Rows__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__Group_1_1__1__Impl"


    // $ANTLR start "rule__Row__Group__0"
    // InternalSqlParser.g:9136:1: rule__Row__Group__0 : rule__Row__Group__0__Impl rule__Row__Group__1 ;
    public final void rule__Row__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9140:1: ( rule__Row__Group__0__Impl rule__Row__Group__1 )
            // InternalSqlParser.g:9141:2: rule__Row__Group__0__Impl rule__Row__Group__1
            {
            pushFollow(FOLLOW_40);
            rule__Row__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0"


    // $ANTLR start "rule__Row__Group__0__Impl"
    // InternalSqlParser.g:9148:1: rule__Row__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__Row__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9152:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:9153:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:9153:1: ( LeftParenthesis )
            // InternalSqlParser.g:9154:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__0__Impl"


    // $ANTLR start "rule__Row__Group__1"
    // InternalSqlParser.g:9167:1: rule__Row__Group__1 : rule__Row__Group__1__Impl rule__Row__Group__2 ;
    public final void rule__Row__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9171:1: ( rule__Row__Group__1__Impl rule__Row__Group__2 )
            // InternalSqlParser.g:9172:2: rule__Row__Group__1__Impl rule__Row__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__Row__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Row__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1"


    // $ANTLR start "rule__Row__Group__1__Impl"
    // InternalSqlParser.g:9179:1: rule__Row__Group__1__Impl : ( ( rule__Row__RowValuesAssignment_1 ) ) ;
    public final void rule__Row__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9183:1: ( ( ( rule__Row__RowValuesAssignment_1 ) ) )
            // InternalSqlParser.g:9184:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            {
            // InternalSqlParser.g:9184:1: ( ( rule__Row__RowValuesAssignment_1 ) )
            // InternalSqlParser.g:9185:1: ( rule__Row__RowValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }
            // InternalSqlParser.g:9186:1: ( rule__Row__RowValuesAssignment_1 )
            // InternalSqlParser.g:9186:2: rule__Row__RowValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Row__RowValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__1__Impl"


    // $ANTLR start "rule__Row__Group__2"
    // InternalSqlParser.g:9196:1: rule__Row__Group__2 : rule__Row__Group__2__Impl ;
    public final void rule__Row__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9200:1: ( rule__Row__Group__2__Impl )
            // InternalSqlParser.g:9201:2: rule__Row__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Row__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2"


    // $ANTLR start "rule__Row__Group__2__Impl"
    // InternalSqlParser.g:9207:1: rule__Row__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__Row__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9211:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:9212:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:9212:1: ( RightParenthesis )
            // InternalSqlParser.g:9213:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__Group__2__Impl"


    // $ANTLR start "rule__RowValues__Group__0"
    // InternalSqlParser.g:9232:1: rule__RowValues__Group__0 : rule__RowValues__Group__0__Impl rule__RowValues__Group__1 ;
    public final void rule__RowValues__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9236:1: ( rule__RowValues__Group__0__Impl rule__RowValues__Group__1 )
            // InternalSqlParser.g:9237:2: rule__RowValues__Group__0__Impl rule__RowValues__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__RowValues__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0"


    // $ANTLR start "rule__RowValues__Group__0__Impl"
    // InternalSqlParser.g:9244:1: rule__RowValues__Group__0__Impl : ( ruleRowValue ) ;
    public final void rule__RowValues__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9248:1: ( ( ruleRowValue ) )
            // InternalSqlParser.g:9249:1: ( ruleRowValue )
            {
            // InternalSqlParser.g:9249:1: ( ruleRowValue )
            // InternalSqlParser.g:9250:1: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValueParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__0__Impl"


    // $ANTLR start "rule__RowValues__Group__1"
    // InternalSqlParser.g:9261:1: rule__RowValues__Group__1 : rule__RowValues__Group__1__Impl ;
    public final void rule__RowValues__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9265:1: ( rule__RowValues__Group__1__Impl )
            // InternalSqlParser.g:9266:2: rule__RowValues__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1"


    // $ANTLR start "rule__RowValues__Group__1__Impl"
    // InternalSqlParser.g:9272:1: rule__RowValues__Group__1__Impl : ( ( rule__RowValues__Group_1__0 )? ) ;
    public final void rule__RowValues__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9276:1: ( ( ( rule__RowValues__Group_1__0 )? ) )
            // InternalSqlParser.g:9277:1: ( ( rule__RowValues__Group_1__0 )? )
            {
            // InternalSqlParser.g:9277:1: ( ( rule__RowValues__Group_1__0 )? )
            // InternalSqlParser.g:9278:1: ( rule__RowValues__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:9279:1: ( rule__RowValues__Group_1__0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==Comma) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalSqlParser.g:9279:2: rule__RowValues__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__RowValues__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1__0"
    // InternalSqlParser.g:9293:1: rule__RowValues__Group_1__0 : rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 ;
    public final void rule__RowValues__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9297:1: ( rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1 )
            // InternalSqlParser.g:9298:2: rule__RowValues__Group_1__0__Impl rule__RowValues__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__RowValues__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0"


    // $ANTLR start "rule__RowValues__Group_1__0__Impl"
    // InternalSqlParser.g:9305:1: rule__RowValues__Group_1__0__Impl : ( () ) ;
    public final void rule__RowValues__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9309:1: ( ( () ) )
            // InternalSqlParser.g:9310:1: ( () )
            {
            // InternalSqlParser.g:9310:1: ( () )
            // InternalSqlParser.g:9311:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:9312:1: ()
            // InternalSqlParser.g:9314:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getRowValuesEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1__1"
    // InternalSqlParser.g:9324:1: rule__RowValues__Group_1__1 : rule__RowValues__Group_1__1__Impl ;
    public final void rule__RowValues__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9328:1: ( rule__RowValues__Group_1__1__Impl )
            // InternalSqlParser.g:9329:2: rule__RowValues__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1"


    // $ANTLR start "rule__RowValues__Group_1__1__Impl"
    // InternalSqlParser.g:9335:1: rule__RowValues__Group_1__1__Impl : ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) ;
    public final void rule__RowValues__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9339:1: ( ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:9340:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:9340:1: ( ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* ) )
            // InternalSqlParser.g:9341:1: ( ( rule__RowValues__Group_1_1__0 ) ) ( ( rule__RowValues__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:9341:1: ( ( rule__RowValues__Group_1_1__0 ) )
            // InternalSqlParser.g:9342:1: ( rule__RowValues__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:9343:1: ( rule__RowValues__Group_1_1__0 )
            // InternalSqlParser.g:9343:2: rule__RowValues__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__RowValues__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:9346:1: ( ( rule__RowValues__Group_1_1__0 )* )
            // InternalSqlParser.g:9347:1: ( rule__RowValues__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:9348:1: ( rule__RowValues__Group_1_1__0 )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==Comma) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalSqlParser.g:9348:2: rule__RowValues__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__RowValues__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1__1__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__0"
    // InternalSqlParser.g:9363:1: rule__RowValues__Group_1_1__0 : rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 ;
    public final void rule__RowValues__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9367:1: ( rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1 )
            // InternalSqlParser.g:9368:2: rule__RowValues__Group_1_1__0__Impl rule__RowValues__Group_1_1__1
            {
            pushFollow(FOLLOW_40);
            rule__RowValues__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0"


    // $ANTLR start "rule__RowValues__Group_1_1__0__Impl"
    // InternalSqlParser.g:9375:1: rule__RowValues__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__RowValues__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9379:1: ( ( Comma ) )
            // InternalSqlParser.g:9380:1: ( Comma )
            {
            // InternalSqlParser.g:9380:1: ( Comma )
            // InternalSqlParser.g:9381:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__0__Impl"


    // $ANTLR start "rule__RowValues__Group_1_1__1"
    // InternalSqlParser.g:9394:1: rule__RowValues__Group_1_1__1 : rule__RowValues__Group_1_1__1__Impl ;
    public final void rule__RowValues__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9398:1: ( rule__RowValues__Group_1_1__1__Impl )
            // InternalSqlParser.g:9399:2: rule__RowValues__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1"


    // $ANTLR start "rule__RowValues__Group_1_1__1__Impl"
    // InternalSqlParser.g:9405:1: rule__RowValues__Group_1_1__1__Impl : ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__RowValues__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9409:1: ( ( ( rule__RowValues__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:9410:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:9410:1: ( ( rule__RowValues__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:9411:1: ( rule__RowValues__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:9412:1: ( rule__RowValues__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:9412:2: rule__RowValues__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__RowValues__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__0"
    // InternalSqlParser.g:9426:1: rule__PivotTable__Group__0 : rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 ;
    public final void rule__PivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9430:1: ( rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1 )
            // InternalSqlParser.g:9431:2: rule__PivotTable__Group__0__Impl rule__PivotTable__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__PivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0"


    // $ANTLR start "rule__PivotTable__Group__0__Impl"
    // InternalSqlParser.g:9438:1: rule__PivotTable__Group__0__Impl : ( PIVOT ) ;
    public final void rule__PivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9442:1: ( ( PIVOT ) )
            // InternalSqlParser.g:9443:1: ( PIVOT )
            {
            // InternalSqlParser.g:9443:1: ( PIVOT )
            // InternalSqlParser.g:9444:1: PIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }
            match(input,PIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__0__Impl"


    // $ANTLR start "rule__PivotTable__Group__1"
    // InternalSqlParser.g:9457:1: rule__PivotTable__Group__1 : rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 ;
    public final void rule__PivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9461:1: ( rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2 )
            // InternalSqlParser.g:9462:2: rule__PivotTable__Group__1__Impl rule__PivotTable__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__PivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1"


    // $ANTLR start "rule__PivotTable__Group__1__Impl"
    // InternalSqlParser.g:9469:1: rule__PivotTable__Group__1__Impl : ( ( XML )? ) ;
    public final void rule__PivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9473:1: ( ( ( XML )? ) )
            // InternalSqlParser.g:9474:1: ( ( XML )? )
            {
            // InternalSqlParser.g:9474:1: ( ( XML )? )
            // InternalSqlParser.g:9475:1: ( XML )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }
            // InternalSqlParser.g:9476:1: ( XML )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==XML) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSqlParser.g:9477:2: XML
                    {
                    match(input,XML,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getXMLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__1__Impl"


    // $ANTLR start "rule__PivotTable__Group__2"
    // InternalSqlParser.g:9488:1: rule__PivotTable__Group__2 : rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 ;
    public final void rule__PivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9492:1: ( rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3 )
            // InternalSqlParser.g:9493:2: rule__PivotTable__Group__2__Impl rule__PivotTable__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__PivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2"


    // $ANTLR start "rule__PivotTable__Group__2__Impl"
    // InternalSqlParser.g:9500:1: rule__PivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9504:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:9505:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:9505:1: ( LeftParenthesis )
            // InternalSqlParser.g:9506:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__2__Impl"


    // $ANTLR start "rule__PivotTable__Group__3"
    // InternalSqlParser.g:9519:1: rule__PivotTable__Group__3 : rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 ;
    public final void rule__PivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9523:1: ( rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4 )
            // InternalSqlParser.g:9524:2: rule__PivotTable__Group__3__Impl rule__PivotTable__Group__4
            {
            pushFollow(FOLLOW_42);
            rule__PivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3"


    // $ANTLR start "rule__PivotTable__Group__3__Impl"
    // InternalSqlParser.g:9531:1: rule__PivotTable__Group__3__Impl : ( ( rule__PivotTable__PfunAssignment_3 ) ) ;
    public final void rule__PivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9535:1: ( ( ( rule__PivotTable__PfunAssignment_3 ) ) )
            // InternalSqlParser.g:9536:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            {
            // InternalSqlParser.g:9536:1: ( ( rule__PivotTable__PfunAssignment_3 ) )
            // InternalSqlParser.g:9537:1: ( rule__PivotTable__PfunAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }
            // InternalSqlParser.g:9538:1: ( rule__PivotTable__PfunAssignment_3 )
            // InternalSqlParser.g:9538:2: rule__PivotTable__PfunAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PfunAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__3__Impl"


    // $ANTLR start "rule__PivotTable__Group__4"
    // InternalSqlParser.g:9548:1: rule__PivotTable__Group__4 : rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 ;
    public final void rule__PivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9552:1: ( rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5 )
            // InternalSqlParser.g:9553:2: rule__PivotTable__Group__4__Impl rule__PivotTable__Group__5
            {
            pushFollow(FOLLOW_43);
            rule__PivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4"


    // $ANTLR start "rule__PivotTable__Group__4__Impl"
    // InternalSqlParser.g:9560:1: rule__PivotTable__Group__4__Impl : ( ( rule__PivotTable__PforAssignment_4 ) ) ;
    public final void rule__PivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9564:1: ( ( ( rule__PivotTable__PforAssignment_4 ) ) )
            // InternalSqlParser.g:9565:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            {
            // InternalSqlParser.g:9565:1: ( ( rule__PivotTable__PforAssignment_4 ) )
            // InternalSqlParser.g:9566:1: ( rule__PivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSqlParser.g:9567:1: ( rule__PivotTable__PforAssignment_4 )
            // InternalSqlParser.g:9567:2: rule__PivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__4__Impl"


    // $ANTLR start "rule__PivotTable__Group__5"
    // InternalSqlParser.g:9577:1: rule__PivotTable__Group__5 : rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 ;
    public final void rule__PivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9581:1: ( rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6 )
            // InternalSqlParser.g:9582:2: rule__PivotTable__Group__5__Impl rule__PivotTable__Group__6
            {
            pushFollow(FOLLOW_7);
            rule__PivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5"


    // $ANTLR start "rule__PivotTable__Group__5__Impl"
    // InternalSqlParser.g:9589:1: rule__PivotTable__Group__5__Impl : ( ( rule__PivotTable__PinAssignment_5 ) ) ;
    public final void rule__PivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9593:1: ( ( ( rule__PivotTable__PinAssignment_5 ) ) )
            // InternalSqlParser.g:9594:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            {
            // InternalSqlParser.g:9594:1: ( ( rule__PivotTable__PinAssignment_5 ) )
            // InternalSqlParser.g:9595:1: ( rule__PivotTable__PinAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }
            // InternalSqlParser.g:9596:1: ( rule__PivotTable__PinAssignment_5 )
            // InternalSqlParser.g:9596:2: rule__PivotTable__PinAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__PinAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__5__Impl"


    // $ANTLR start "rule__PivotTable__Group__6"
    // InternalSqlParser.g:9606:1: rule__PivotTable__Group__6 : rule__PivotTable__Group__6__Impl ;
    public final void rule__PivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9610:1: ( rule__PivotTable__Group__6__Impl )
            // InternalSqlParser.g:9611:2: rule__PivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6"


    // $ANTLR start "rule__PivotTable__Group__6__Impl"
    // InternalSqlParser.g:9617:1: rule__PivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__PivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9621:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:9622:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:9622:1: ( RightParenthesis )
            // InternalSqlParser.g:9623:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__Group__6__Impl"


    // $ANTLR start "rule__PivotInClause__Group__0"
    // InternalSqlParser.g:9651:1: rule__PivotInClause__Group__0 : rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 ;
    public final void rule__PivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9655:1: ( rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1 )
            // InternalSqlParser.g:9656:2: rule__PivotInClause__Group__0__Impl rule__PivotInClause__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__PivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0"


    // $ANTLR start "rule__PivotInClause__Group__0__Impl"
    // InternalSqlParser.g:9663:1: rule__PivotInClause__Group__0__Impl : ( IN ) ;
    public final void rule__PivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9667:1: ( ( IN ) )
            // InternalSqlParser.g:9668:1: ( IN )
            {
            // InternalSqlParser.g:9668:1: ( IN )
            // InternalSqlParser.g:9669:1: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getINKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__0__Impl"


    // $ANTLR start "rule__PivotInClause__Group__1"
    // InternalSqlParser.g:9682:1: rule__PivotInClause__Group__1 : rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 ;
    public final void rule__PivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9686:1: ( rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2 )
            // InternalSqlParser.g:9687:2: rule__PivotInClause__Group__1__Impl rule__PivotInClause__Group__2
            {
            pushFollow(FOLLOW_44);
            rule__PivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1"


    // $ANTLR start "rule__PivotInClause__Group__1__Impl"
    // InternalSqlParser.g:9694:1: rule__PivotInClause__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9698:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:9699:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:9699:1: ( LeftParenthesis )
            // InternalSqlParser.g:9700:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__1__Impl"


    // $ANTLR start "rule__PivotInClause__Group__2"
    // InternalSqlParser.g:9713:1: rule__PivotInClause__Group__2 : rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 ;
    public final void rule__PivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9717:1: ( rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3 )
            // InternalSqlParser.g:9718:2: rule__PivotInClause__Group__2__Impl rule__PivotInClause__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__PivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2"


    // $ANTLR start "rule__PivotInClause__Group__2__Impl"
    // InternalSqlParser.g:9725:1: rule__PivotInClause__Group__2__Impl : ( ( rule__PivotInClause__Alternatives_2 ) ) ;
    public final void rule__PivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9729:1: ( ( ( rule__PivotInClause__Alternatives_2 ) ) )
            // InternalSqlParser.g:9730:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            {
            // InternalSqlParser.g:9730:1: ( ( rule__PivotInClause__Alternatives_2 ) )
            // InternalSqlParser.g:9731:1: ( rule__PivotInClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }
            // InternalSqlParser.g:9732:1: ( rule__PivotInClause__Alternatives_2 )
            // InternalSqlParser.g:9732:2: rule__PivotInClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__2__Impl"


    // $ANTLR start "rule__PivotInClause__Group__3"
    // InternalSqlParser.g:9742:1: rule__PivotInClause__Group__3 : rule__PivotInClause__Group__3__Impl ;
    public final void rule__PivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9746:1: ( rule__PivotInClause__Group__3__Impl )
            // InternalSqlParser.g:9747:2: rule__PivotInClause__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3"


    // $ANTLR start "rule__PivotInClause__Group__3__Impl"
    // InternalSqlParser.g:9753:1: rule__PivotInClause__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__PivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9757:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:9758:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:9758:1: ( RightParenthesis )
            // InternalSqlParser.g:9759:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__Group__3__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__0"
    // InternalSqlParser.g:9780:1: rule__PivotInClauseAny__Group__0 : rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 ;
    public final void rule__PivotInClauseAny__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9784:1: ( rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1 )
            // InternalSqlParser.g:9785:2: rule__PivotInClauseAny__Group__0__Impl rule__PivotInClauseAny__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__PivotInClauseAny__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0"


    // $ANTLR start "rule__PivotInClauseAny__Group__0__Impl"
    // InternalSqlParser.g:9792:1: rule__PivotInClauseAny__Group__0__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9796:1: ( ( ANY ) )
            // InternalSqlParser.g:9797:1: ( ANY )
            {
            // InternalSqlParser.g:9797:1: ( ANY )
            // InternalSqlParser.g:9798:1: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group__1"
    // InternalSqlParser.g:9811:1: rule__PivotInClauseAny__Group__1 : rule__PivotInClauseAny__Group__1__Impl ;
    public final void rule__PivotInClauseAny__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9815:1: ( rule__PivotInClauseAny__Group__1__Impl )
            // InternalSqlParser.g:9816:2: rule__PivotInClauseAny__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1"


    // $ANTLR start "rule__PivotInClauseAny__Group__1__Impl"
    // InternalSqlParser.g:9822:1: rule__PivotInClauseAny__Group__1__Impl : ( ( rule__PivotInClauseAny__Group_1__0 )* ) ;
    public final void rule__PivotInClauseAny__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9826:1: ( ( ( rule__PivotInClauseAny__Group_1__0 )* ) )
            // InternalSqlParser.g:9827:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            {
            // InternalSqlParser.g:9827:1: ( ( rule__PivotInClauseAny__Group_1__0 )* )
            // InternalSqlParser.g:9828:1: ( rule__PivotInClauseAny__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:9829:1: ( rule__PivotInClauseAny__Group_1__0 )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==Comma) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalSqlParser.g:9829:2: rule__PivotInClauseAny__Group_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__PivotInClauseAny__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group__1__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0"
    // InternalSqlParser.g:9843:1: rule__PivotInClauseAny__Group_1__0 : rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 ;
    public final void rule__PivotInClauseAny__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9847:1: ( rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1 )
            // InternalSqlParser.g:9848:2: rule__PivotInClauseAny__Group_1__0__Impl rule__PivotInClauseAny__Group_1__1
            {
            pushFollow(FOLLOW_45);
            rule__PivotInClauseAny__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__0__Impl"
    // InternalSqlParser.g:9855:1: rule__PivotInClauseAny__Group_1__0__Impl : ( Comma ) ;
    public final void rule__PivotInClauseAny__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9859:1: ( ( Comma ) )
            // InternalSqlParser.g:9860:1: ( Comma )
            {
            // InternalSqlParser.g:9860:1: ( Comma )
            // InternalSqlParser.g:9861:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__0__Impl"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1"
    // InternalSqlParser.g:9874:1: rule__PivotInClauseAny__Group_1__1 : rule__PivotInClauseAny__Group_1__1__Impl ;
    public final void rule__PivotInClauseAny__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9878:1: ( rule__PivotInClauseAny__Group_1__1__Impl )
            // InternalSqlParser.g:9879:2: rule__PivotInClauseAny__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotInClauseAny__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1"


    // $ANTLR start "rule__PivotInClauseAny__Group_1__1__Impl"
    // InternalSqlParser.g:9885:1: rule__PivotInClauseAny__Group_1__1__Impl : ( ANY ) ;
    public final void rule__PivotInClauseAny__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9889:1: ( ( ANY ) )
            // InternalSqlParser.g:9890:1: ( ANY )
            {
            // InternalSqlParser.g:9890:1: ( ANY )
            // InternalSqlParser.g:9891:1: ANY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }
            match(input,ANY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAnyAccess().getANYKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClauseAny__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__0"
    // InternalSqlParser.g:9908:1: rule__UnpivotTable__Group__0 : rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 ;
    public final void rule__UnpivotTable__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9912:1: ( rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1 )
            // InternalSqlParser.g:9913:2: rule__UnpivotTable__Group__0__Impl rule__UnpivotTable__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__UnpivotTable__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0"


    // $ANTLR start "rule__UnpivotTable__Group__0__Impl"
    // InternalSqlParser.g:9920:1: rule__UnpivotTable__Group__0__Impl : ( UNPIVOT ) ;
    public final void rule__UnpivotTable__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9924:1: ( ( UNPIVOT ) )
            // InternalSqlParser.g:9925:1: ( UNPIVOT )
            {
            // InternalSqlParser.g:9925:1: ( UNPIVOT )
            // InternalSqlParser.g:9926:1: UNPIVOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }
            match(input,UNPIVOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getUNPIVOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__1"
    // InternalSqlParser.g:9939:1: rule__UnpivotTable__Group__1 : rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 ;
    public final void rule__UnpivotTable__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9943:1: ( rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2 )
            // InternalSqlParser.g:9944:2: rule__UnpivotTable__Group__1__Impl rule__UnpivotTable__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__UnpivotTable__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1"


    // $ANTLR start "rule__UnpivotTable__Group__1__Impl"
    // InternalSqlParser.g:9951:1: rule__UnpivotTable__Group__1__Impl : ( ( rule__UnpivotTable__Group_1__0 )? ) ;
    public final void rule__UnpivotTable__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9955:1: ( ( ( rule__UnpivotTable__Group_1__0 )? ) )
            // InternalSqlParser.g:9956:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            {
            // InternalSqlParser.g:9956:1: ( ( rule__UnpivotTable__Group_1__0 )? )
            // InternalSqlParser.g:9957:1: ( rule__UnpivotTable__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:9958:1: ( rule__UnpivotTable__Group_1__0 )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==EXCLUDE||LA96_0==INCLUDE) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalSqlParser.g:9958:2: rule__UnpivotTable__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotTable__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__1__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__2"
    // InternalSqlParser.g:9968:1: rule__UnpivotTable__Group__2 : rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 ;
    public final void rule__UnpivotTable__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9972:1: ( rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3 )
            // InternalSqlParser.g:9973:2: rule__UnpivotTable__Group__2__Impl rule__UnpivotTable__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__UnpivotTable__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2"


    // $ANTLR start "rule__UnpivotTable__Group__2__Impl"
    // InternalSqlParser.g:9980:1: rule__UnpivotTable__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotTable__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:9984:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:9985:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:9985:1: ( LeftParenthesis )
            // InternalSqlParser.g:9986:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__2__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__3"
    // InternalSqlParser.g:9999:1: rule__UnpivotTable__Group__3 : rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 ;
    public final void rule__UnpivotTable__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10003:1: ( rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4 )
            // InternalSqlParser.g:10004:2: rule__UnpivotTable__Group__3__Impl rule__UnpivotTable__Group__4
            {
            pushFollow(FOLLOW_42);
            rule__UnpivotTable__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3"


    // $ANTLR start "rule__UnpivotTable__Group__3__Impl"
    // InternalSqlParser.g:10011:1: rule__UnpivotTable__Group__3__Impl : ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) ;
    public final void rule__UnpivotTable__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10015:1: ( ( ( rule__UnpivotTable__PcolsAssignment_3 ) ) )
            // InternalSqlParser.g:10016:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            {
            // InternalSqlParser.g:10016:1: ( ( rule__UnpivotTable__PcolsAssignment_3 ) )
            // InternalSqlParser.g:10017:1: ( rule__UnpivotTable__PcolsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }
            // InternalSqlParser.g:10018:1: ( rule__UnpivotTable__PcolsAssignment_3 )
            // InternalSqlParser.g:10018:2: rule__UnpivotTable__PcolsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PcolsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__3__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__4"
    // InternalSqlParser.g:10028:1: rule__UnpivotTable__Group__4 : rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 ;
    public final void rule__UnpivotTable__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10032:1: ( rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5 )
            // InternalSqlParser.g:10033:2: rule__UnpivotTable__Group__4__Impl rule__UnpivotTable__Group__5
            {
            pushFollow(FOLLOW_43);
            rule__UnpivotTable__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4"


    // $ANTLR start "rule__UnpivotTable__Group__4__Impl"
    // InternalSqlParser.g:10040:1: rule__UnpivotTable__Group__4__Impl : ( ( rule__UnpivotTable__PforAssignment_4 ) ) ;
    public final void rule__UnpivotTable__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10044:1: ( ( ( rule__UnpivotTable__PforAssignment_4 ) ) )
            // InternalSqlParser.g:10045:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            {
            // InternalSqlParser.g:10045:1: ( ( rule__UnpivotTable__PforAssignment_4 ) )
            // InternalSqlParser.g:10046:1: ( rule__UnpivotTable__PforAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }
            // InternalSqlParser.g:10047:1: ( rule__UnpivotTable__PforAssignment_4 )
            // InternalSqlParser.g:10047:2: rule__UnpivotTable__PforAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__PforAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__4__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__5"
    // InternalSqlParser.g:10057:1: rule__UnpivotTable__Group__5 : rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 ;
    public final void rule__UnpivotTable__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10061:1: ( rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6 )
            // InternalSqlParser.g:10062:2: rule__UnpivotTable__Group__5__Impl rule__UnpivotTable__Group__6
            {
            pushFollow(FOLLOW_7);
            rule__UnpivotTable__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5"


    // $ANTLR start "rule__UnpivotTable__Group__5__Impl"
    // InternalSqlParser.g:10069:1: rule__UnpivotTable__Group__5__Impl : ( ( rule__UnpivotTable__InopAssignment_5 ) ) ;
    public final void rule__UnpivotTable__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10073:1: ( ( ( rule__UnpivotTable__InopAssignment_5 ) ) )
            // InternalSqlParser.g:10074:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            {
            // InternalSqlParser.g:10074:1: ( ( rule__UnpivotTable__InopAssignment_5 ) )
            // InternalSqlParser.g:10075:1: ( rule__UnpivotTable__InopAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }
            // InternalSqlParser.g:10076:1: ( rule__UnpivotTable__InopAssignment_5 )
            // InternalSqlParser.g:10076:2: rule__UnpivotTable__InopAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__InopAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__5__Impl"


    // $ANTLR start "rule__UnpivotTable__Group__6"
    // InternalSqlParser.g:10086:1: rule__UnpivotTable__Group__6 : rule__UnpivotTable__Group__6__Impl ;
    public final void rule__UnpivotTable__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10090:1: ( rule__UnpivotTable__Group__6__Impl )
            // InternalSqlParser.g:10091:2: rule__UnpivotTable__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6"


    // $ANTLR start "rule__UnpivotTable__Group__6__Impl"
    // InternalSqlParser.g:10097:1: rule__UnpivotTable__Group__6__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotTable__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10101:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:10102:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:10102:1: ( RightParenthesis )
            // InternalSqlParser.g:10103:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getRightParenthesisKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group__6__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__0"
    // InternalSqlParser.g:10130:1: rule__UnpivotTable__Group_1__0 : rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 ;
    public final void rule__UnpivotTable__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10134:1: ( rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1 )
            // InternalSqlParser.g:10135:2: rule__UnpivotTable__Group_1__0__Impl rule__UnpivotTable__Group_1__1
            {
            pushFollow(FOLLOW_47);
            rule__UnpivotTable__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0"


    // $ANTLR start "rule__UnpivotTable__Group_1__0__Impl"
    // InternalSqlParser.g:10142:1: rule__UnpivotTable__Group_1__0__Impl : ( ( rule__UnpivotTable__Alternatives_1_0 ) ) ;
    public final void rule__UnpivotTable__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10146:1: ( ( ( rule__UnpivotTable__Alternatives_1_0 ) ) )
            // InternalSqlParser.g:10147:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            {
            // InternalSqlParser.g:10147:1: ( ( rule__UnpivotTable__Alternatives_1_0 ) )
            // InternalSqlParser.g:10148:1: ( rule__UnpivotTable__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }
            // InternalSqlParser.g:10149:1: ( rule__UnpivotTable__Alternatives_1_0 )
            // InternalSqlParser.g:10149:2: rule__UnpivotTable__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotTable__Group_1__1"
    // InternalSqlParser.g:10159:1: rule__UnpivotTable__Group_1__1 : rule__UnpivotTable__Group_1__1__Impl ;
    public final void rule__UnpivotTable__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10163:1: ( rule__UnpivotTable__Group_1__1__Impl )
            // InternalSqlParser.g:10164:2: rule__UnpivotTable__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotTable__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1"


    // $ANTLR start "rule__UnpivotTable__Group_1__1__Impl"
    // InternalSqlParser.g:10170:1: rule__UnpivotTable__Group_1__1__Impl : ( NULLS ) ;
    public final void rule__UnpivotTable__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10174:1: ( ( NULLS ) )
            // InternalSqlParser.g:10175:1: ( NULLS )
            {
            // InternalSqlParser.g:10175:1: ( NULLS )
            // InternalSqlParser.g:10176:1: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getNULLSKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__0"
    // InternalSqlParser.g:10193:1: rule__UnpivotInClause__Group__0 : rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 ;
    public final void rule__UnpivotInClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10197:1: ( rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1 )
            // InternalSqlParser.g:10198:2: rule__UnpivotInClause__Group__0__Impl rule__UnpivotInClause__Group__1
            {
            pushFollow(FOLLOW_43);
            rule__UnpivotInClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0"


    // $ANTLR start "rule__UnpivotInClause__Group__0__Impl"
    // InternalSqlParser.g:10205:1: rule__UnpivotInClause__Group__0__Impl : ( () ) ;
    public final void rule__UnpivotInClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10209:1: ( ( () ) )
            // InternalSqlParser.g:10210:1: ( () )
            {
            // InternalSqlParser.g:10210:1: ( () )
            // InternalSqlParser.g:10211:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }
            // InternalSqlParser.g:10212:1: ()
            // InternalSqlParser.g:10214:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getUnipivotInClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__1"
    // InternalSqlParser.g:10224:1: rule__UnpivotInClause__Group__1 : rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 ;
    public final void rule__UnpivotInClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10228:1: ( rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2 )
            // InternalSqlParser.g:10229:2: rule__UnpivotInClause__Group__1__Impl rule__UnpivotInClause__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__UnpivotInClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1"


    // $ANTLR start "rule__UnpivotInClause__Group__1__Impl"
    // InternalSqlParser.g:10236:1: rule__UnpivotInClause__Group__1__Impl : ( ( rule__UnpivotInClause__OpAssignment_1 ) ) ;
    public final void rule__UnpivotInClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10240:1: ( ( ( rule__UnpivotInClause__OpAssignment_1 ) ) )
            // InternalSqlParser.g:10241:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:10241:1: ( ( rule__UnpivotInClause__OpAssignment_1 ) )
            // InternalSqlParser.g:10242:1: ( rule__UnpivotInClause__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }
            // InternalSqlParser.g:10243:1: ( rule__UnpivotInClause__OpAssignment_1 )
            // InternalSqlParser.g:10243:2: rule__UnpivotInClause__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__2"
    // InternalSqlParser.g:10253:1: rule__UnpivotInClause__Group__2 : rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 ;
    public final void rule__UnpivotInClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10257:1: ( rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3 )
            // InternalSqlParser.g:10258:2: rule__UnpivotInClause__Group__2__Impl rule__UnpivotInClause__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__UnpivotInClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2"


    // $ANTLR start "rule__UnpivotInClause__Group__2__Impl"
    // InternalSqlParser.g:10265:1: rule__UnpivotInClause__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__UnpivotInClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10269:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:10270:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:10270:1: ( LeftParenthesis )
            // InternalSqlParser.g:10271:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__2__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__3"
    // InternalSqlParser.g:10284:1: rule__UnpivotInClause__Group__3 : rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 ;
    public final void rule__UnpivotInClause__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10288:1: ( rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4 )
            // InternalSqlParser.g:10289:2: rule__UnpivotInClause__Group__3__Impl rule__UnpivotInClause__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__UnpivotInClause__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3"


    // $ANTLR start "rule__UnpivotInClause__Group__3__Impl"
    // InternalSqlParser.g:10296:1: rule__UnpivotInClause__Group__3__Impl : ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) ;
    public final void rule__UnpivotInClause__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10300:1: ( ( ( rule__UnpivotInClause__ArgsAssignment_3 ) ) )
            // InternalSqlParser.g:10301:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            {
            // InternalSqlParser.g:10301:1: ( ( rule__UnpivotInClause__ArgsAssignment_3 ) )
            // InternalSqlParser.g:10302:1: ( rule__UnpivotInClause__ArgsAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }
            // InternalSqlParser.g:10303:1: ( rule__UnpivotInClause__ArgsAssignment_3 )
            // InternalSqlParser.g:10303:2: rule__UnpivotInClause__ArgsAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__ArgsAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__3__Impl"


    // $ANTLR start "rule__UnpivotInClause__Group__4"
    // InternalSqlParser.g:10313:1: rule__UnpivotInClause__Group__4 : rule__UnpivotInClause__Group__4__Impl ;
    public final void rule__UnpivotInClause__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10317:1: ( rule__UnpivotInClause__Group__4__Impl )
            // InternalSqlParser.g:10318:2: rule__UnpivotInClause__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClause__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4"


    // $ANTLR start "rule__UnpivotInClause__Group__4__Impl"
    // InternalSqlParser.g:10324:1: rule__UnpivotInClause__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__UnpivotInClause__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10328:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:10329:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:10329:1: ( RightParenthesis )
            // InternalSqlParser.g:10330:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__Group__4__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0"
    // InternalSqlParser.g:10353:1: rule__UnpivotInClauseArgs__Group__0 : rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 ;
    public final void rule__UnpivotInClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10357:1: ( rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1 )
            // InternalSqlParser.g:10358:2: rule__UnpivotInClauseArgs__Group__0__Impl rule__UnpivotInClauseArgs__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__UnpivotInClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__0__Impl"
    // InternalSqlParser.g:10365:1: rule__UnpivotInClauseArgs__Group__0__Impl : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10369:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSqlParser.g:10370:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSqlParser.g:10370:1: ( ruleUnpivotInClauseArg )
            // InternalSqlParser.g:10371:1: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUnpivotInClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1"
    // InternalSqlParser.g:10382:1: rule__UnpivotInClauseArgs__Group__1 : rule__UnpivotInClauseArgs__Group__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10386:1: ( rule__UnpivotInClauseArgs__Group__1__Impl )
            // InternalSqlParser.g:10387:2: rule__UnpivotInClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group__1__Impl"
    // InternalSqlParser.g:10393:1: rule__UnpivotInClauseArgs__Group__1__Impl : ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10397:1: ( ( ( rule__UnpivotInClauseArgs__Group_1__0 )? ) )
            // InternalSqlParser.g:10398:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            {
            // InternalSqlParser.g:10398:1: ( ( rule__UnpivotInClauseArgs__Group_1__0 )? )
            // InternalSqlParser.g:10399:1: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:10400:1: ( rule__UnpivotInClauseArgs__Group_1__0 )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==Comma) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalSqlParser.g:10400:2: rule__UnpivotInClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0"
    // InternalSqlParser.g:10414:1: rule__UnpivotInClauseArgs__Group_1__0 : rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10418:1: ( rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1 )
            // InternalSqlParser.g:10419:2: rule__UnpivotInClauseArgs__Group_1__0__Impl rule__UnpivotInClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__UnpivotInClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__0__Impl"
    // InternalSqlParser.g:10426:1: rule__UnpivotInClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10430:1: ( ( () ) )
            // InternalSqlParser.g:10431:1: ( () )
            {
            // InternalSqlParser.g:10431:1: ( () )
            // InternalSqlParser.g:10432:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:10433:1: ()
            // InternalSqlParser.g:10435:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getUicargsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1"
    // InternalSqlParser.g:10445:1: rule__UnpivotInClauseArgs__Group_1__1 : rule__UnpivotInClauseArgs__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10449:1: ( rule__UnpivotInClauseArgs__Group_1__1__Impl )
            // InternalSqlParser.g:10450:2: rule__UnpivotInClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1__1__Impl"
    // InternalSqlParser.g:10456:1: rule__UnpivotInClauseArgs__Group_1__1__Impl : ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10460:1: ( ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:10461:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:10461:1: ( ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* ) )
            // InternalSqlParser.g:10462:1: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) ) ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:10462:1: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 ) )
            // InternalSqlParser.g:10463:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:10464:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )
            // InternalSqlParser.g:10464:2: rule__UnpivotInClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__UnpivotInClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:10467:1: ( ( rule__UnpivotInClauseArgs__Group_1_1__0 )* )
            // InternalSqlParser.g:10468:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:10469:1: ( rule__UnpivotInClauseArgs__Group_1_1__0 )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==Comma) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalSqlParser.g:10469:2: rule__UnpivotInClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__UnpivotInClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0"
    // InternalSqlParser.g:10484:1: rule__UnpivotInClauseArgs__Group_1_1__0 : rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10488:1: ( rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1 )
            // InternalSqlParser.g:10489:2: rule__UnpivotInClauseArgs__Group_1_1__0__Impl rule__UnpivotInClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__UnpivotInClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"
    // InternalSqlParser.g:10496:1: rule__UnpivotInClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10500:1: ( ( Comma ) )
            // InternalSqlParser.g:10501:1: ( Comma )
            {
            // InternalSqlParser.g:10501:1: ( Comma )
            // InternalSqlParser.g:10502:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1"
    // InternalSqlParser.g:10515:1: rule__UnpivotInClauseArgs__Group_1_1__1 : rule__UnpivotInClauseArgs__Group_1_1__1__Impl ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10519:1: ( rule__UnpivotInClauseArgs__Group_1_1__1__Impl )
            // InternalSqlParser.g:10520:2: rule__UnpivotInClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"
    // InternalSqlParser.g:10526:1: rule__UnpivotInClauseArgs__Group_1_1__1__Impl : ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__UnpivotInClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10530:1: ( ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:10531:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:10531:1: ( ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:10532:1: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:10533:1: ( rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:10533:2: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0"
    // InternalSqlParser.g:10547:1: rule__UnpivotInClauseArg__Group__0 : rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 ;
    public final void rule__UnpivotInClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10551:1: ( rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1 )
            // InternalSqlParser.g:10552:2: rule__UnpivotInClauseArg__Group__0__Impl rule__UnpivotInClauseArg__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__UnpivotInClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__0__Impl"
    // InternalSqlParser.g:10559:1: rule__UnpivotInClauseArg__Group__0__Impl : ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) ;
    public final void rule__UnpivotInClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10563:1: ( ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) ) )
            // InternalSqlParser.g:10564:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            {
            // InternalSqlParser.g:10564:1: ( ( rule__UnpivotInClauseArg__PcolsAssignment_0 ) )
            // InternalSqlParser.g:10565:1: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }
            // InternalSqlParser.g:10566:1: ( rule__UnpivotInClauseArg__PcolsAssignment_0 )
            // InternalSqlParser.g:10566:2: rule__UnpivotInClauseArg__PcolsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__PcolsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1"
    // InternalSqlParser.g:10576:1: rule__UnpivotInClauseArg__Group__1 : rule__UnpivotInClauseArg__Group__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10580:1: ( rule__UnpivotInClauseArg__Group__1__Impl )
            // InternalSqlParser.g:10581:2: rule__UnpivotInClauseArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group__1__Impl"
    // InternalSqlParser.g:10587:1: rule__UnpivotInClauseArg__Group__1__Impl : ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) ;
    public final void rule__UnpivotInClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10591:1: ( ( ( rule__UnpivotInClauseArg__Group_1__0 )? ) )
            // InternalSqlParser.g:10592:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            {
            // InternalSqlParser.g:10592:1: ( ( rule__UnpivotInClauseArg__Group_1__0 )? )
            // InternalSqlParser.g:10593:1: ( rule__UnpivotInClauseArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:10594:1: ( rule__UnpivotInClauseArg__Group_1__0 )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==AS) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalSqlParser.g:10594:2: rule__UnpivotInClauseArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnpivotInClauseArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group__1__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0"
    // InternalSqlParser.g:10608:1: rule__UnpivotInClauseArg__Group_1__0 : rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 ;
    public final void rule__UnpivotInClauseArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10612:1: ( rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1 )
            // InternalSqlParser.g:10613:2: rule__UnpivotInClauseArg__Group_1__0__Impl rule__UnpivotInClauseArg__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__UnpivotInClauseArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__0__Impl"
    // InternalSqlParser.g:10620:1: rule__UnpivotInClauseArg__Group_1__0__Impl : ( AS ) ;
    public final void rule__UnpivotInClauseArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10624:1: ( ( AS ) )
            // InternalSqlParser.g:10625:1: ( AS )
            {
            // InternalSqlParser.g:10625:1: ( AS )
            // InternalSqlParser.g:10626:1: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getASKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__0__Impl"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1"
    // InternalSqlParser.g:10639:1: rule__UnpivotInClauseArg__Group_1__1 : rule__UnpivotInClauseArg__Group_1__1__Impl ;
    public final void rule__UnpivotInClauseArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10643:1: ( rule__UnpivotInClauseArg__Group_1__1__Impl )
            // InternalSqlParser.g:10644:2: rule__UnpivotInClauseArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1"


    // $ANTLR start "rule__UnpivotInClauseArg__Group_1__1__Impl"
    // InternalSqlParser.g:10650:1: rule__UnpivotInClauseArg__Group_1__1__Impl : ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) ;
    public final void rule__UnpivotInClauseArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10654:1: ( ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) ) )
            // InternalSqlParser.g:10655:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            {
            // InternalSqlParser.g:10655:1: ( ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 ) )
            // InternalSqlParser.g:10656:1: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }
            // InternalSqlParser.g:10657:1: ( rule__UnpivotInClauseArg__CfulsAssignment_1_1 )
            // InternalSqlParser.g:10657:2: rule__UnpivotInClauseArg__CfulsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__UnpivotInClauseArg__CfulsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__Group_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group__0"
    // InternalSqlParser.g:10671:1: rule__PivotForClause__Group__0 : rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 ;
    public final void rule__PivotForClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10675:1: ( rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1 )
            // InternalSqlParser.g:10676:2: rule__PivotForClause__Group__0__Impl rule__PivotForClause__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__PivotForClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0"


    // $ANTLR start "rule__PivotForClause__Group__0__Impl"
    // InternalSqlParser.g:10683:1: rule__PivotForClause__Group__0__Impl : ( FOR ) ;
    public final void rule__PivotForClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10687:1: ( ( FOR ) )
            // InternalSqlParser.g:10688:1: ( FOR )
            {
            // InternalSqlParser.g:10688:1: ( FOR )
            // InternalSqlParser.g:10689:1: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group__1"
    // InternalSqlParser.g:10702:1: rule__PivotForClause__Group__1 : rule__PivotForClause__Group__1__Impl ;
    public final void rule__PivotForClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10706:1: ( rule__PivotForClause__Group__1__Impl )
            // InternalSqlParser.g:10707:2: rule__PivotForClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1"


    // $ANTLR start "rule__PivotForClause__Group__1__Impl"
    // InternalSqlParser.g:10713:1: rule__PivotForClause__Group__1__Impl : ( ( rule__PivotForClause__Alternatives_1 ) ) ;
    public final void rule__PivotForClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10717:1: ( ( ( rule__PivotForClause__Alternatives_1 ) ) )
            // InternalSqlParser.g:10718:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            {
            // InternalSqlParser.g:10718:1: ( ( rule__PivotForClause__Alternatives_1 ) )
            // InternalSqlParser.g:10719:1: ( rule__PivotForClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:10720:1: ( rule__PivotForClause__Alternatives_1 )
            // InternalSqlParser.g:10720:2: rule__PivotForClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0"
    // InternalSqlParser.g:10734:1: rule__PivotForClause__Group_1_1__0 : rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 ;
    public final void rule__PivotForClause__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10738:1: ( rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1 )
            // InternalSqlParser.g:10739:2: rule__PivotForClause__Group_1_1__0__Impl rule__PivotForClause__Group_1_1__1
            {
            pushFollow(FOLLOW_17);
            rule__PivotForClause__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0"


    // $ANTLR start "rule__PivotForClause__Group_1_1__0__Impl"
    // InternalSqlParser.g:10746:1: rule__PivotForClause__Group_1_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10750:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:10751:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:10751:1: ( LeftParenthesis )
            // InternalSqlParser.g:10752:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getLeftParenthesisKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1"
    // InternalSqlParser.g:10765:1: rule__PivotForClause__Group_1_1__1 : rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 ;
    public final void rule__PivotForClause__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10769:1: ( rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2 )
            // InternalSqlParser.g:10770:2: rule__PivotForClause__Group_1_1__1__Impl rule__PivotForClause__Group_1_1__2
            {
            pushFollow(FOLLOW_7);
            rule__PivotForClause__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1"


    // $ANTLR start "rule__PivotForClause__Group_1_1__1__Impl"
    // InternalSqlParser.g:10777:1: rule__PivotForClause__Group_1_1__1__Impl : ( ruleColumns ) ;
    public final void rule__PivotForClause__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10781:1: ( ( ruleColumns ) )
            // InternalSqlParser.g:10782:1: ( ruleColumns )
            {
            // InternalSqlParser.g:10782:1: ( ruleColumns )
            // InternalSqlParser.g:10783:1: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getColumnsParserRuleCall_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2"
    // InternalSqlParser.g:10794:1: rule__PivotForClause__Group_1_1__2 : rule__PivotForClause__Group_1_1__2__Impl ;
    public final void rule__PivotForClause__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10798:1: ( rule__PivotForClause__Group_1_1__2__Impl )
            // InternalSqlParser.g:10799:2: rule__PivotForClause__Group_1_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotForClause__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2"


    // $ANTLR start "rule__PivotForClause__Group_1_1__2__Impl"
    // InternalSqlParser.g:10805:1: rule__PivotForClause__Group_1_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotForClause__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10809:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:10810:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:10810:1: ( RightParenthesis )
            // InternalSqlParser.g:10811:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotForClauseAccess().getRightParenthesisKeyword_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotForClause__Group_1_1__2__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__0"
    // InternalSqlParser.g:10830:1: rule__PivotColumns__Group_1__0 : rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 ;
    public final void rule__PivotColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10834:1: ( rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1 )
            // InternalSqlParser.g:10835:2: rule__PivotColumns__Group_1__0__Impl rule__PivotColumns__Group_1__1
            {
            pushFollow(FOLLOW_4);
            rule__PivotColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0"


    // $ANTLR start "rule__PivotColumns__Group_1__0__Impl"
    // InternalSqlParser.g:10842:1: rule__PivotColumns__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__PivotColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10846:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:10847:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:10847:1: ( LeftParenthesis )
            // InternalSqlParser.g:10848:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__0__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__1"
    // InternalSqlParser.g:10861:1: rule__PivotColumns__Group_1__1 : rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 ;
    public final void rule__PivotColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10865:1: ( rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2 )
            // InternalSqlParser.g:10866:2: rule__PivotColumns__Group_1__1__Impl rule__PivotColumns__Group_1__2
            {
            pushFollow(FOLLOW_7);
            rule__PivotColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1"


    // $ANTLR start "rule__PivotColumns__Group_1__1__Impl"
    // InternalSqlParser.g:10873:1: rule__PivotColumns__Group_1__1__Impl : ( rulePivotCols ) ;
    public final void rule__PivotColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10877:1: ( ( rulePivotCols ) )
            // InternalSqlParser.g:10878:1: ( rulePivotCols )
            {
            // InternalSqlParser.g:10878:1: ( rulePivotCols )
            // InternalSqlParser.g:10879:1: rulePivotCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getPivotColsParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__1__Impl"


    // $ANTLR start "rule__PivotColumns__Group_1__2"
    // InternalSqlParser.g:10890:1: rule__PivotColumns__Group_1__2 : rule__PivotColumns__Group_1__2__Impl ;
    public final void rule__PivotColumns__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10894:1: ( rule__PivotColumns__Group_1__2__Impl )
            // InternalSqlParser.g:10895:2: rule__PivotColumns__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotColumns__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2"


    // $ANTLR start "rule__PivotColumns__Group_1__2__Impl"
    // InternalSqlParser.g:10901:1: rule__PivotColumns__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__PivotColumns__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10905:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:10906:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:10906:1: ( RightParenthesis )
            // InternalSqlParser.g:10907:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColumnsAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotColumns__Group_1__2__Impl"


    // $ANTLR start "rule__PivotCols__Group__0"
    // InternalSqlParser.g:10926:1: rule__PivotCols__Group__0 : rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 ;
    public final void rule__PivotCols__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10930:1: ( rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1 )
            // InternalSqlParser.g:10931:2: rule__PivotCols__Group__0__Impl rule__PivotCols__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__PivotCols__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0"


    // $ANTLR start "rule__PivotCols__Group__0__Impl"
    // InternalSqlParser.g:10938:1: rule__PivotCols__Group__0__Impl : ( rulePivotCol ) ;
    public final void rule__PivotCols__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10942:1: ( ( rulePivotCol ) )
            // InternalSqlParser.g:10943:1: ( rulePivotCol )
            {
            // InternalSqlParser.g:10943:1: ( rulePivotCol )
            // InternalSqlParser.g:10944:1: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPivotColParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__0__Impl"


    // $ANTLR start "rule__PivotCols__Group__1"
    // InternalSqlParser.g:10955:1: rule__PivotCols__Group__1 : rule__PivotCols__Group__1__Impl ;
    public final void rule__PivotCols__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10959:1: ( rule__PivotCols__Group__1__Impl )
            // InternalSqlParser.g:10960:2: rule__PivotCols__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1"


    // $ANTLR start "rule__PivotCols__Group__1__Impl"
    // InternalSqlParser.g:10966:1: rule__PivotCols__Group__1__Impl : ( ( rule__PivotCols__Group_1__0 )? ) ;
    public final void rule__PivotCols__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10970:1: ( ( ( rule__PivotCols__Group_1__0 )? ) )
            // InternalSqlParser.g:10971:1: ( ( rule__PivotCols__Group_1__0 )? )
            {
            // InternalSqlParser.g:10971:1: ( ( rule__PivotCols__Group_1__0 )? )
            // InternalSqlParser.g:10972:1: ( rule__PivotCols__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:10973:1: ( rule__PivotCols__Group_1__0 )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==Comma) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSqlParser.g:10973:2: rule__PivotCols__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCols__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__0"
    // InternalSqlParser.g:10987:1: rule__PivotCols__Group_1__0 : rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 ;
    public final void rule__PivotCols__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:10991:1: ( rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1 )
            // InternalSqlParser.g:10992:2: rule__PivotCols__Group_1__0__Impl rule__PivotCols__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__PivotCols__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0"


    // $ANTLR start "rule__PivotCols__Group_1__0__Impl"
    // InternalSqlParser.g:10999:1: rule__PivotCols__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCols__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11003:1: ( ( () ) )
            // InternalSqlParser.g:11004:1: ( () )
            {
            // InternalSqlParser.g:11004:1: ( () )
            // InternalSqlParser.g:11005:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:11006:1: ()
            // InternalSqlParser.g:11008:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getPvcsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1__1"
    // InternalSqlParser.g:11018:1: rule__PivotCols__Group_1__1 : rule__PivotCols__Group_1__1__Impl ;
    public final void rule__PivotCols__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11022:1: ( rule__PivotCols__Group_1__1__Impl )
            // InternalSqlParser.g:11023:2: rule__PivotCols__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1"


    // $ANTLR start "rule__PivotCols__Group_1__1__Impl"
    // InternalSqlParser.g:11029:1: rule__PivotCols__Group_1__1__Impl : ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCols__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11033:1: ( ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:11034:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:11034:1: ( ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* ) )
            // InternalSqlParser.g:11035:1: ( ( rule__PivotCols__Group_1_1__0 ) ) ( ( rule__PivotCols__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:11035:1: ( ( rule__PivotCols__Group_1_1__0 ) )
            // InternalSqlParser.g:11036:1: ( rule__PivotCols__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11037:1: ( rule__PivotCols__Group_1_1__0 )
            // InternalSqlParser.g:11037:2: rule__PivotCols__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__PivotCols__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:11040:1: ( ( rule__PivotCols__Group_1_1__0 )* )
            // InternalSqlParser.g:11041:1: ( rule__PivotCols__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11042:1: ( rule__PivotCols__Group_1_1__0 )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==Comma) ) {
                    alt101=1;
                }


                switch (alt101) {
            	case 1 :
            	    // InternalSqlParser.g:11042:2: rule__PivotCols__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__PivotCols__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__0"
    // InternalSqlParser.g:11057:1: rule__PivotCols__Group_1_1__0 : rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 ;
    public final void rule__PivotCols__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11061:1: ( rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1 )
            // InternalSqlParser.g:11062:2: rule__PivotCols__Group_1_1__0__Impl rule__PivotCols__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__PivotCols__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0"


    // $ANTLR start "rule__PivotCols__Group_1_1__0__Impl"
    // InternalSqlParser.g:11069:1: rule__PivotCols__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__PivotCols__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11073:1: ( ( Comma ) )
            // InternalSqlParser.g:11074:1: ( Comma )
            {
            // InternalSqlParser.g:11074:1: ( Comma )
            // InternalSqlParser.g:11075:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCols__Group_1_1__1"
    // InternalSqlParser.g:11088:1: rule__PivotCols__Group_1_1__1 : rule__PivotCols__Group_1_1__1__Impl ;
    public final void rule__PivotCols__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11092:1: ( rule__PivotCols__Group_1_1__1__Impl )
            // InternalSqlParser.g:11093:2: rule__PivotCols__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1"


    // $ANTLR start "rule__PivotCols__Group_1_1__1__Impl"
    // InternalSqlParser.g:11099:1: rule__PivotCols__Group_1_1__1__Impl : ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCols__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11103:1: ( ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:11104:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:11104:1: ( ( rule__PivotCols__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:11105:1: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:11106:1: ( rule__PivotCols__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:11106:2: rule__PivotCols__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCols__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__Group_1_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group__0"
    // InternalSqlParser.g:11120:1: rule__PivotCol__Group__0 : rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 ;
    public final void rule__PivotCol__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11124:1: ( rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1 )
            // InternalSqlParser.g:11125:2: rule__PivotCol__Group__0__Impl rule__PivotCol__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__PivotCol__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0"


    // $ANTLR start "rule__PivotCol__Group__0__Impl"
    // InternalSqlParser.g:11132:1: rule__PivotCol__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11136:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:11137:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:11137:1: ( ruleDbObjectName )
            // InternalSqlParser.g:11138:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__0__Impl"


    // $ANTLR start "rule__PivotCol__Group__1"
    // InternalSqlParser.g:11149:1: rule__PivotCol__Group__1 : rule__PivotCol__Group__1__Impl ;
    public final void rule__PivotCol__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11153:1: ( rule__PivotCol__Group__1__Impl )
            // InternalSqlParser.g:11154:2: rule__PivotCol__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1"


    // $ANTLR start "rule__PivotCol__Group__1__Impl"
    // InternalSqlParser.g:11160:1: rule__PivotCol__Group__1__Impl : ( ( rule__PivotCol__Group_1__0 )? ) ;
    public final void rule__PivotCol__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11164:1: ( ( ( rule__PivotCol__Group_1__0 )? ) )
            // InternalSqlParser.g:11165:1: ( ( rule__PivotCol__Group_1__0 )? )
            {
            // InternalSqlParser.g:11165:1: ( ( rule__PivotCol__Group_1__0 )? )
            // InternalSqlParser.g:11166:1: ( rule__PivotCol__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:11167:1: ( rule__PivotCol__Group_1__0 )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==FullStop) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSqlParser.g:11167:2: rule__PivotCol__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__PivotCol__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__0"
    // InternalSqlParser.g:11181:1: rule__PivotCol__Group_1__0 : rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 ;
    public final void rule__PivotCol__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11185:1: ( rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1 )
            // InternalSqlParser.g:11186:2: rule__PivotCol__Group_1__0__Impl rule__PivotCol__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__PivotCol__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0"


    // $ANTLR start "rule__PivotCol__Group_1__0__Impl"
    // InternalSqlParser.g:11193:1: rule__PivotCol__Group_1__0__Impl : ( () ) ;
    public final void rule__PivotCol__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11197:1: ( ( () ) )
            // InternalSqlParser.g:11198:1: ( () )
            {
            // InternalSqlParser.g:11198:1: ( () )
            // InternalSqlParser.g:11199:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:11200:1: ()
            // InternalSqlParser.g:11202:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getPcolsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1__1"
    // InternalSqlParser.g:11212:1: rule__PivotCol__Group_1__1 : rule__PivotCol__Group_1__1__Impl ;
    public final void rule__PivotCol__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11216:1: ( rule__PivotCol__Group_1__1__Impl )
            // InternalSqlParser.g:11217:2: rule__PivotCol__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1"


    // $ANTLR start "rule__PivotCol__Group_1__1__Impl"
    // InternalSqlParser.g:11223:1: rule__PivotCol__Group_1__1__Impl : ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) ;
    public final void rule__PivotCol__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11227:1: ( ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:11228:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:11228:1: ( ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* ) )
            // InternalSqlParser.g:11229:1: ( ( rule__PivotCol__Group_1_1__0 ) ) ( ( rule__PivotCol__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:11229:1: ( ( rule__PivotCol__Group_1_1__0 ) )
            // InternalSqlParser.g:11230:1: ( rule__PivotCol__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11231:1: ( rule__PivotCol__Group_1_1__0 )
            // InternalSqlParser.g:11231:2: rule__PivotCol__Group_1_1__0
            {
            pushFollow(FOLLOW_32);
            rule__PivotCol__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:11234:1: ( ( rule__PivotCol__Group_1_1__0 )* )
            // InternalSqlParser.g:11235:1: ( rule__PivotCol__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11236:1: ( rule__PivotCol__Group_1_1__0 )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==FullStop) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalSqlParser.g:11236:2: rule__PivotCol__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_32);
            	    rule__PivotCol__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1__1__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__0"
    // InternalSqlParser.g:11251:1: rule__PivotCol__Group_1_1__0 : rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 ;
    public final void rule__PivotCol__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11255:1: ( rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1 )
            // InternalSqlParser.g:11256:2: rule__PivotCol__Group_1_1__0__Impl rule__PivotCol__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__PivotCol__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0"


    // $ANTLR start "rule__PivotCol__Group_1_1__0__Impl"
    // InternalSqlParser.g:11263:1: rule__PivotCol__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__PivotCol__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11267:1: ( ( FullStop ) )
            // InternalSqlParser.g:11268:1: ( FullStop )
            {
            // InternalSqlParser.g:11268:1: ( FullStop )
            // InternalSqlParser.g:11269:1: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__0__Impl"


    // $ANTLR start "rule__PivotCol__Group_1_1__1"
    // InternalSqlParser.g:11282:1: rule__PivotCol__Group_1_1__1 : rule__PivotCol__Group_1_1__1__Impl ;
    public final void rule__PivotCol__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11286:1: ( rule__PivotCol__Group_1_1__1__Impl )
            // InternalSqlParser.g:11287:2: rule__PivotCol__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1"


    // $ANTLR start "rule__PivotCol__Group_1_1__1__Impl"
    // InternalSqlParser.g:11293:1: rule__PivotCol__Group_1_1__1__Impl : ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__PivotCol__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11297:1: ( ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:11298:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:11298:1: ( ( rule__PivotCol__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:11299:1: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:11300:1: ( rule__PivotCol__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:11300:2: rule__PivotCol__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__PivotCol__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__Group_1_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group__0"
    // InternalSqlParser.g:11314:1: rule__TableFull__Group__0 : rule__TableFull__Group__0__Impl rule__TableFull__Group__1 ;
    public final void rule__TableFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11318:1: ( rule__TableFull__Group__0__Impl rule__TableFull__Group__1 )
            // InternalSqlParser.g:11319:2: rule__TableFull__Group__0__Impl rule__TableFull__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__TableFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0"


    // $ANTLR start "rule__TableFull__Group__0__Impl"
    // InternalSqlParser.g:11326:1: rule__TableFull__Group__0__Impl : ( ruleDbObjectName ) ;
    public final void rule__TableFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11330:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:11331:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:11331:1: ( ruleDbObjectName )
            // InternalSqlParser.g:11332:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getDbObjectNameParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__0__Impl"


    // $ANTLR start "rule__TableFull__Group__1"
    // InternalSqlParser.g:11343:1: rule__TableFull__Group__1 : rule__TableFull__Group__1__Impl ;
    public final void rule__TableFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11347:1: ( rule__TableFull__Group__1__Impl )
            // InternalSqlParser.g:11348:2: rule__TableFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1"


    // $ANTLR start "rule__TableFull__Group__1__Impl"
    // InternalSqlParser.g:11354:1: rule__TableFull__Group__1__Impl : ( ( rule__TableFull__Group_1__0 )? ) ;
    public final void rule__TableFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11358:1: ( ( ( rule__TableFull__Group_1__0 )? ) )
            // InternalSqlParser.g:11359:1: ( ( rule__TableFull__Group_1__0 )? )
            {
            // InternalSqlParser.g:11359:1: ( ( rule__TableFull__Group_1__0 )? )
            // InternalSqlParser.g:11360:1: ( rule__TableFull__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:11361:1: ( rule__TableFull__Group_1__0 )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==FullStop) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSqlParser.g:11361:2: rule__TableFull__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TableFull__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1__0"
    // InternalSqlParser.g:11375:1: rule__TableFull__Group_1__0 : rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 ;
    public final void rule__TableFull__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11379:1: ( rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1 )
            // InternalSqlParser.g:11380:2: rule__TableFull__Group_1__0__Impl rule__TableFull__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__TableFull__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0"


    // $ANTLR start "rule__TableFull__Group_1__0__Impl"
    // InternalSqlParser.g:11387:1: rule__TableFull__Group_1__0__Impl : ( () ) ;
    public final void rule__TableFull__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11391:1: ( ( () ) )
            // InternalSqlParser.g:11392:1: ( () )
            {
            // InternalSqlParser.g:11392:1: ( () )
            // InternalSqlParser.g:11393:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:11394:1: ()
            // InternalSqlParser.g:11396:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getTblsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1__1"
    // InternalSqlParser.g:11406:1: rule__TableFull__Group_1__1 : rule__TableFull__Group_1__1__Impl ;
    public final void rule__TableFull__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11410:1: ( rule__TableFull__Group_1__1__Impl )
            // InternalSqlParser.g:11411:2: rule__TableFull__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1"


    // $ANTLR start "rule__TableFull__Group_1__1__Impl"
    // InternalSqlParser.g:11417:1: rule__TableFull__Group_1__1__Impl : ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) ;
    public final void rule__TableFull__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11421:1: ( ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:11422:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:11422:1: ( ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* ) )
            // InternalSqlParser.g:11423:1: ( ( rule__TableFull__Group_1_1__0 ) ) ( ( rule__TableFull__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:11423:1: ( ( rule__TableFull__Group_1_1__0 ) )
            // InternalSqlParser.g:11424:1: ( rule__TableFull__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11425:1: ( rule__TableFull__Group_1_1__0 )
            // InternalSqlParser.g:11425:2: rule__TableFull__Group_1_1__0
            {
            pushFollow(FOLLOW_32);
            rule__TableFull__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:11428:1: ( ( rule__TableFull__Group_1_1__0 )* )
            // InternalSqlParser.g:11429:1: ( rule__TableFull__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11430:1: ( rule__TableFull__Group_1_1__0 )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==FullStop) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalSqlParser.g:11430:2: rule__TableFull__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_32);
            	    rule__TableFull__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1__1__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__0"
    // InternalSqlParser.g:11445:1: rule__TableFull__Group_1_1__0 : rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 ;
    public final void rule__TableFull__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11449:1: ( rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1 )
            // InternalSqlParser.g:11450:2: rule__TableFull__Group_1_1__0__Impl rule__TableFull__Group_1_1__1
            {
            pushFollow(FOLLOW_4);
            rule__TableFull__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0"


    // $ANTLR start "rule__TableFull__Group_1_1__0__Impl"
    // InternalSqlParser.g:11457:1: rule__TableFull__Group_1_1__0__Impl : ( FullStop ) ;
    public final void rule__TableFull__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11461:1: ( ( FullStop ) )
            // InternalSqlParser.g:11462:1: ( FullStop )
            {
            // InternalSqlParser.g:11462:1: ( FullStop )
            // InternalSqlParser.g:11463:1: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getFullStopKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__0__Impl"


    // $ANTLR start "rule__TableFull__Group_1_1__1"
    // InternalSqlParser.g:11476:1: rule__TableFull__Group_1_1__1 : rule__TableFull__Group_1_1__1__Impl ;
    public final void rule__TableFull__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11480:1: ( rule__TableFull__Group_1_1__1__Impl )
            // InternalSqlParser.g:11481:2: rule__TableFull__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1"


    // $ANTLR start "rule__TableFull__Group_1_1__1__Impl"
    // InternalSqlParser.g:11487:1: rule__TableFull__Group_1_1__1__Impl : ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__TableFull__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11491:1: ( ( ( rule__TableFull__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:11492:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:11492:1: ( ( rule__TableFull__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:11493:1: ( rule__TableFull__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:11494:1: ( rule__TableFull__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:11494:2: rule__TableFull__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__TableFull__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__Group_1_1__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__0"
    // InternalSqlParser.g:11508:1: rule__DbObjectNameAll__Group__0 : rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 ;
    public final void rule__DbObjectNameAll__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11512:1: ( rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1 )
            // InternalSqlParser.g:11513:2: rule__DbObjectNameAll__Group__0__Impl rule__DbObjectNameAll__Group__1
            {
            pushFollow(FOLLOW_31);
            rule__DbObjectNameAll__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0"


    // $ANTLR start "rule__DbObjectNameAll__Group__0__Impl"
    // InternalSqlParser.g:11520:1: rule__DbObjectNameAll__Group__0__Impl : ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) ;
    public final void rule__DbObjectNameAll__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11524:1: ( ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) ) )
            // InternalSqlParser.g:11525:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            {
            // InternalSqlParser.g:11525:1: ( ( rule__DbObjectNameAll__DbnameAssignment_0 ) )
            // InternalSqlParser.g:11526:1: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }
            // InternalSqlParser.g:11527:1: ( rule__DbObjectNameAll__DbnameAssignment_0 )
            // InternalSqlParser.g:11527:2: rule__DbObjectNameAll__DbnameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__DbnameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__0__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__1"
    // InternalSqlParser.g:11537:1: rule__DbObjectNameAll__Group__1 : rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 ;
    public final void rule__DbObjectNameAll__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11541:1: ( rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2 )
            // InternalSqlParser.g:11542:2: rule__DbObjectNameAll__Group__1__Impl rule__DbObjectNameAll__Group__2
            {
            pushFollow(FOLLOW_49);
            rule__DbObjectNameAll__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1"


    // $ANTLR start "rule__DbObjectNameAll__Group__1__Impl"
    // InternalSqlParser.g:11549:1: rule__DbObjectNameAll__Group__1__Impl : ( FullStop ) ;
    public final void rule__DbObjectNameAll__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11553:1: ( ( FullStop ) )
            // InternalSqlParser.g:11554:1: ( FullStop )
            {
            // InternalSqlParser.g:11554:1: ( FullStop )
            // InternalSqlParser.g:11555:1: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__1__Impl"


    // $ANTLR start "rule__DbObjectNameAll__Group__2"
    // InternalSqlParser.g:11568:1: rule__DbObjectNameAll__Group__2 : rule__DbObjectNameAll__Group__2__Impl ;
    public final void rule__DbObjectNameAll__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11572:1: ( rule__DbObjectNameAll__Group__2__Impl )
            // InternalSqlParser.g:11573:2: rule__DbObjectNameAll__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DbObjectNameAll__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2"


    // $ANTLR start "rule__DbObjectNameAll__Group__2__Impl"
    // InternalSqlParser.g:11579:1: rule__DbObjectNameAll__Group__2__Impl : ( RULE_STAR ) ;
    public final void rule__DbObjectNameAll__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11583:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:11584:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:11584:1: ( RULE_STAR )
            // InternalSqlParser.g:11585:1: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getSTARTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__Group__2__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__0"
    // InternalSqlParser.g:11602:1: rule__OrderByColumns__Group__0 : rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 ;
    public final void rule__OrderByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11606:1: ( rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1 )
            // InternalSqlParser.g:11607:2: rule__OrderByColumns__Group__0__Impl rule__OrderByColumns__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__OrderByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0"


    // $ANTLR start "rule__OrderByColumns__Group__0__Impl"
    // InternalSqlParser.g:11614:1: rule__OrderByColumns__Group__0__Impl : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11618:1: ( ( ruleOrderByColumnFull ) )
            // InternalSqlParser.g:11619:1: ( ruleOrderByColumnFull )
            {
            // InternalSqlParser.g:11619:1: ( ruleOrderByColumnFull )
            // InternalSqlParser.g:11620:1: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrderByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group__1"
    // InternalSqlParser.g:11631:1: rule__OrderByColumns__Group__1 : rule__OrderByColumns__Group__1__Impl ;
    public final void rule__OrderByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11635:1: ( rule__OrderByColumns__Group__1__Impl )
            // InternalSqlParser.g:11636:2: rule__OrderByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1"


    // $ANTLR start "rule__OrderByColumns__Group__1__Impl"
    // InternalSqlParser.g:11642:1: rule__OrderByColumns__Group__1__Impl : ( ( rule__OrderByColumns__Group_1__0 )? ) ;
    public final void rule__OrderByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11646:1: ( ( ( rule__OrderByColumns__Group_1__0 )? ) )
            // InternalSqlParser.g:11647:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            {
            // InternalSqlParser.g:11647:1: ( ( rule__OrderByColumns__Group_1__0 )? )
            // InternalSqlParser.g:11648:1: ( rule__OrderByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:11649:1: ( rule__OrderByColumns__Group_1__0 )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Comma) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalSqlParser.g:11649:2: rule__OrderByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__0"
    // InternalSqlParser.g:11663:1: rule__OrderByColumns__Group_1__0 : rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 ;
    public final void rule__OrderByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11667:1: ( rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1 )
            // InternalSqlParser.g:11668:2: rule__OrderByColumns__Group_1__0__Impl rule__OrderByColumns__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__OrderByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1__0__Impl"
    // InternalSqlParser.g:11675:1: rule__OrderByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11679:1: ( ( () ) )
            // InternalSqlParser.g:11680:1: ( () )
            {
            // InternalSqlParser.g:11680:1: ( () )
            // InternalSqlParser.g:11681:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:11682:1: ()
            // InternalSqlParser.g:11684:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getOrOrderByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1__1"
    // InternalSqlParser.g:11694:1: rule__OrderByColumns__Group_1__1 : rule__OrderByColumns__Group_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11698:1: ( rule__OrderByColumns__Group_1__1__Impl )
            // InternalSqlParser.g:11699:2: rule__OrderByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1__1__Impl"
    // InternalSqlParser.g:11705:1: rule__OrderByColumns__Group_1__1__Impl : ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11709:1: ( ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:11710:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:11710:1: ( ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* ) )
            // InternalSqlParser.g:11711:1: ( ( rule__OrderByColumns__Group_1_1__0 ) ) ( ( rule__OrderByColumns__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:11711:1: ( ( rule__OrderByColumns__Group_1_1__0 ) )
            // InternalSqlParser.g:11712:1: ( rule__OrderByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11713:1: ( rule__OrderByColumns__Group_1_1__0 )
            // InternalSqlParser.g:11713:2: rule__OrderByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__OrderByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:11716:1: ( ( rule__OrderByColumns__Group_1_1__0 )* )
            // InternalSqlParser.g:11717:1: ( rule__OrderByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11718:1: ( rule__OrderByColumns__Group_1_1__0 )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==Comma) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // InternalSqlParser.g:11718:2: rule__OrderByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__OrderByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0"
    // InternalSqlParser.g:11733:1: rule__OrderByColumns__Group_1_1__0 : rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 ;
    public final void rule__OrderByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11737:1: ( rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1 )
            // InternalSqlParser.g:11738:2: rule__OrderByColumns__Group_1_1__0__Impl rule__OrderByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__OrderByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__0__Impl"
    // InternalSqlParser.g:11745:1: rule__OrderByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11749:1: ( ( Comma ) )
            // InternalSqlParser.g:11750:1: ( Comma )
            {
            // InternalSqlParser.g:11750:1: ( Comma )
            // InternalSqlParser.g:11751:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1"
    // InternalSqlParser.g:11764:1: rule__OrderByColumns__Group_1_1__1 : rule__OrderByColumns__Group_1_1__1__Impl ;
    public final void rule__OrderByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11768:1: ( rule__OrderByColumns__Group_1_1__1__Impl )
            // InternalSqlParser.g:11769:2: rule__OrderByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1"


    // $ANTLR start "rule__OrderByColumns__Group_1_1__1__Impl"
    // InternalSqlParser.g:11775:1: rule__OrderByColumns__Group_1_1__1__Impl : ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11779:1: ( ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:11780:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:11780:1: ( ( rule__OrderByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:11781:1: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:11782:1: ( rule__OrderByColumns__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:11782:2: rule__OrderByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__0"
    // InternalSqlParser.g:11796:1: rule__OrderByColumnFull__Group__0 : rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 ;
    public final void rule__OrderByColumnFull__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11800:1: ( rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1 )
            // InternalSqlParser.g:11801:2: rule__OrderByColumnFull__Group__0__Impl rule__OrderByColumnFull__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__OrderByColumnFull__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0"


    // $ANTLR start "rule__OrderByColumnFull__Group__0__Impl"
    // InternalSqlParser.g:11808:1: rule__OrderByColumnFull__Group__0__Impl : ( ( rule__OrderByColumnFull__Alternatives_0 ) ) ;
    public final void rule__OrderByColumnFull__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11812:1: ( ( ( rule__OrderByColumnFull__Alternatives_0 ) ) )
            // InternalSqlParser.g:11813:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            {
            // InternalSqlParser.g:11813:1: ( ( rule__OrderByColumnFull__Alternatives_0 ) )
            // InternalSqlParser.g:11814:1: ( rule__OrderByColumnFull__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }
            // InternalSqlParser.g:11815:1: ( rule__OrderByColumnFull__Alternatives_0 )
            // InternalSqlParser.g:11815:2: rule__OrderByColumnFull__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__0__Impl"


    // $ANTLR start "rule__OrderByColumnFull__Group__1"
    // InternalSqlParser.g:11825:1: rule__OrderByColumnFull__Group__1 : rule__OrderByColumnFull__Group__1__Impl ;
    public final void rule__OrderByColumnFull__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11829:1: ( rule__OrderByColumnFull__Group__1__Impl )
            // InternalSqlParser.g:11830:2: rule__OrderByColumnFull__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1"


    // $ANTLR start "rule__OrderByColumnFull__Group__1__Impl"
    // InternalSqlParser.g:11836:1: rule__OrderByColumnFull__Group__1__Impl : ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) ;
    public final void rule__OrderByColumnFull__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11840:1: ( ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? ) )
            // InternalSqlParser.g:11841:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            {
            // InternalSqlParser.g:11841:1: ( ( rule__OrderByColumnFull__DirectionAssignment_1 )? )
            // InternalSqlParser.g:11842:1: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }
            // InternalSqlParser.g:11843:1: ( rule__OrderByColumnFull__DirectionAssignment_1 )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==DESC||LA108_0==ASC) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalSqlParser.g:11843:2: rule__OrderByColumnFull__DirectionAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByColumnFull__DirectionAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__0"
    // InternalSqlParser.g:11857:1: rule__GroupByColumns__Group__0 : rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 ;
    public final void rule__GroupByColumns__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11861:1: ( rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1 )
            // InternalSqlParser.g:11862:2: rule__GroupByColumns__Group__0__Impl rule__GroupByColumns__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__GroupByColumns__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0"


    // $ANTLR start "rule__GroupByColumns__Group__0__Impl"
    // InternalSqlParser.g:11869:1: rule__GroupByColumns__Group__0__Impl : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11873:1: ( ( ruleGroupByColumnFull ) )
            // InternalSqlParser.g:11874:1: ( ruleGroupByColumnFull )
            {
            // InternalSqlParser.g:11874:1: ( ruleGroupByColumnFull )
            // InternalSqlParser.g:11875:1: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroupByColumnFullParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group__1"
    // InternalSqlParser.g:11886:1: rule__GroupByColumns__Group__1 : rule__GroupByColumns__Group__1__Impl ;
    public final void rule__GroupByColumns__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11890:1: ( rule__GroupByColumns__Group__1__Impl )
            // InternalSqlParser.g:11891:2: rule__GroupByColumns__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1"


    // $ANTLR start "rule__GroupByColumns__Group__1__Impl"
    // InternalSqlParser.g:11897:1: rule__GroupByColumns__Group__1__Impl : ( ( rule__GroupByColumns__Group_1__0 )? ) ;
    public final void rule__GroupByColumns__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11901:1: ( ( ( rule__GroupByColumns__Group_1__0 )? ) )
            // InternalSqlParser.g:11902:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            {
            // InternalSqlParser.g:11902:1: ( ( rule__GroupByColumns__Group_1__0 )? )
            // InternalSqlParser.g:11903:1: ( rule__GroupByColumns__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:11904:1: ( rule__GroupByColumns__Group_1__0 )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==Comma) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalSqlParser.g:11904:2: rule__GroupByColumns__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__GroupByColumns__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__0"
    // InternalSqlParser.g:11918:1: rule__GroupByColumns__Group_1__0 : rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 ;
    public final void rule__GroupByColumns__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11922:1: ( rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1 )
            // InternalSqlParser.g:11923:2: rule__GroupByColumns__Group_1__0__Impl rule__GroupByColumns__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__GroupByColumns__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1__0__Impl"
    // InternalSqlParser.g:11930:1: rule__GroupByColumns__Group_1__0__Impl : ( () ) ;
    public final void rule__GroupByColumns__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11934:1: ( ( () ) )
            // InternalSqlParser.g:11935:1: ( () )
            {
            // InternalSqlParser.g:11935:1: ( () )
            // InternalSqlParser.g:11936:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:11937:1: ()
            // InternalSqlParser.g:11939:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getOrGroupByColumnEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1__1"
    // InternalSqlParser.g:11949:1: rule__GroupByColumns__Group_1__1 : rule__GroupByColumns__Group_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11953:1: ( rule__GroupByColumns__Group_1__1__Impl )
            // InternalSqlParser.g:11954:2: rule__GroupByColumns__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1__1__Impl"
    // InternalSqlParser.g:11960:1: rule__GroupByColumns__Group_1__1__Impl : ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) ;
    public final void rule__GroupByColumns__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11964:1: ( ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:11965:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:11965:1: ( ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* ) )
            // InternalSqlParser.g:11966:1: ( ( rule__GroupByColumns__Group_1_1__0 ) ) ( ( rule__GroupByColumns__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:11966:1: ( ( rule__GroupByColumns__Group_1_1__0 ) )
            // InternalSqlParser.g:11967:1: ( rule__GroupByColumns__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11968:1: ( rule__GroupByColumns__Group_1_1__0 )
            // InternalSqlParser.g:11968:2: rule__GroupByColumns__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__GroupByColumns__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:11971:1: ( ( rule__GroupByColumns__Group_1_1__0 )* )
            // InternalSqlParser.g:11972:1: ( rule__GroupByColumns__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:11973:1: ( rule__GroupByColumns__Group_1_1__0 )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==Comma) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalSqlParser.g:11973:2: rule__GroupByColumns__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__GroupByColumns__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1__1__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0"
    // InternalSqlParser.g:11988:1: rule__GroupByColumns__Group_1_1__0 : rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 ;
    public final void rule__GroupByColumns__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:11992:1: ( rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1 )
            // InternalSqlParser.g:11993:2: rule__GroupByColumns__Group_1_1__0__Impl rule__GroupByColumns__Group_1_1__1
            {
            pushFollow(FOLLOW_26);
            rule__GroupByColumns__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__0__Impl"
    // InternalSqlParser.g:12000:1: rule__GroupByColumns__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__GroupByColumns__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12004:1: ( ( Comma ) )
            // InternalSqlParser.g:12005:1: ( Comma )
            {
            // InternalSqlParser.g:12005:1: ( Comma )
            // InternalSqlParser.g:12006:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__0__Impl"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1"
    // InternalSqlParser.g:12019:1: rule__GroupByColumns__Group_1_1__1 : rule__GroupByColumns__Group_1_1__1__Impl ;
    public final void rule__GroupByColumns__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12023:1: ( rule__GroupByColumns__Group_1_1__1__Impl )
            // InternalSqlParser.g:12024:2: rule__GroupByColumns__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1"


    // $ANTLR start "rule__GroupByColumns__Group_1_1__1__Impl"
    // InternalSqlParser.g:12030:1: rule__GroupByColumns__Group_1_1__1__Impl : ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__GroupByColumns__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12034:1: ( ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:12035:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:12035:1: ( ( rule__GroupByColumns__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:12036:1: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:12037:1: ( rule__GroupByColumns__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:12037:2: rule__GroupByColumns__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__GroupByColumns__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__Group_1_1__1__Impl"


    // $ANTLR start "rule__FullExpression__Group__0"
    // InternalSqlParser.g:12051:1: rule__FullExpression__Group__0 : rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 ;
    public final void rule__FullExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12055:1: ( rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1 )
            // InternalSqlParser.g:12056:2: rule__FullExpression__Group__0__Impl rule__FullExpression__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__FullExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0"


    // $ANTLR start "rule__FullExpression__Group__0__Impl"
    // InternalSqlParser.g:12063:1: rule__FullExpression__Group__0__Impl : ( ruleExpressionFragment ) ;
    public final void rule__FullExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12067:1: ( ( ruleExpressionFragment ) )
            // InternalSqlParser.g:12068:1: ( ruleExpressionFragment )
            {
            // InternalSqlParser.g:12068:1: ( ruleExpressionFragment )
            // InternalSqlParser.g:12069:1: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getExpressionFragmentParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__0__Impl"


    // $ANTLR start "rule__FullExpression__Group__1"
    // InternalSqlParser.g:12080:1: rule__FullExpression__Group__1 : rule__FullExpression__Group__1__Impl ;
    public final void rule__FullExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12084:1: ( rule__FullExpression__Group__1__Impl )
            // InternalSqlParser.g:12085:2: rule__FullExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1"


    // $ANTLR start "rule__FullExpression__Group__1__Impl"
    // InternalSqlParser.g:12091:1: rule__FullExpression__Group__1__Impl : ( ( rule__FullExpression__Group_1__0 )? ) ;
    public final void rule__FullExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12095:1: ( ( ( rule__FullExpression__Group_1__0 )? ) )
            // InternalSqlParser.g:12096:1: ( ( rule__FullExpression__Group_1__0 )? )
            {
            // InternalSqlParser.g:12096:1: ( ( rule__FullExpression__Group_1__0 )? )
            // InternalSqlParser.g:12097:1: ( rule__FullExpression__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:12098:1: ( rule__FullExpression__Group_1__0 )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==AND||LA111_0==OR||LA111_0==RULE_JRNPARAM) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalSqlParser.g:12098:2: rule__FullExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FullExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group__1__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__0"
    // InternalSqlParser.g:12112:1: rule__FullExpression__Group_1__0 : rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 ;
    public final void rule__FullExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12116:1: ( rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1 )
            // InternalSqlParser.g:12117:2: rule__FullExpression__Group_1__0__Impl rule__FullExpression__Group_1__1
            {
            pushFollow(FOLLOW_51);
            rule__FullExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0"


    // $ANTLR start "rule__FullExpression__Group_1__0__Impl"
    // InternalSqlParser.g:12124:1: rule__FullExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__FullExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12128:1: ( ( () ) )
            // InternalSqlParser.g:12129:1: ( () )
            {
            // InternalSqlParser.g:12129:1: ( () )
            // InternalSqlParser.g:12130:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:12131:1: ()
            // InternalSqlParser.g:12133:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getOrExprEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__0__Impl"


    // $ANTLR start "rule__FullExpression__Group_1__1"
    // InternalSqlParser.g:12143:1: rule__FullExpression__Group_1__1 : rule__FullExpression__Group_1__1__Impl ;
    public final void rule__FullExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12147:1: ( rule__FullExpression__Group_1__1__Impl )
            // InternalSqlParser.g:12148:2: rule__FullExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FullExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1"


    // $ANTLR start "rule__FullExpression__Group_1__1__Impl"
    // InternalSqlParser.g:12154:1: rule__FullExpression__Group_1__1__Impl : ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__FullExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12158:1: ( ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) ) )
            // InternalSqlParser.g:12159:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            {
            // InternalSqlParser.g:12159:1: ( ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* ) )
            // InternalSqlParser.g:12160:1: ( ( rule__FullExpression__EntriesAssignment_1_1 ) ) ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            {
            // InternalSqlParser.g:12160:1: ( ( rule__FullExpression__EntriesAssignment_1_1 ) )
            // InternalSqlParser.g:12161:1: ( rule__FullExpression__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSqlParser.g:12162:1: ( rule__FullExpression__EntriesAssignment_1_1 )
            // InternalSqlParser.g:12162:2: rule__FullExpression__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_52);
            rule__FullExpression__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSqlParser.g:12165:1: ( ( rule__FullExpression__EntriesAssignment_1_1 )* )
            // InternalSqlParser.g:12166:1: ( rule__FullExpression__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSqlParser.g:12167:1: ( rule__FullExpression__EntriesAssignment_1_1 )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==AND||LA112_0==OR||LA112_0==RULE_JRNPARAM) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalSqlParser.g:12167:2: rule__FullExpression__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_52);
            	    rule__FullExpression__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__Group_1__1__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0"
    // InternalSqlParser.g:12182:1: rule__ExpressionFragmentSecond__Group_0__0 : rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 ;
    public final void rule__ExpressionFragmentSecond__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12186:1: ( rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1 )
            // InternalSqlParser.g:12187:2: rule__ExpressionFragmentSecond__Group_0__0__Impl rule__ExpressionFragmentSecond__Group_0__1
            {
            pushFollow(FOLLOW_24);
            rule__ExpressionFragmentSecond__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__0__Impl"
    // InternalSqlParser.g:12194:1: rule__ExpressionFragmentSecond__Group_0__0__Impl : ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12198:1: ( ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) ) )
            // InternalSqlParser.g:12199:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            {
            // InternalSqlParser.g:12199:1: ( ( rule__ExpressionFragmentSecond__CAssignment_0_0 ) )
            // InternalSqlParser.g:12200:1: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }
            // InternalSqlParser.g:12201:1: ( rule__ExpressionFragmentSecond__CAssignment_0_0 )
            // InternalSqlParser.g:12201:2: rule__ExpressionFragmentSecond__CAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__0__Impl"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1"
    // InternalSqlParser.g:12211:1: rule__ExpressionFragmentSecond__Group_0__1 : rule__ExpressionFragmentSecond__Group_0__1__Impl ;
    public final void rule__ExpressionFragmentSecond__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12215:1: ( rule__ExpressionFragmentSecond__Group_0__1__Impl )
            // InternalSqlParser.g:12216:2: rule__ExpressionFragmentSecond__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1"


    // $ANTLR start "rule__ExpressionFragmentSecond__Group_0__1__Impl"
    // InternalSqlParser.g:12222:1: rule__ExpressionFragmentSecond__Group_0__1__Impl : ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) ;
    public final void rule__ExpressionFragmentSecond__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12226:1: ( ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) ) )
            // InternalSqlParser.g:12227:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            {
            // InternalSqlParser.g:12227:1: ( ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 ) )
            // InternalSqlParser.g:12228:1: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }
            // InternalSqlParser.g:12229:1: ( rule__ExpressionFragmentSecond__EfragAssignment_0_1 )
            // InternalSqlParser.g:12229:2: rule__ExpressionFragmentSecond__EfragAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__EfragAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__Group_0__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__0"
    // InternalSqlParser.g:12243:1: rule__ExpressionGroup__Group__0 : rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 ;
    public final void rule__ExpressionGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12247:1: ( rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1 )
            // InternalSqlParser.g:12248:2: rule__ExpressionGroup__Group__0__Impl rule__ExpressionGroup__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__ExpressionGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0"


    // $ANTLR start "rule__ExpressionGroup__Group__0__Impl"
    // InternalSqlParser.g:12255:1: rule__ExpressionGroup__Group__0__Impl : ( () ) ;
    public final void rule__ExpressionGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12259:1: ( ( () ) )
            // InternalSqlParser.g:12260:1: ( () )
            {
            // InternalSqlParser.g:12260:1: ( () )
            // InternalSqlParser.g:12261:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }
            // InternalSqlParser.g:12262:1: ()
            // InternalSqlParser.g:12264:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprGroupAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__0__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__1"
    // InternalSqlParser.g:12274:1: rule__ExpressionGroup__Group__1 : rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 ;
    public final void rule__ExpressionGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12278:1: ( rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2 )
            // InternalSqlParser.g:12279:2: rule__ExpressionGroup__Group__1__Impl rule__ExpressionGroup__Group__2
            {
            pushFollow(FOLLOW_53);
            rule__ExpressionGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1"


    // $ANTLR start "rule__ExpressionGroup__Group__1__Impl"
    // InternalSqlParser.g:12286:1: rule__ExpressionGroup__Group__1__Impl : ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) ;
    public final void rule__ExpressionGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12290:1: ( ( ( rule__ExpressionGroup__IsnotAssignment_1 )? ) )
            // InternalSqlParser.g:12291:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            {
            // InternalSqlParser.g:12291:1: ( ( rule__ExpressionGroup__IsnotAssignment_1 )? )
            // InternalSqlParser.g:12292:1: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }
            // InternalSqlParser.g:12293:1: ( rule__ExpressionGroup__IsnotAssignment_1 )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==NOT_1||LA113_0==NOT) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSqlParser.g:12293:2: rule__ExpressionGroup__IsnotAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ExpressionGroup__IsnotAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__1__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__2"
    // InternalSqlParser.g:12303:1: rule__ExpressionGroup__Group__2 : rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 ;
    public final void rule__ExpressionGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12307:1: ( rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3 )
            // InternalSqlParser.g:12308:2: rule__ExpressionGroup__Group__2__Impl rule__ExpressionGroup__Group__3
            {
            pushFollow(FOLLOW_24);
            rule__ExpressionGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2"


    // $ANTLR start "rule__ExpressionGroup__Group__2__Impl"
    // InternalSqlParser.g:12315:1: rule__ExpressionGroup__Group__2__Impl : ( LeftParenthesis ) ;
    public final void rule__ExpressionGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12319:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:12320:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:12320:1: ( LeftParenthesis )
            // InternalSqlParser.g:12321:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__2__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__3"
    // InternalSqlParser.g:12334:1: rule__ExpressionGroup__Group__3 : rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 ;
    public final void rule__ExpressionGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12338:1: ( rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4 )
            // InternalSqlParser.g:12339:2: rule__ExpressionGroup__Group__3__Impl rule__ExpressionGroup__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__ExpressionGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3"


    // $ANTLR start "rule__ExpressionGroup__Group__3__Impl"
    // InternalSqlParser.g:12346:1: rule__ExpressionGroup__Group__3__Impl : ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) ;
    public final void rule__ExpressionGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12350:1: ( ( ( rule__ExpressionGroup__ExprAssignment_3 ) ) )
            // InternalSqlParser.g:12351:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            {
            // InternalSqlParser.g:12351:1: ( ( rule__ExpressionGroup__ExprAssignment_3 ) )
            // InternalSqlParser.g:12352:1: ( rule__ExpressionGroup__ExprAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }
            // InternalSqlParser.g:12353:1: ( rule__ExpressionGroup__ExprAssignment_3 )
            // InternalSqlParser.g:12353:2: rule__ExpressionGroup__ExprAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__ExprAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__3__Impl"


    // $ANTLR start "rule__ExpressionGroup__Group__4"
    // InternalSqlParser.g:12363:1: rule__ExpressionGroup__Group__4 : rule__ExpressionGroup__Group__4__Impl ;
    public final void rule__ExpressionGroup__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12367:1: ( rule__ExpressionGroup__Group__4__Impl )
            // InternalSqlParser.g:12368:2: rule__ExpressionGroup__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4"


    // $ANTLR start "rule__ExpressionGroup__Group__4__Impl"
    // InternalSqlParser.g:12374:1: rule__ExpressionGroup__Group__4__Impl : ( RightParenthesis ) ;
    public final void rule__ExpressionGroup__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12378:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:12379:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:12379:1: ( RightParenthesis )
            // InternalSqlParser.g:12380:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__0"
    // InternalSqlParser.g:12403:1: rule__XExpression__Group__0 : rule__XExpression__Group__0__Impl rule__XExpression__Group__1 ;
    public final void rule__XExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12407:1: ( rule__XExpression__Group__0__Impl rule__XExpression__Group__1 )
            // InternalSqlParser.g:12408:2: rule__XExpression__Group__0__Impl rule__XExpression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__XExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0"


    // $ANTLR start "rule__XExpression__Group__0__Impl"
    // InternalSqlParser.g:12415:1: rule__XExpression__Group__0__Impl : ( X ) ;
    public final void rule__XExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12419:1: ( ( X ) )
            // InternalSqlParser.g:12420:1: ( X )
            {
            // InternalSqlParser.g:12420:1: ( X )
            // InternalSqlParser.g:12421:1: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__0__Impl"


    // $ANTLR start "rule__XExpression__Group__1"
    // InternalSqlParser.g:12434:1: rule__XExpression__Group__1 : rule__XExpression__Group__1__Impl rule__XExpression__Group__2 ;
    public final void rule__XExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12438:1: ( rule__XExpression__Group__1__Impl rule__XExpression__Group__2 )
            // InternalSqlParser.g:12439:2: rule__XExpression__Group__1__Impl rule__XExpression__Group__2
            {
            pushFollow(FOLLOW_54);
            rule__XExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1"


    // $ANTLR start "rule__XExpression__Group__1__Impl"
    // InternalSqlParser.g:12446:1: rule__XExpression__Group__1__Impl : ( () ) ;
    public final void rule__XExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12450:1: ( ( () ) )
            // InternalSqlParser.g:12451:1: ( () )
            {
            // InternalSqlParser.g:12451:1: ( () )
            // InternalSqlParser.g:12452:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }
            // InternalSqlParser.g:12453:1: ()
            // InternalSqlParser.g:12455:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__1__Impl"


    // $ANTLR start "rule__XExpression__Group__2"
    // InternalSqlParser.g:12465:1: rule__XExpression__Group__2 : rule__XExpression__Group__2__Impl rule__XExpression__Group__3 ;
    public final void rule__XExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12469:1: ( rule__XExpression__Group__2__Impl rule__XExpression__Group__3 )
            // InternalSqlParser.g:12470:2: rule__XExpression__Group__2__Impl rule__XExpression__Group__3
            {
            pushFollow(FOLLOW_8);
            rule__XExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2"


    // $ANTLR start "rule__XExpression__Group__2__Impl"
    // InternalSqlParser.g:12477:1: rule__XExpression__Group__2__Impl : ( ( rule__XExpression__XfAssignment_2 ) ) ;
    public final void rule__XExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12481:1: ( ( ( rule__XExpression__XfAssignment_2 ) ) )
            // InternalSqlParser.g:12482:1: ( ( rule__XExpression__XfAssignment_2 ) )
            {
            // InternalSqlParser.g:12482:1: ( ( rule__XExpression__XfAssignment_2 ) )
            // InternalSqlParser.g:12483:1: ( rule__XExpression__XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }
            // InternalSqlParser.g:12484:1: ( rule__XExpression__XfAssignment_2 )
            // InternalSqlParser.g:12484:2: rule__XExpression__XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__2__Impl"


    // $ANTLR start "rule__XExpression__Group__3"
    // InternalSqlParser.g:12494:1: rule__XExpression__Group__3 : rule__XExpression__Group__3__Impl rule__XExpression__Group__4 ;
    public final void rule__XExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12498:1: ( rule__XExpression__Group__3__Impl rule__XExpression__Group__4 )
            // InternalSqlParser.g:12499:2: rule__XExpression__Group__3__Impl rule__XExpression__Group__4
            {
            pushFollow(FOLLOW_55);
            rule__XExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3"


    // $ANTLR start "rule__XExpression__Group__3__Impl"
    // InternalSqlParser.g:12506:1: rule__XExpression__Group__3__Impl : ( Comma ) ;
    public final void rule__XExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12510:1: ( ( Comma ) )
            // InternalSqlParser.g:12511:1: ( Comma )
            {
            // InternalSqlParser.g:12511:1: ( Comma )
            // InternalSqlParser.g:12512:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__3__Impl"


    // $ANTLR start "rule__XExpression__Group__4"
    // InternalSqlParser.g:12525:1: rule__XExpression__Group__4 : rule__XExpression__Group__4__Impl rule__XExpression__Group__5 ;
    public final void rule__XExpression__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12529:1: ( rule__XExpression__Group__4__Impl rule__XExpression__Group__5 )
            // InternalSqlParser.g:12530:2: rule__XExpression__Group__4__Impl rule__XExpression__Group__5
            {
            pushFollow(FOLLOW_56);
            rule__XExpression__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4"


    // $ANTLR start "rule__XExpression__Group__4__Impl"
    // InternalSqlParser.g:12537:1: rule__XExpression__Group__4__Impl : ( ( rule__XExpression__ColAssignment_4 ) ) ;
    public final void rule__XExpression__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12541:1: ( ( ( rule__XExpression__ColAssignment_4 ) ) )
            // InternalSqlParser.g:12542:1: ( ( rule__XExpression__ColAssignment_4 ) )
            {
            // InternalSqlParser.g:12542:1: ( ( rule__XExpression__ColAssignment_4 ) )
            // InternalSqlParser.g:12543:1: ( rule__XExpression__ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }
            // InternalSqlParser.g:12544:1: ( rule__XExpression__ColAssignment_4 )
            // InternalSqlParser.g:12544:2: rule__XExpression__ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__4__Impl"


    // $ANTLR start "rule__XExpression__Group__5"
    // InternalSqlParser.g:12554:1: rule__XExpression__Group__5 : rule__XExpression__Group__5__Impl rule__XExpression__Group__6 ;
    public final void rule__XExpression__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12558:1: ( rule__XExpression__Group__5__Impl rule__XExpression__Group__6 )
            // InternalSqlParser.g:12559:2: rule__XExpression__Group__5__Impl rule__XExpression__Group__6
            {
            pushFollow(FOLLOW_56);
            rule__XExpression__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5"


    // $ANTLR start "rule__XExpression__Group__5__Impl"
    // InternalSqlParser.g:12566:1: rule__XExpression__Group__5__Impl : ( ( rule__XExpression__Group_5__0 )? ) ;
    public final void rule__XExpression__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12570:1: ( ( ( rule__XExpression__Group_5__0 )? ) )
            // InternalSqlParser.g:12571:1: ( ( rule__XExpression__Group_5__0 )? )
            {
            // InternalSqlParser.g:12571:1: ( ( rule__XExpression__Group_5__0 )? )
            // InternalSqlParser.g:12572:1: ( rule__XExpression__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }
            // InternalSqlParser.g:12573:1: ( rule__XExpression__Group_5__0 )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==Comma) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSqlParser.g:12573:2: rule__XExpression__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__5__Impl"


    // $ANTLR start "rule__XExpression__Group__6"
    // InternalSqlParser.g:12583:1: rule__XExpression__Group__6 : rule__XExpression__Group__6__Impl ;
    public final void rule__XExpression__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12587:1: ( rule__XExpression__Group__6__Impl )
            // InternalSqlParser.g:12588:2: rule__XExpression__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6"


    // $ANTLR start "rule__XExpression__Group__6__Impl"
    // InternalSqlParser.g:12594:1: rule__XExpression__Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12598:1: ( ( RightCurlyBracket ) )
            // InternalSqlParser.g:12599:1: ( RightCurlyBracket )
            {
            // InternalSqlParser.g:12599:1: ( RightCurlyBracket )
            // InternalSqlParser.g:12600:1: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group__6__Impl"


    // $ANTLR start "rule__XExpression__Group_5__0"
    // InternalSqlParser.g:12627:1: rule__XExpression__Group_5__0 : rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 ;
    public final void rule__XExpression__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12631:1: ( rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1 )
            // InternalSqlParser.g:12632:2: rule__XExpression__Group_5__0__Impl rule__XExpression__Group_5__1
            {
            pushFollow(FOLLOW_37);
            rule__XExpression__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0"


    // $ANTLR start "rule__XExpression__Group_5__0__Impl"
    // InternalSqlParser.g:12639:1: rule__XExpression__Group_5__0__Impl : ( Comma ) ;
    public final void rule__XExpression__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12643:1: ( ( Comma ) )
            // InternalSqlParser.g:12644:1: ( Comma )
            {
            // InternalSqlParser.g:12644:1: ( Comma )
            // InternalSqlParser.g:12645:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getCommaKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__0__Impl"


    // $ANTLR start "rule__XExpression__Group_5__1"
    // InternalSqlParser.g:12658:1: rule__XExpression__Group_5__1 : rule__XExpression__Group_5__1__Impl ;
    public final void rule__XExpression__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12662:1: ( rule__XExpression__Group_5__1__Impl )
            // InternalSqlParser.g:12663:2: rule__XExpression__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1"


    // $ANTLR start "rule__XExpression__Group_5__1__Impl"
    // InternalSqlParser.g:12669:1: rule__XExpression__Group_5__1__Impl : ( ( rule__XExpression__PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12673:1: ( ( ( rule__XExpression__PrmAssignment_5_1 ) ) )
            // InternalSqlParser.g:12674:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            {
            // InternalSqlParser.g:12674:1: ( ( rule__XExpression__PrmAssignment_5_1 ) )
            // InternalSqlParser.g:12675:1: ( rule__XExpression__PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }
            // InternalSqlParser.g:12676:1: ( rule__XExpression__PrmAssignment_5_1 )
            // InternalSqlParser.g:12676:2: rule__XExpression__PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression__PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__Group_5__1__Impl"


    // $ANTLR start "rule__XExpression___Group__0"
    // InternalSqlParser.g:12690:1: rule__XExpression___Group__0 : rule__XExpression___Group__0__Impl rule__XExpression___Group__1 ;
    public final void rule__XExpression___Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12694:1: ( rule__XExpression___Group__0__Impl rule__XExpression___Group__1 )
            // InternalSqlParser.g:12695:2: rule__XExpression___Group__0__Impl rule__XExpression___Group__1
            {
            pushFollow(FOLLOW_54);
            rule__XExpression___Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0"


    // $ANTLR start "rule__XExpression___Group__0__Impl"
    // InternalSqlParser.g:12702:1: rule__XExpression___Group__0__Impl : ( X ) ;
    public final void rule__XExpression___Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12706:1: ( ( X ) )
            // InternalSqlParser.g:12707:1: ( X )
            {
            // InternalSqlParser.g:12707:1: ( X )
            // InternalSqlParser.g:12708:1: X
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }
            match(input,X,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__0__Impl"


    // $ANTLR start "rule__XExpression___Group__1"
    // InternalSqlParser.g:12721:1: rule__XExpression___Group__1 : rule__XExpression___Group__1__Impl rule__XExpression___Group__2 ;
    public final void rule__XExpression___Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12725:1: ( rule__XExpression___Group__1__Impl rule__XExpression___Group__2 )
            // InternalSqlParser.g:12726:2: rule__XExpression___Group__1__Impl rule__XExpression___Group__2
            {
            pushFollow(FOLLOW_54);
            rule__XExpression___Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1"


    // $ANTLR start "rule__XExpression___Group__1__Impl"
    // InternalSqlParser.g:12733:1: rule__XExpression___Group__1__Impl : ( () ) ;
    public final void rule__XExpression___Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12737:1: ( ( () ) )
            // InternalSqlParser.g:12738:1: ( () )
            {
            // InternalSqlParser.g:12738:1: ( () )
            // InternalSqlParser.g:12739:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }
            // InternalSqlParser.g:12740:1: ()
            // InternalSqlParser.g:12742:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXExprAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__1__Impl"


    // $ANTLR start "rule__XExpression___Group__2"
    // InternalSqlParser.g:12752:1: rule__XExpression___Group__2 : rule__XExpression___Group__2__Impl rule__XExpression___Group__3 ;
    public final void rule__XExpression___Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12756:1: ( rule__XExpression___Group__2__Impl rule__XExpression___Group__3 )
            // InternalSqlParser.g:12757:2: rule__XExpression___Group__2__Impl rule__XExpression___Group__3
            {
            pushFollow(FOLLOW_57);
            rule__XExpression___Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2"


    // $ANTLR start "rule__XExpression___Group__2__Impl"
    // InternalSqlParser.g:12764:1: rule__XExpression___Group__2__Impl : ( ( rule__XExpression___XfAssignment_2 ) ) ;
    public final void rule__XExpression___Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12768:1: ( ( ( rule__XExpression___XfAssignment_2 ) ) )
            // InternalSqlParser.g:12769:1: ( ( rule__XExpression___XfAssignment_2 ) )
            {
            // InternalSqlParser.g:12769:1: ( ( rule__XExpression___XfAssignment_2 ) )
            // InternalSqlParser.g:12770:1: ( rule__XExpression___XfAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }
            // InternalSqlParser.g:12771:1: ( rule__XExpression___XfAssignment_2 )
            // InternalSqlParser.g:12771:2: rule__XExpression___XfAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___XfAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__2__Impl"


    // $ANTLR start "rule__XExpression___Group__3"
    // InternalSqlParser.g:12781:1: rule__XExpression___Group__3 : rule__XExpression___Group__3__Impl rule__XExpression___Group__4 ;
    public final void rule__XExpression___Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12785:1: ( rule__XExpression___Group__3__Impl rule__XExpression___Group__4 )
            // InternalSqlParser.g:12786:2: rule__XExpression___Group__3__Impl rule__XExpression___Group__4
            {
            pushFollow(FOLLOW_55);
            rule__XExpression___Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3"


    // $ANTLR start "rule__XExpression___Group__3__Impl"
    // InternalSqlParser.g:12793:1: rule__XExpression___Group__3__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12797:1: ( ( VerticalLine ) )
            // InternalSqlParser.g:12798:1: ( VerticalLine )
            {
            // InternalSqlParser.g:12798:1: ( VerticalLine )
            // InternalSqlParser.g:12799:1: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__3__Impl"


    // $ANTLR start "rule__XExpression___Group__4"
    // InternalSqlParser.g:12812:1: rule__XExpression___Group__4 : rule__XExpression___Group__4__Impl rule__XExpression___Group__5 ;
    public final void rule__XExpression___Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12816:1: ( rule__XExpression___Group__4__Impl rule__XExpression___Group__5 )
            // InternalSqlParser.g:12817:2: rule__XExpression___Group__4__Impl rule__XExpression___Group__5
            {
            pushFollow(FOLLOW_58);
            rule__XExpression___Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4"


    // $ANTLR start "rule__XExpression___Group__4__Impl"
    // InternalSqlParser.g:12824:1: rule__XExpression___Group__4__Impl : ( ( rule__XExpression___ColAssignment_4 ) ) ;
    public final void rule__XExpression___Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12828:1: ( ( ( rule__XExpression___ColAssignment_4 ) ) )
            // InternalSqlParser.g:12829:1: ( ( rule__XExpression___ColAssignment_4 ) )
            {
            // InternalSqlParser.g:12829:1: ( ( rule__XExpression___ColAssignment_4 ) )
            // InternalSqlParser.g:12830:1: ( rule__XExpression___ColAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }
            // InternalSqlParser.g:12831:1: ( rule__XExpression___ColAssignment_4 )
            // InternalSqlParser.g:12831:2: rule__XExpression___ColAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___ColAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__4__Impl"


    // $ANTLR start "rule__XExpression___Group__5"
    // InternalSqlParser.g:12841:1: rule__XExpression___Group__5 : rule__XExpression___Group__5__Impl rule__XExpression___Group__6 ;
    public final void rule__XExpression___Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12845:1: ( rule__XExpression___Group__5__Impl rule__XExpression___Group__6 )
            // InternalSqlParser.g:12846:2: rule__XExpression___Group__5__Impl rule__XExpression___Group__6
            {
            pushFollow(FOLLOW_58);
            rule__XExpression___Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5"


    // $ANTLR start "rule__XExpression___Group__5__Impl"
    // InternalSqlParser.g:12853:1: rule__XExpression___Group__5__Impl : ( ( rule__XExpression___Group_5__0 )? ) ;
    public final void rule__XExpression___Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12857:1: ( ( ( rule__XExpression___Group_5__0 )? ) )
            // InternalSqlParser.g:12858:1: ( ( rule__XExpression___Group_5__0 )? )
            {
            // InternalSqlParser.g:12858:1: ( ( rule__XExpression___Group_5__0 )? )
            // InternalSqlParser.g:12859:1: ( rule__XExpression___Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getGroup_5()); 
            }
            // InternalSqlParser.g:12860:1: ( rule__XExpression___Group_5__0 )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==VerticalLine) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSqlParser.g:12860:2: rule__XExpression___Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpression___Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__5__Impl"


    // $ANTLR start "rule__XExpression___Group__6"
    // InternalSqlParser.g:12870:1: rule__XExpression___Group__6 : rule__XExpression___Group__6__Impl ;
    public final void rule__XExpression___Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12874:1: ( rule__XExpression___Group__6__Impl )
            // InternalSqlParser.g:12875:2: rule__XExpression___Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6"


    // $ANTLR start "rule__XExpression___Group__6__Impl"
    // InternalSqlParser.g:12881:1: rule__XExpression___Group__6__Impl : ( RightCurlyBracket ) ;
    public final void rule__XExpression___Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12885:1: ( ( RightCurlyBracket ) )
            // InternalSqlParser.g:12886:1: ( RightCurlyBracket )
            {
            // InternalSqlParser.g:12886:1: ( RightCurlyBracket )
            // InternalSqlParser.g:12887:1: RightCurlyBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }
            match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group__6__Impl"


    // $ANTLR start "rule__XExpression___Group_5__0"
    // InternalSqlParser.g:12914:1: rule__XExpression___Group_5__0 : rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 ;
    public final void rule__XExpression___Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12918:1: ( rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1 )
            // InternalSqlParser.g:12919:2: rule__XExpression___Group_5__0__Impl rule__XExpression___Group_5__1
            {
            pushFollow(FOLLOW_37);
            rule__XExpression___Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0"


    // $ANTLR start "rule__XExpression___Group_5__0__Impl"
    // InternalSqlParser.g:12926:1: rule__XExpression___Group_5__0__Impl : ( VerticalLine ) ;
    public final void rule__XExpression___Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12930:1: ( ( VerticalLine ) )
            // InternalSqlParser.g:12931:1: ( VerticalLine )
            {
            // InternalSqlParser.g:12931:1: ( VerticalLine )
            // InternalSqlParser.g:12932:1: VerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }
            match(input,VerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getVerticalLineKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__0__Impl"


    // $ANTLR start "rule__XExpression___Group_5__1"
    // InternalSqlParser.g:12945:1: rule__XExpression___Group_5__1 : rule__XExpression___Group_5__1__Impl ;
    public final void rule__XExpression___Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12949:1: ( rule__XExpression___Group_5__1__Impl )
            // InternalSqlParser.g:12950:2: rule__XExpression___Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1"


    // $ANTLR start "rule__XExpression___Group_5__1__Impl"
    // InternalSqlParser.g:12956:1: rule__XExpression___Group_5__1__Impl : ( ( rule__XExpression___PrmAssignment_5_1 ) ) ;
    public final void rule__XExpression___Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12960:1: ( ( ( rule__XExpression___PrmAssignment_5_1 ) ) )
            // InternalSqlParser.g:12961:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            {
            // InternalSqlParser.g:12961:1: ( ( rule__XExpression___PrmAssignment_5_1 ) )
            // InternalSqlParser.g:12962:1: ( rule__XExpression___PrmAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }
            // InternalSqlParser.g:12963:1: ( rule__XExpression___PrmAssignment_5_1 )
            // InternalSqlParser.g:12963:2: rule__XExpression___PrmAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpression___PrmAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___Group_5__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__0"
    // InternalSqlParser.g:12977:1: rule__XExpressionParams__Group__0 : rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 ;
    public final void rule__XExpressionParams__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12981:1: ( rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1 )
            // InternalSqlParser.g:12982:2: rule__XExpressionParams__Group__0__Impl rule__XExpressionParams__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__XExpressionParams__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0"


    // $ANTLR start "rule__XExpressionParams__Group__0__Impl"
    // InternalSqlParser.g:12989:1: rule__XExpressionParams__Group__0__Impl : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:12993:1: ( ( ruleJRParameter ) )
            // InternalSqlParser.g:12994:1: ( ruleJRParameter )
            {
            // InternalSqlParser.g:12994:1: ( ruleJRParameter )
            // InternalSqlParser.g:12995:1: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getJRParameterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group__1"
    // InternalSqlParser.g:13006:1: rule__XExpressionParams__Group__1 : rule__XExpressionParams__Group__1__Impl ;
    public final void rule__XExpressionParams__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13010:1: ( rule__XExpressionParams__Group__1__Impl )
            // InternalSqlParser.g:13011:2: rule__XExpressionParams__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1"


    // $ANTLR start "rule__XExpressionParams__Group__1__Impl"
    // InternalSqlParser.g:13017:1: rule__XExpressionParams__Group__1__Impl : ( ( rule__XExpressionParams__Group_1__0 )? ) ;
    public final void rule__XExpressionParams__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13021:1: ( ( ( rule__XExpressionParams__Group_1__0 )? ) )
            // InternalSqlParser.g:13022:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            {
            // InternalSqlParser.g:13022:1: ( ( rule__XExpressionParams__Group_1__0 )? )
            // InternalSqlParser.g:13023:1: ( rule__XExpressionParams__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:13024:1: ( rule__XExpressionParams__Group_1__0 )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==Comma) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSqlParser.g:13024:2: rule__XExpressionParams__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__XExpressionParams__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__0"
    // InternalSqlParser.g:13038:1: rule__XExpressionParams__Group_1__0 : rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 ;
    public final void rule__XExpressionParams__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13042:1: ( rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1 )
            // InternalSqlParser.g:13043:2: rule__XExpressionParams__Group_1__0__Impl rule__XExpressionParams__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__XExpressionParams__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1__0__Impl"
    // InternalSqlParser.g:13050:1: rule__XExpressionParams__Group_1__0__Impl : ( () ) ;
    public final void rule__XExpressionParams__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13054:1: ( ( () ) )
            // InternalSqlParser.g:13055:1: ( () )
            {
            // InternalSqlParser.g:13055:1: ( () )
            // InternalSqlParser.g:13056:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:13057:1: ()
            // InternalSqlParser.g:13059:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getPrmsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1__1"
    // InternalSqlParser.g:13069:1: rule__XExpressionParams__Group_1__1 : rule__XExpressionParams__Group_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13073:1: ( rule__XExpressionParams__Group_1__1__Impl )
            // InternalSqlParser.g:13074:2: rule__XExpressionParams__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1__1__Impl"
    // InternalSqlParser.g:13080:1: rule__XExpressionParams__Group_1__1__Impl : ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) ;
    public final void rule__XExpressionParams__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13084:1: ( ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:13085:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:13085:1: ( ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* ) )
            // InternalSqlParser.g:13086:1: ( ( rule__XExpressionParams__Group_1_1__0 ) ) ( ( rule__XExpressionParams__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:13086:1: ( ( rule__XExpressionParams__Group_1_1__0 ) )
            // InternalSqlParser.g:13087:1: ( rule__XExpressionParams__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:13088:1: ( rule__XExpressionParams__Group_1_1__0 )
            // InternalSqlParser.g:13088:2: rule__XExpressionParams__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__XExpressionParams__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:13091:1: ( ( rule__XExpressionParams__Group_1_1__0 )* )
            // InternalSqlParser.g:13092:1: ( rule__XExpressionParams__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:13093:1: ( rule__XExpressionParams__Group_1_1__0 )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==Comma) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalSqlParser.g:13093:2: rule__XExpressionParams__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__XExpressionParams__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1__1__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0"
    // InternalSqlParser.g:13108:1: rule__XExpressionParams__Group_1_1__0 : rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 ;
    public final void rule__XExpressionParams__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13112:1: ( rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1 )
            // InternalSqlParser.g:13113:2: rule__XExpressionParams__Group_1_1__0__Impl rule__XExpressionParams__Group_1_1__1
            {
            pushFollow(FOLLOW_37);
            rule__XExpressionParams__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__0__Impl"
    // InternalSqlParser.g:13120:1: rule__XExpressionParams__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__XExpressionParams__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13124:1: ( ( Comma ) )
            // InternalSqlParser.g:13125:1: ( Comma )
            {
            // InternalSqlParser.g:13125:1: ( Comma )
            // InternalSqlParser.g:13126:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__0__Impl"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1"
    // InternalSqlParser.g:13139:1: rule__XExpressionParams__Group_1_1__1 : rule__XExpressionParams__Group_1_1__1__Impl ;
    public final void rule__XExpressionParams__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13143:1: ( rule__XExpressionParams__Group_1_1__1__Impl )
            // InternalSqlParser.g:13144:2: rule__XExpressionParams__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1"


    // $ANTLR start "rule__XExpressionParams__Group_1_1__1__Impl"
    // InternalSqlParser.g:13150:1: rule__XExpressionParams__Group_1_1__1__Impl : ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__XExpressionParams__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13154:1: ( ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:13155:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:13155:1: ( ( rule__XExpressionParams__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:13156:1: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:13157:1: ( rule__XExpressionParams__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:13157:2: rule__XExpressionParams__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__XExpressionParams__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__Group_1_1__1__Impl"


    // $ANTLR start "rule__Expression__Group__0"
    // InternalSqlParser.g:13171:1: rule__Expression__Group__0 : rule__Expression__Group__0__Impl rule__Expression__Group__1 ;
    public final void rule__Expression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13175:1: ( rule__Expression__Group__0__Impl rule__Expression__Group__1 )
            // InternalSqlParser.g:13176:2: rule__Expression__Group__0__Impl rule__Expression__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__Expression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0"


    // $ANTLR start "rule__Expression__Group__0__Impl"
    // InternalSqlParser.g:13183:1: rule__Expression__Group__0__Impl : ( ( rule__Expression__Op1Assignment_0 ) ) ;
    public final void rule__Expression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13187:1: ( ( ( rule__Expression__Op1Assignment_0 ) ) )
            // InternalSqlParser.g:13188:1: ( ( rule__Expression__Op1Assignment_0 ) )
            {
            // InternalSqlParser.g:13188:1: ( ( rule__Expression__Op1Assignment_0 ) )
            // InternalSqlParser.g:13189:1: ( rule__Expression__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }
            // InternalSqlParser.g:13190:1: ( rule__Expression__Op1Assignment_0 )
            // InternalSqlParser.g:13190:2: rule__Expression__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__0__Impl"


    // $ANTLR start "rule__Expression__Group__1"
    // InternalSqlParser.g:13200:1: rule__Expression__Group__1 : rule__Expression__Group__1__Impl ;
    public final void rule__Expression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13204:1: ( rule__Expression__Group__1__Impl )
            // InternalSqlParser.g:13205:2: rule__Expression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1"


    // $ANTLR start "rule__Expression__Group__1__Impl"
    // InternalSqlParser.g:13211:1: rule__Expression__Group__1__Impl : ( ( rule__Expression__Alternatives_1 ) ) ;
    public final void rule__Expression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13215:1: ( ( ( rule__Expression__Alternatives_1 ) ) )
            // InternalSqlParser.g:13216:1: ( ( rule__Expression__Alternatives_1 ) )
            {
            // InternalSqlParser.g:13216:1: ( ( rule__Expression__Alternatives_1 ) )
            // InternalSqlParser.g:13217:1: ( rule__Expression__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:13218:1: ( rule__Expression__Alternatives_1 )
            // InternalSqlParser.g:13218:2: rule__Expression__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__0"
    // InternalSqlParser.g:13232:1: rule__IsNullValue__Group__0 : rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 ;
    public final void rule__IsNullValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13236:1: ( rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1 )
            // InternalSqlParser.g:13237:2: rule__IsNullValue__Group__0__Impl rule__IsNullValue__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__IsNullValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0"


    // $ANTLR start "rule__IsNullValue__Group__0__Impl"
    // InternalSqlParser.g:13244:1: rule__IsNullValue__Group__0__Impl : ( IS ) ;
    public final void rule__IsNullValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13248:1: ( ( IS ) )
            // InternalSqlParser.g:13249:1: ( IS )
            {
            // InternalSqlParser.g:13249:1: ( IS )
            // InternalSqlParser.g:13250:1: IS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }
            match(input,IS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getISKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__0__Impl"


    // $ANTLR start "rule__IsNullValue__Group__1"
    // InternalSqlParser.g:13263:1: rule__IsNullValue__Group__1 : rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 ;
    public final void rule__IsNullValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13267:1: ( rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2 )
            // InternalSqlParser.g:13268:2: rule__IsNullValue__Group__1__Impl rule__IsNullValue__Group__2
            {
            pushFollow(FOLLOW_60);
            rule__IsNullValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1"


    // $ANTLR start "rule__IsNullValue__Group__1__Impl"
    // InternalSqlParser.g:13275:1: rule__IsNullValue__Group__1__Impl : ( ( NOT )? ) ;
    public final void rule__IsNullValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13279:1: ( ( ( NOT )? ) )
            // InternalSqlParser.g:13280:1: ( ( NOT )? )
            {
            // InternalSqlParser.g:13280:1: ( ( NOT )? )
            // InternalSqlParser.g:13281:1: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }
            // InternalSqlParser.g:13282:1: ( NOT )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==NOT) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSqlParser.g:13283:2: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNOTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__1__Impl"


    // $ANTLR start "rule__IsNullValue__Group__2"
    // InternalSqlParser.g:13294:1: rule__IsNullValue__Group__2 : rule__IsNullValue__Group__2__Impl ;
    public final void rule__IsNullValue__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13298:1: ( rule__IsNullValue__Group__2__Impl )
            // InternalSqlParser.g:13299:2: rule__IsNullValue__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IsNullValue__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2"


    // $ANTLR start "rule__IsNullValue__Group__2__Impl"
    // InternalSqlParser.g:13305:1: rule__IsNullValue__Group__2__Impl : ( NULL ) ;
    public final void rule__IsNullValue__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13309:1: ( ( NULL ) )
            // InternalSqlParser.g:13310:1: ( NULL )
            {
            // InternalSqlParser.g:13310:1: ( NULL )
            // InternalSqlParser.g:13311:1: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIsNullValueAccess().getNULLKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IsNullValue__Group__2__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // InternalSqlParser.g:13330:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13334:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // InternalSqlParser.g:13335:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__Comparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // InternalSqlParser.g:13342:1: rule__Comparison__Group__0__Impl : ( ( rule__Comparison__OperatorAssignment_0 ) ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13346:1: ( ( ( rule__Comparison__OperatorAssignment_0 ) ) )
            // InternalSqlParser.g:13347:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            {
            // InternalSqlParser.g:13347:1: ( ( rule__Comparison__OperatorAssignment_0 ) )
            // InternalSqlParser.g:13348:1: ( rule__Comparison__OperatorAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }
            // InternalSqlParser.g:13349:1: ( rule__Comparison__OperatorAssignment_0 )
            // InternalSqlParser.g:13349:2: rule__Comparison__OperatorAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // InternalSqlParser.g:13359:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl rule__Comparison__Group__2 ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13363:1: ( rule__Comparison__Group__1__Impl rule__Comparison__Group__2 )
            // InternalSqlParser.g:13364:2: rule__Comparison__Group__1__Impl rule__Comparison__Group__2
            {
            pushFollow(FOLLOW_61);
            rule__Comparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // InternalSqlParser.g:13371:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__SubOperatorAssignment_1 )? ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13375:1: ( ( ( rule__Comparison__SubOperatorAssignment_1 )? ) )
            // InternalSqlParser.g:13376:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            {
            // InternalSqlParser.g:13376:1: ( ( rule__Comparison__SubOperatorAssignment_1 )? )
            // InternalSqlParser.g:13377:1: ( rule__Comparison__SubOperatorAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }
            // InternalSqlParser.g:13378:1: ( rule__Comparison__SubOperatorAssignment_1 )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==SOME||LA119_0==ALL||LA119_0==ANY) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalSqlParser.g:13378:2: rule__Comparison__SubOperatorAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__Comparison__SubOperatorAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group__2"
    // InternalSqlParser.g:13388:1: rule__Comparison__Group__2 : rule__Comparison__Group__2__Impl ;
    public final void rule__Comparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13392:1: ( rule__Comparison__Group__2__Impl )
            // InternalSqlParser.g:13393:2: rule__Comparison__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2"


    // $ANTLR start "rule__Comparison__Group__2__Impl"
    // InternalSqlParser.g:13399:1: rule__Comparison__Group__2__Impl : ( ( rule__Comparison__Op2Assignment_2 ) ) ;
    public final void rule__Comparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13403:1: ( ( ( rule__Comparison__Op2Assignment_2 ) ) )
            // InternalSqlParser.g:13404:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            {
            // InternalSqlParser.g:13404:1: ( ( rule__Comparison__Op2Assignment_2 ) )
            // InternalSqlParser.g:13405:1: ( rule__Comparison__Op2Assignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }
            // InternalSqlParser.g:13406:1: ( rule__Comparison__Op2Assignment_2 )
            // InternalSqlParser.g:13406:2: rule__Comparison__Op2Assignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__Op2Assignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2Assignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__2__Impl"


    // $ANTLR start "rule__Like__Group__0"
    // InternalSqlParser.g:13422:1: rule__Like__Group__0 : rule__Like__Group__0__Impl rule__Like__Group__1 ;
    public final void rule__Like__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13426:1: ( rule__Like__Group__0__Impl rule__Like__Group__1 )
            // InternalSqlParser.g:13427:2: rule__Like__Group__0__Impl rule__Like__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__Like__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Like__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0"


    // $ANTLR start "rule__Like__Group__0__Impl"
    // InternalSqlParser.g:13434:1: rule__Like__Group__0__Impl : ( ( rule__Like__OpLikeAssignment_0 ) ) ;
    public final void rule__Like__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13438:1: ( ( ( rule__Like__OpLikeAssignment_0 ) ) )
            // InternalSqlParser.g:13439:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            {
            // InternalSqlParser.g:13439:1: ( ( rule__Like__OpLikeAssignment_0 ) )
            // InternalSqlParser.g:13440:1: ( rule__Like__OpLikeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }
            // InternalSqlParser.g:13441:1: ( rule__Like__OpLikeAssignment_0 )
            // InternalSqlParser.g:13441:2: rule__Like__OpLikeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Like__OpLikeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__0__Impl"


    // $ANTLR start "rule__Like__Group__1"
    // InternalSqlParser.g:13451:1: rule__Like__Group__1 : rule__Like__Group__1__Impl ;
    public final void rule__Like__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13455:1: ( rule__Like__Group__1__Impl )
            // InternalSqlParser.g:13456:2: rule__Like__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Like__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1"


    // $ANTLR start "rule__Like__Group__1__Impl"
    // InternalSqlParser.g:13462:1: rule__Like__Group__1__Impl : ( ( rule__Like__Op2Assignment_1 ) ) ;
    public final void rule__Like__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13466:1: ( ( ( rule__Like__Op2Assignment_1 ) ) )
            // InternalSqlParser.g:13467:1: ( ( rule__Like__Op2Assignment_1 ) )
            {
            // InternalSqlParser.g:13467:1: ( ( rule__Like__Op2Assignment_1 ) )
            // InternalSqlParser.g:13468:1: ( rule__Like__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }
            // InternalSqlParser.g:13469:1: ( rule__Like__Op2Assignment_1 )
            // InternalSqlParser.g:13469:2: rule__Like__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Like__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Group__1__Impl"


    // $ANTLR start "rule__LikeValue__Group__0"
    // InternalSqlParser.g:13483:1: rule__LikeValue__Group__0 : rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 ;
    public final void rule__LikeValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13487:1: ( rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1 )
            // InternalSqlParser.g:13488:2: rule__LikeValue__Group__0__Impl rule__LikeValue__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__LikeValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0"


    // $ANTLR start "rule__LikeValue__Group__0__Impl"
    // InternalSqlParser.g:13495:1: rule__LikeValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__LikeValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13499:1: ( ( ( NOT )? ) )
            // InternalSqlParser.g:13500:1: ( ( NOT )? )
            {
            // InternalSqlParser.g:13500:1: ( ( NOT )? )
            // InternalSqlParser.g:13501:1: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }
            // InternalSqlParser.g:13502:1: ( NOT )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==NOT) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalSqlParser.g:13503:2: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__0__Impl"


    // $ANTLR start "rule__LikeValue__Group__1"
    // InternalSqlParser.g:13514:1: rule__LikeValue__Group__1 : rule__LikeValue__Group__1__Impl ;
    public final void rule__LikeValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13518:1: ( rule__LikeValue__Group__1__Impl )
            // InternalSqlParser.g:13519:2: rule__LikeValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LikeValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1"


    // $ANTLR start "rule__LikeValue__Group__1__Impl"
    // InternalSqlParser.g:13525:1: rule__LikeValue__Group__1__Impl : ( LIKE ) ;
    public final void rule__LikeValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13529:1: ( ( LIKE ) )
            // InternalSqlParser.g:13530:1: ( LIKE )
            {
            // InternalSqlParser.g:13530:1: ( LIKE )
            // InternalSqlParser.g:13531:1: LIKE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }
            match(input,LIKE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeValueAccess().getLIKEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeValue__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__0"
    // InternalSqlParser.g:13548:1: rule__Between__Group__0 : rule__Between__Group__0__Impl rule__Between__Group__1 ;
    public final void rule__Between__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13552:1: ( rule__Between__Group__0__Impl rule__Between__Group__1 )
            // InternalSqlParser.g:13553:2: rule__Between__Group__0__Impl rule__Between__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__Between__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0"


    // $ANTLR start "rule__Between__Group__0__Impl"
    // InternalSqlParser.g:13560:1: rule__Between__Group__0__Impl : ( ( rule__Between__OpBetweenAssignment_0 ) ) ;
    public final void rule__Between__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13564:1: ( ( ( rule__Between__OpBetweenAssignment_0 ) ) )
            // InternalSqlParser.g:13565:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            {
            // InternalSqlParser.g:13565:1: ( ( rule__Between__OpBetweenAssignment_0 ) )
            // InternalSqlParser.g:13566:1: ( rule__Between__OpBetweenAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }
            // InternalSqlParser.g:13567:1: ( rule__Between__OpBetweenAssignment_0 )
            // InternalSqlParser.g:13567:2: rule__Between__OpBetweenAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Between__OpBetweenAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__0__Impl"


    // $ANTLR start "rule__Between__Group__1"
    // InternalSqlParser.g:13577:1: rule__Between__Group__1 : rule__Between__Group__1__Impl rule__Between__Group__2 ;
    public final void rule__Between__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13581:1: ( rule__Between__Group__1__Impl rule__Between__Group__2 )
            // InternalSqlParser.g:13582:2: rule__Between__Group__1__Impl rule__Between__Group__2
            {
            pushFollow(FOLLOW_64);
            rule__Between__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1"


    // $ANTLR start "rule__Between__Group__1__Impl"
    // InternalSqlParser.g:13589:1: rule__Between__Group__1__Impl : ( ( rule__Between__Op2Assignment_1 ) ) ;
    public final void rule__Between__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13593:1: ( ( ( rule__Between__Op2Assignment_1 ) ) )
            // InternalSqlParser.g:13594:1: ( ( rule__Between__Op2Assignment_1 ) )
            {
            // InternalSqlParser.g:13594:1: ( ( rule__Between__Op2Assignment_1 ) )
            // InternalSqlParser.g:13595:1: ( rule__Between__Op2Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }
            // InternalSqlParser.g:13596:1: ( rule__Between__Op2Assignment_1 )
            // InternalSqlParser.g:13596:2: rule__Between__Op2Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op2Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__1__Impl"


    // $ANTLR start "rule__Between__Group__2"
    // InternalSqlParser.g:13606:1: rule__Between__Group__2 : rule__Between__Group__2__Impl rule__Between__Group__3 ;
    public final void rule__Between__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13610:1: ( rule__Between__Group__2__Impl rule__Between__Group__3 )
            // InternalSqlParser.g:13611:2: rule__Between__Group__2__Impl rule__Between__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__Between__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Between__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2"


    // $ANTLR start "rule__Between__Group__2__Impl"
    // InternalSqlParser.g:13618:1: rule__Between__Group__2__Impl : ( AND ) ;
    public final void rule__Between__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13622:1: ( ( AND ) )
            // InternalSqlParser.g:13623:1: ( AND )
            {
            // InternalSqlParser.g:13623:1: ( AND )
            // InternalSqlParser.g:13624:1: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__2__Impl"


    // $ANTLR start "rule__Between__Group__3"
    // InternalSqlParser.g:13637:1: rule__Between__Group__3 : rule__Between__Group__3__Impl ;
    public final void rule__Between__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13641:1: ( rule__Between__Group__3__Impl )
            // InternalSqlParser.g:13642:2: rule__Between__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Between__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3"


    // $ANTLR start "rule__Between__Group__3__Impl"
    // InternalSqlParser.g:13648:1: rule__Between__Group__3__Impl : ( ( rule__Between__Op3Assignment_3 ) ) ;
    public final void rule__Between__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13652:1: ( ( ( rule__Between__Op3Assignment_3 ) ) )
            // InternalSqlParser.g:13653:1: ( ( rule__Between__Op3Assignment_3 ) )
            {
            // InternalSqlParser.g:13653:1: ( ( rule__Between__Op3Assignment_3 ) )
            // InternalSqlParser.g:13654:1: ( rule__Between__Op3Assignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }
            // InternalSqlParser.g:13655:1: ( rule__Between__Op3Assignment_3 )
            // InternalSqlParser.g:13655:2: rule__Between__Op3Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Between__Op3Assignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3Assignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Group__3__Impl"


    // $ANTLR start "rule__BetweenValue__Group__0"
    // InternalSqlParser.g:13673:1: rule__BetweenValue__Group__0 : rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 ;
    public final void rule__BetweenValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13677:1: ( rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1 )
            // InternalSqlParser.g:13678:2: rule__BetweenValue__Group__0__Impl rule__BetweenValue__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__BetweenValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0"


    // $ANTLR start "rule__BetweenValue__Group__0__Impl"
    // InternalSqlParser.g:13685:1: rule__BetweenValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__BetweenValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13689:1: ( ( ( NOT )? ) )
            // InternalSqlParser.g:13690:1: ( ( NOT )? )
            {
            // InternalSqlParser.g:13690:1: ( ( NOT )? )
            // InternalSqlParser.g:13691:1: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }
            // InternalSqlParser.g:13692:1: ( NOT )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==NOT) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSqlParser.g:13693:2: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__0__Impl"


    // $ANTLR start "rule__BetweenValue__Group__1"
    // InternalSqlParser.g:13704:1: rule__BetweenValue__Group__1 : rule__BetweenValue__Group__1__Impl ;
    public final void rule__BetweenValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13708:1: ( rule__BetweenValue__Group__1__Impl )
            // InternalSqlParser.g:13709:2: rule__BetweenValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BetweenValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1"


    // $ANTLR start "rule__BetweenValue__Group__1__Impl"
    // InternalSqlParser.g:13715:1: rule__BetweenValue__Group__1__Impl : ( BETWEEN ) ;
    public final void rule__BetweenValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13719:1: ( ( BETWEEN ) )
            // InternalSqlParser.g:13720:1: ( BETWEEN )
            {
            // InternalSqlParser.g:13720:1: ( BETWEEN )
            // InternalSqlParser.g:13721:1: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenValueAccess().getBETWEENKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BetweenValue__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__0"
    // InternalSqlParser.g:13738:1: rule__InOperator__Group__0 : rule__InOperator__Group__0__Impl rule__InOperator__Group__1 ;
    public final void rule__InOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13742:1: ( rule__InOperator__Group__0__Impl rule__InOperator__Group__1 )
            // InternalSqlParser.g:13743:2: rule__InOperator__Group__0__Impl rule__InOperator__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__InOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0"


    // $ANTLR start "rule__InOperator__Group__0__Impl"
    // InternalSqlParser.g:13750:1: rule__InOperator__Group__0__Impl : ( () ) ;
    public final void rule__InOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13754:1: ( ( () ) )
            // InternalSqlParser.g:13755:1: ( () )
            {
            // InternalSqlParser.g:13755:1: ( () )
            // InternalSqlParser.g:13756:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }
            // InternalSqlParser.g:13757:1: ()
            // InternalSqlParser.g:13759:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getInOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__0__Impl"


    // $ANTLR start "rule__InOperator__Group__1"
    // InternalSqlParser.g:13769:1: rule__InOperator__Group__1 : rule__InOperator__Group__1__Impl rule__InOperator__Group__2 ;
    public final void rule__InOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13773:1: ( rule__InOperator__Group__1__Impl rule__InOperator__Group__2 )
            // InternalSqlParser.g:13774:2: rule__InOperator__Group__1__Impl rule__InOperator__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__InOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1"


    // $ANTLR start "rule__InOperator__Group__1__Impl"
    // InternalSqlParser.g:13781:1: rule__InOperator__Group__1__Impl : ( ( rule__InOperator__OpAssignment_1 ) ) ;
    public final void rule__InOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13785:1: ( ( ( rule__InOperator__OpAssignment_1 ) ) )
            // InternalSqlParser.g:13786:1: ( ( rule__InOperator__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:13786:1: ( ( rule__InOperator__OpAssignment_1 ) )
            // InternalSqlParser.g:13787:1: ( rule__InOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSqlParser.g:13788:1: ( rule__InOperator__OpAssignment_1 )
            // InternalSqlParser.g:13788:2: rule__InOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__1__Impl"


    // $ANTLR start "rule__InOperator__Group__2"
    // InternalSqlParser.g:13798:1: rule__InOperator__Group__2 : rule__InOperator__Group__2__Impl ;
    public final void rule__InOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13802:1: ( rule__InOperator__Group__2__Impl )
            // InternalSqlParser.g:13803:2: rule__InOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2"


    // $ANTLR start "rule__InOperator__Group__2__Impl"
    // InternalSqlParser.g:13809:1: rule__InOperator__Group__2__Impl : ( ( rule__InOperator__Alternatives_2 ) ) ;
    public final void rule__InOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13813:1: ( ( ( rule__InOperator__Alternatives_2 ) ) )
            // InternalSqlParser.g:13814:1: ( ( rule__InOperator__Alternatives_2 ) )
            {
            // InternalSqlParser.g:13814:1: ( ( rule__InOperator__Alternatives_2 ) )
            // InternalSqlParser.g:13815:1: ( rule__InOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }
            // InternalSqlParser.g:13816:1: ( rule__InOperator__Alternatives_2 )
            // InternalSqlParser.g:13816:2: rule__InOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__InOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__Group__2__Impl"


    // $ANTLR start "rule__InValue__Group__0"
    // InternalSqlParser.g:13832:1: rule__InValue__Group__0 : rule__InValue__Group__0__Impl rule__InValue__Group__1 ;
    public final void rule__InValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13836:1: ( rule__InValue__Group__0__Impl rule__InValue__Group__1 )
            // InternalSqlParser.g:13837:2: rule__InValue__Group__0__Impl rule__InValue__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__InValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0"


    // $ANTLR start "rule__InValue__Group__0__Impl"
    // InternalSqlParser.g:13844:1: rule__InValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__InValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13848:1: ( ( ( NOT )? ) )
            // InternalSqlParser.g:13849:1: ( ( NOT )? )
            {
            // InternalSqlParser.g:13849:1: ( ( NOT )? )
            // InternalSqlParser.g:13850:1: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }
            // InternalSqlParser.g:13851:1: ( NOT )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==NOT) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSqlParser.g:13852:2: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__0__Impl"


    // $ANTLR start "rule__InValue__Group__1"
    // InternalSqlParser.g:13863:1: rule__InValue__Group__1 : rule__InValue__Group__1__Impl ;
    public final void rule__InValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13867:1: ( rule__InValue__Group__1__Impl )
            // InternalSqlParser.g:13868:2: rule__InValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__InValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1"


    // $ANTLR start "rule__InValue__Group__1__Impl"
    // InternalSqlParser.g:13874:1: rule__InValue__Group__1__Impl : ( IN ) ;
    public final void rule__InValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13878:1: ( ( IN ) )
            // InternalSqlParser.g:13879:1: ( IN )
            {
            // InternalSqlParser.g:13879:1: ( IN )
            // InternalSqlParser.g:13880:1: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInValueAccess().getINKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InValue__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__0"
    // InternalSqlParser.g:13897:1: rule__ExistsOperator__Group__0 : rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 ;
    public final void rule__ExistsOperator__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13901:1: ( rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1 )
            // InternalSqlParser.g:13902:2: rule__ExistsOperator__Group__0__Impl rule__ExistsOperator__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__ExistsOperator__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0"


    // $ANTLR start "rule__ExistsOperator__Group__0__Impl"
    // InternalSqlParser.g:13909:1: rule__ExistsOperator__Group__0__Impl : ( () ) ;
    public final void rule__ExistsOperator__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13913:1: ( ( () ) )
            // InternalSqlParser.g:13914:1: ( () )
            {
            // InternalSqlParser.g:13914:1: ( () )
            // InternalSqlParser.g:13915:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }
            // InternalSqlParser.g:13916:1: ()
            // InternalSqlParser.g:13918:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getExistsOperAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__0__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__1"
    // InternalSqlParser.g:13928:1: rule__ExistsOperator__Group__1 : rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 ;
    public final void rule__ExistsOperator__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13932:1: ( rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2 )
            // InternalSqlParser.g:13933:2: rule__ExistsOperator__Group__1__Impl rule__ExistsOperator__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__ExistsOperator__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1"


    // $ANTLR start "rule__ExistsOperator__Group__1__Impl"
    // InternalSqlParser.g:13940:1: rule__ExistsOperator__Group__1__Impl : ( ( rule__ExistsOperator__OpAssignment_1 ) ) ;
    public final void rule__ExistsOperator__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13944:1: ( ( ( rule__ExistsOperator__OpAssignment_1 ) ) )
            // InternalSqlParser.g:13945:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:13945:1: ( ( rule__ExistsOperator__OpAssignment_1 ) )
            // InternalSqlParser.g:13946:1: ( rule__ExistsOperator__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }
            // InternalSqlParser.g:13947:1: ( rule__ExistsOperator__OpAssignment_1 )
            // InternalSqlParser.g:13947:2: rule__ExistsOperator__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__1__Impl"


    // $ANTLR start "rule__ExistsOperator__Group__2"
    // InternalSqlParser.g:13957:1: rule__ExistsOperator__Group__2 : rule__ExistsOperator__Group__2__Impl ;
    public final void rule__ExistsOperator__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13961:1: ( rule__ExistsOperator__Group__2__Impl )
            // InternalSqlParser.g:13962:2: rule__ExistsOperator__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2"


    // $ANTLR start "rule__ExistsOperator__Group__2__Impl"
    // InternalSqlParser.g:13968:1: rule__ExistsOperator__Group__2__Impl : ( ( rule__ExistsOperator__Alternatives_2 ) ) ;
    public final void rule__ExistsOperator__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13972:1: ( ( ( rule__ExistsOperator__Alternatives_2 ) ) )
            // InternalSqlParser.g:13973:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            {
            // InternalSqlParser.g:13973:1: ( ( rule__ExistsOperator__Alternatives_2 ) )
            // InternalSqlParser.g:13974:1: ( rule__ExistsOperator__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }
            // InternalSqlParser.g:13975:1: ( rule__ExistsOperator__Alternatives_2 )
            // InternalSqlParser.g:13975:2: rule__ExistsOperator__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__ExistsOperator__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__Group__2__Impl"


    // $ANTLR start "rule__ExistsValue__Group__0"
    // InternalSqlParser.g:13991:1: rule__ExistsValue__Group__0 : rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 ;
    public final void rule__ExistsValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:13995:1: ( rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1 )
            // InternalSqlParser.g:13996:2: rule__ExistsValue__Group__0__Impl rule__ExistsValue__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__ExistsValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0"


    // $ANTLR start "rule__ExistsValue__Group__0__Impl"
    // InternalSqlParser.g:14003:1: rule__ExistsValue__Group__0__Impl : ( ( NOT )? ) ;
    public final void rule__ExistsValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14007:1: ( ( ( NOT )? ) )
            // InternalSqlParser.g:14008:1: ( ( NOT )? )
            {
            // InternalSqlParser.g:14008:1: ( ( NOT )? )
            // InternalSqlParser.g:14009:1: ( NOT )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }
            // InternalSqlParser.g:14010:1: ( NOT )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==NOT) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalSqlParser.g:14011:2: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getNOTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__0__Impl"


    // $ANTLR start "rule__ExistsValue__Group__1"
    // InternalSqlParser.g:14022:1: rule__ExistsValue__Group__1 : rule__ExistsValue__Group__1__Impl ;
    public final void rule__ExistsValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14026:1: ( rule__ExistsValue__Group__1__Impl )
            // InternalSqlParser.g:14027:2: rule__ExistsValue__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ExistsValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1"


    // $ANTLR start "rule__ExistsValue__Group__1__Impl"
    // InternalSqlParser.g:14033:1: rule__ExistsValue__Group__1__Impl : ( EXISTS ) ;
    public final void rule__ExistsValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14037:1: ( ( EXISTS ) )
            // InternalSqlParser.g:14038:1: ( EXISTS )
            {
            // InternalSqlParser.g:14038:1: ( EXISTS )
            // InternalSqlParser.g:14039:1: EXISTS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }
            match(input,EXISTS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsValueAccess().getEXISTSKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsValue__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__0"
    // InternalSqlParser.g:14056:1: rule__OperandListGroup__Group__0 : rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 ;
    public final void rule__OperandListGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14060:1: ( rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1 )
            // InternalSqlParser.g:14061:2: rule__OperandListGroup__Group__0__Impl rule__OperandListGroup__Group__1
            {
            pushFollow(FOLLOW_67);
            rule__OperandListGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0"


    // $ANTLR start "rule__OperandListGroup__Group__0__Impl"
    // InternalSqlParser.g:14068:1: rule__OperandListGroup__Group__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandListGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14072:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:14073:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:14073:1: ( LeftParenthesis )
            // InternalSqlParser.g:14074:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__0__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__1"
    // InternalSqlParser.g:14087:1: rule__OperandListGroup__Group__1 : rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 ;
    public final void rule__OperandListGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14091:1: ( rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2 )
            // InternalSqlParser.g:14092:2: rule__OperandListGroup__Group__1__Impl rule__OperandListGroup__Group__2
            {
            pushFollow(FOLLOW_7);
            rule__OperandListGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1"


    // $ANTLR start "rule__OperandListGroup__Group__1__Impl"
    // InternalSqlParser.g:14099:1: rule__OperandListGroup__Group__1__Impl : ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) ;
    public final void rule__OperandListGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14103:1: ( ( ( rule__OperandListGroup__OpGroupAssignment_1 ) ) )
            // InternalSqlParser.g:14104:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            {
            // InternalSqlParser.g:14104:1: ( ( rule__OperandListGroup__OpGroupAssignment_1 ) )
            // InternalSqlParser.g:14105:1: ( rule__OperandListGroup__OpGroupAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }
            // InternalSqlParser.g:14106:1: ( rule__OperandListGroup__OpGroupAssignment_1 )
            // InternalSqlParser.g:14106:2: rule__OperandListGroup__OpGroupAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__OpGroupAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__1__Impl"


    // $ANTLR start "rule__OperandListGroup__Group__2"
    // InternalSqlParser.g:14116:1: rule__OperandListGroup__Group__2 : rule__OperandListGroup__Group__2__Impl ;
    public final void rule__OperandListGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14120:1: ( rule__OperandListGroup__Group__2__Impl )
            // InternalSqlParser.g:14121:2: rule__OperandListGroup__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandListGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2"


    // $ANTLR start "rule__OperandListGroup__Group__2__Impl"
    // InternalSqlParser.g:14127:1: rule__OperandListGroup__Group__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandListGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14131:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:14132:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:14132:1: ( RightParenthesis )
            // InternalSqlParser.g:14133:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getRightParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__Group__2__Impl"


    // $ANTLR start "rule__OperandList__Group__0"
    // InternalSqlParser.g:14152:1: rule__OperandList__Group__0 : rule__OperandList__Group__0__Impl rule__OperandList__Group__1 ;
    public final void rule__OperandList__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14156:1: ( rule__OperandList__Group__0__Impl rule__OperandList__Group__1 )
            // InternalSqlParser.g:14157:2: rule__OperandList__Group__0__Impl rule__OperandList__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__OperandList__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0"


    // $ANTLR start "rule__OperandList__Group__0__Impl"
    // InternalSqlParser.g:14164:1: rule__OperandList__Group__0__Impl : ( ruleScalarOperand ) ;
    public final void rule__OperandList__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14168:1: ( ( ruleScalarOperand ) )
            // InternalSqlParser.g:14169:1: ( ruleScalarOperand )
            {
            // InternalSqlParser.g:14169:1: ( ruleScalarOperand )
            // InternalSqlParser.g:14170:1: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getScalarOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__0__Impl"


    // $ANTLR start "rule__OperandList__Group__1"
    // InternalSqlParser.g:14181:1: rule__OperandList__Group__1 : rule__OperandList__Group__1__Impl ;
    public final void rule__OperandList__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14185:1: ( rule__OperandList__Group__1__Impl )
            // InternalSqlParser.g:14186:2: rule__OperandList__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1"


    // $ANTLR start "rule__OperandList__Group__1__Impl"
    // InternalSqlParser.g:14192:1: rule__OperandList__Group__1__Impl : ( ( rule__OperandList__Group_1__0 )? ) ;
    public final void rule__OperandList__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14196:1: ( ( ( rule__OperandList__Group_1__0 )? ) )
            // InternalSqlParser.g:14197:1: ( ( rule__OperandList__Group_1__0 )? )
            {
            // InternalSqlParser.g:14197:1: ( ( rule__OperandList__Group_1__0 )? )
            // InternalSqlParser.g:14198:1: ( rule__OperandList__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:14199:1: ( rule__OperandList__Group_1__0 )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==Comma) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSqlParser.g:14199:2: rule__OperandList__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandList__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1__0"
    // InternalSqlParser.g:14213:1: rule__OperandList__Group_1__0 : rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 ;
    public final void rule__OperandList__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14217:1: ( rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1 )
            // InternalSqlParser.g:14218:2: rule__OperandList__Group_1__0__Impl rule__OperandList__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__OperandList__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0"


    // $ANTLR start "rule__OperandList__Group_1__0__Impl"
    // InternalSqlParser.g:14225:1: rule__OperandList__Group_1__0__Impl : ( () ) ;
    public final void rule__OperandList__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14229:1: ( ( () ) )
            // InternalSqlParser.g:14230:1: ( () )
            {
            // InternalSqlParser.g:14230:1: ( () )
            // InternalSqlParser.g:14231:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:14232:1: ()
            // InternalSqlParser.g:14234:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getOpListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1__1"
    // InternalSqlParser.g:14244:1: rule__OperandList__Group_1__1 : rule__OperandList__Group_1__1__Impl ;
    public final void rule__OperandList__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14248:1: ( rule__OperandList__Group_1__1__Impl )
            // InternalSqlParser.g:14249:2: rule__OperandList__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1"


    // $ANTLR start "rule__OperandList__Group_1__1__Impl"
    // InternalSqlParser.g:14255:1: rule__OperandList__Group_1__1__Impl : ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) ;
    public final void rule__OperandList__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14259:1: ( ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:14260:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:14260:1: ( ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* ) )
            // InternalSqlParser.g:14261:1: ( ( rule__OperandList__Group_1_1__0 ) ) ( ( rule__OperandList__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:14261:1: ( ( rule__OperandList__Group_1_1__0 ) )
            // InternalSqlParser.g:14262:1: ( rule__OperandList__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:14263:1: ( rule__OperandList__Group_1_1__0 )
            // InternalSqlParser.g:14263:2: rule__OperandList__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__OperandList__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:14266:1: ( ( rule__OperandList__Group_1_1__0 )* )
            // InternalSqlParser.g:14267:1: ( rule__OperandList__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:14268:1: ( rule__OperandList__Group_1_1__0 )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==Comma) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // InternalSqlParser.g:14268:2: rule__OperandList__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__OperandList__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1__1__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__0"
    // InternalSqlParser.g:14283:1: rule__OperandList__Group_1_1__0 : rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 ;
    public final void rule__OperandList__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14287:1: ( rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1 )
            // InternalSqlParser.g:14288:2: rule__OperandList__Group_1_1__0__Impl rule__OperandList__Group_1_1__1
            {
            pushFollow(FOLLOW_67);
            rule__OperandList__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0"


    // $ANTLR start "rule__OperandList__Group_1_1__0__Impl"
    // InternalSqlParser.g:14295:1: rule__OperandList__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OperandList__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14299:1: ( ( Comma ) )
            // InternalSqlParser.g:14300:1: ( Comma )
            {
            // InternalSqlParser.g:14300:1: ( Comma )
            // InternalSqlParser.g:14301:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__0__Impl"


    // $ANTLR start "rule__OperandList__Group_1_1__1"
    // InternalSqlParser.g:14314:1: rule__OperandList__Group_1_1__1 : rule__OperandList__Group_1_1__1__Impl ;
    public final void rule__OperandList__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14318:1: ( rule__OperandList__Group_1_1__1__Impl )
            // InternalSqlParser.g:14319:2: rule__OperandList__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1"


    // $ANTLR start "rule__OperandList__Group_1_1__1__Impl"
    // InternalSqlParser.g:14325:1: rule__OperandList__Group_1_1__1__Impl : ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OperandList__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14329:1: ( ( ( rule__OperandList__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:14330:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:14330:1: ( ( rule__OperandList__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:14331:1: ( rule__OperandList__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:14332:1: ( rule__OperandList__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:14332:2: rule__OperandList__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandList__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__Group_1_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__0"
    // InternalSqlParser.g:14346:1: rule__OperandGroup__Group_1__0 : rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 ;
    public final void rule__OperandGroup__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14350:1: ( rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1 )
            // InternalSqlParser.g:14351:2: rule__OperandGroup__Group_1__0__Impl rule__OperandGroup__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__OperandGroup__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0"


    // $ANTLR start "rule__OperandGroup__Group_1__0__Impl"
    // InternalSqlParser.g:14358:1: rule__OperandGroup__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OperandGroup__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14362:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:14363:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:14363:1: ( LeftParenthesis )
            // InternalSqlParser.g:14364:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__0__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__1"
    // InternalSqlParser.g:14377:1: rule__OperandGroup__Group_1__1 : rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 ;
    public final void rule__OperandGroup__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14381:1: ( rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2 )
            // InternalSqlParser.g:14382:2: rule__OperandGroup__Group_1__1__Impl rule__OperandGroup__Group_1__2
            {
            pushFollow(FOLLOW_7);
            rule__OperandGroup__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1"


    // $ANTLR start "rule__OperandGroup__Group_1__1__Impl"
    // InternalSqlParser.g:14389:1: rule__OperandGroup__Group_1__1__Impl : ( ruleOperand ) ;
    public final void rule__OperandGroup__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14393:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:14394:1: ( ruleOperand )
            {
            // InternalSqlParser.g:14394:1: ( ruleOperand )
            // InternalSqlParser.g:14395:1: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getOperandParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__1__Impl"


    // $ANTLR start "rule__OperandGroup__Group_1__2"
    // InternalSqlParser.g:14406:1: rule__OperandGroup__Group_1__2 : rule__OperandGroup__Group_1__2__Impl ;
    public final void rule__OperandGroup__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14410:1: ( rule__OperandGroup__Group_1__2__Impl )
            // InternalSqlParser.g:14411:2: rule__OperandGroup__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandGroup__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2"


    // $ANTLR start "rule__OperandGroup__Group_1__2__Impl"
    // InternalSqlParser.g:14417:1: rule__OperandGroup__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__OperandGroup__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14421:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:14422:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:14422:1: ( RightParenthesis )
            // InternalSqlParser.g:14423:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandGroupAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandGroup__Group_1__2__Impl"


    // $ANTLR start "rule__Operand__Group__0"
    // InternalSqlParser.g:14442:1: rule__Operand__Group__0 : rule__Operand__Group__0__Impl rule__Operand__Group__1 ;
    public final void rule__Operand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14446:1: ( rule__Operand__Group__0__Impl rule__Operand__Group__1 )
            // InternalSqlParser.g:14447:2: rule__Operand__Group__0__Impl rule__Operand__Group__1
            {
            pushFollow(FOLLOW_68);
            rule__Operand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0"


    // $ANTLR start "rule__Operand__Group__0__Impl"
    // InternalSqlParser.g:14454:1: rule__Operand__Group__0__Impl : ( ( rule__Operand__Op1Assignment_0 ) ) ;
    public final void rule__Operand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14458:1: ( ( ( rule__Operand__Op1Assignment_0 ) ) )
            // InternalSqlParser.g:14459:1: ( ( rule__Operand__Op1Assignment_0 ) )
            {
            // InternalSqlParser.g:14459:1: ( ( rule__Operand__Op1Assignment_0 ) )
            // InternalSqlParser.g:14460:1: ( rule__Operand__Op1Assignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }
            // InternalSqlParser.g:14461:1: ( rule__Operand__Op1Assignment_0 )
            // InternalSqlParser.g:14461:2: rule__Operand__Op1Assignment_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Op1Assignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1Assignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__0__Impl"


    // $ANTLR start "rule__Operand__Group__1"
    // InternalSqlParser.g:14471:1: rule__Operand__Group__1 : rule__Operand__Group__1__Impl ;
    public final void rule__Operand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14475:1: ( rule__Operand__Group__1__Impl )
            // InternalSqlParser.g:14476:2: rule__Operand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1"


    // $ANTLR start "rule__Operand__Group__1__Impl"
    // InternalSqlParser.g:14482:1: rule__Operand__Group__1__Impl : ( ( rule__Operand__Group_1__0 )* ) ;
    public final void rule__Operand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14486:1: ( ( ( rule__Operand__Group_1__0 )* ) )
            // InternalSqlParser.g:14487:1: ( ( rule__Operand__Group_1__0 )* )
            {
            // InternalSqlParser.g:14487:1: ( ( rule__Operand__Group_1__0 )* )
            // InternalSqlParser.g:14488:1: ( rule__Operand__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:14489:1: ( rule__Operand__Group_1__0 )*
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( (LA126_0==VerticalLineVerticalLine||LA126_0==PlusSign||LA126_0==HyphenMinus||LA126_0==Solidus||LA126_0==RULE_STAR) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // InternalSqlParser.g:14489:2: rule__Operand__Group_1__0
            	    {
            	    pushFollow(FOLLOW_69);
            	    rule__Operand__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group__1__Impl"


    // $ANTLR start "rule__Operand__Group_1__0"
    // InternalSqlParser.g:14503:1: rule__Operand__Group_1__0 : rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 ;
    public final void rule__Operand__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14507:1: ( rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1 )
            // InternalSqlParser.g:14508:2: rule__Operand__Group_1__0__Impl rule__Operand__Group_1__1
            {
            pushFollow(FOLLOW_55);
            rule__Operand__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0"


    // $ANTLR start "rule__Operand__Group_1__0__Impl"
    // InternalSqlParser.g:14515:1: rule__Operand__Group_1__0__Impl : ( ( rule__Operand__Alternatives_1_0 ) ) ;
    public final void rule__Operand__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14519:1: ( ( ( rule__Operand__Alternatives_1_0 ) ) )
            // InternalSqlParser.g:14520:1: ( ( rule__Operand__Alternatives_1_0 ) )
            {
            // InternalSqlParser.g:14520:1: ( ( rule__Operand__Alternatives_1_0 ) )
            // InternalSqlParser.g:14521:1: ( rule__Operand__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }
            // InternalSqlParser.g:14522:1: ( rule__Operand__Alternatives_1_0 )
            // InternalSqlParser.g:14522:2: rule__Operand__Alternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1__1"
    // InternalSqlParser.g:14532:1: rule__Operand__Group_1__1 : rule__Operand__Group_1__1__Impl ;
    public final void rule__Operand__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14536:1: ( rule__Operand__Group_1__1__Impl )
            // InternalSqlParser.g:14537:2: rule__Operand__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1"


    // $ANTLR start "rule__Operand__Group_1__1__Impl"
    // InternalSqlParser.g:14543:1: rule__Operand__Group_1__1__Impl : ( ( rule__Operand__RightAssignment_1_1 ) ) ;
    public final void rule__Operand__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14547:1: ( ( ( rule__Operand__RightAssignment_1_1 ) ) )
            // InternalSqlParser.g:14548:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            {
            // InternalSqlParser.g:14548:1: ( ( rule__Operand__RightAssignment_1_1 ) )
            // InternalSqlParser.g:14549:1: ( rule__Operand__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }
            // InternalSqlParser.g:14550:1: ( rule__Operand__RightAssignment_1_1 )
            // InternalSqlParser.g:14550:2: rule__Operand__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__Operand__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__0"
    // InternalSqlParser.g:14564:1: rule__Operand__Group_1_0_0__0 : rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 ;
    public final void rule__Operand__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14568:1: ( rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1 )
            // InternalSqlParser.g:14569:2: rule__Operand__Group_1_0_0__0__Impl rule__Operand__Group_1_0_0__1
            {
            pushFollow(FOLLOW_70);
            rule__Operand__Group_1_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0"


    // $ANTLR start "rule__Operand__Group_1_0_0__0__Impl"
    // InternalSqlParser.g:14576:1: rule__Operand__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14580:1: ( ( () ) )
            // InternalSqlParser.g:14581:1: ( () )
            {
            // InternalSqlParser.g:14581:1: ( () )
            // InternalSqlParser.g:14582:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }
            // InternalSqlParser.g:14583:1: ()
            // InternalSqlParser.g:14585:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusLeftAction_1_0_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_0__1"
    // InternalSqlParser.g:14595:1: rule__Operand__Group_1_0_0__1 : rule__Operand__Group_1_0_0__1__Impl ;
    public final void rule__Operand__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14599:1: ( rule__Operand__Group_1_0_0__1__Impl )
            // InternalSqlParser.g:14600:2: rule__Operand__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1"


    // $ANTLR start "rule__Operand__Group_1_0_0__1__Impl"
    // InternalSqlParser.g:14606:1: rule__Operand__Group_1_0_0__1__Impl : ( PlusSign ) ;
    public final void rule__Operand__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14610:1: ( ( PlusSign ) )
            // InternalSqlParser.g:14611:1: ( PlusSign )
            {
            // InternalSqlParser.g:14611:1: ( PlusSign )
            // InternalSqlParser.g:14612:1: PlusSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }
            match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getPlusSignKeyword_1_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__0"
    // InternalSqlParser.g:14629:1: rule__Operand__Group_1_0_1__0 : rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 ;
    public final void rule__Operand__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14633:1: ( rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1 )
            // InternalSqlParser.g:14634:2: rule__Operand__Group_1_0_1__0__Impl rule__Operand__Group_1_0_1__1
            {
            pushFollow(FOLLOW_71);
            rule__Operand__Group_1_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0"


    // $ANTLR start "rule__Operand__Group_1_0_1__0__Impl"
    // InternalSqlParser.g:14641:1: rule__Operand__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14645:1: ( ( () ) )
            // InternalSqlParser.g:14646:1: ( () )
            {
            // InternalSqlParser.g:14646:1: ( () )
            // InternalSqlParser.g:14647:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }
            // InternalSqlParser.g:14648:1: ()
            // InternalSqlParser.g:14650:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMinusLeftAction_1_0_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_1__1"
    // InternalSqlParser.g:14660:1: rule__Operand__Group_1_0_1__1 : rule__Operand__Group_1_0_1__1__Impl ;
    public final void rule__Operand__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14664:1: ( rule__Operand__Group_1_0_1__1__Impl )
            // InternalSqlParser.g:14665:2: rule__Operand__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1"


    // $ANTLR start "rule__Operand__Group_1_0_1__1__Impl"
    // InternalSqlParser.g:14671:1: rule__Operand__Group_1_0_1__1__Impl : ( HyphenMinus ) ;
    public final void rule__Operand__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14675:1: ( ( HyphenMinus ) )
            // InternalSqlParser.g:14676:1: ( HyphenMinus )
            {
            // InternalSqlParser.g:14676:1: ( HyphenMinus )
            // InternalSqlParser.g:14677:1: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getHyphenMinusKeyword_1_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__0"
    // InternalSqlParser.g:14694:1: rule__Operand__Group_1_0_2__0 : rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 ;
    public final void rule__Operand__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14698:1: ( rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1 )
            // InternalSqlParser.g:14699:2: rule__Operand__Group_1_0_2__0__Impl rule__Operand__Group_1_0_2__1
            {
            pushFollow(FOLLOW_72);
            rule__Operand__Group_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0"


    // $ANTLR start "rule__Operand__Group_1_0_2__0__Impl"
    // InternalSqlParser.g:14706:1: rule__Operand__Group_1_0_2__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14710:1: ( ( () ) )
            // InternalSqlParser.g:14711:1: ( () )
            {
            // InternalSqlParser.g:14711:1: ( () )
            // InternalSqlParser.g:14712:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }
            // InternalSqlParser.g:14713:1: ()
            // InternalSqlParser.g:14715:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getConcatLeftAction_1_0_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_2__1"
    // InternalSqlParser.g:14725:1: rule__Operand__Group_1_0_2__1 : rule__Operand__Group_1_0_2__1__Impl ;
    public final void rule__Operand__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14729:1: ( rule__Operand__Group_1_0_2__1__Impl )
            // InternalSqlParser.g:14730:2: rule__Operand__Group_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1"


    // $ANTLR start "rule__Operand__Group_1_0_2__1__Impl"
    // InternalSqlParser.g:14736:1: rule__Operand__Group_1_0_2__1__Impl : ( VerticalLineVerticalLine ) ;
    public final void rule__Operand__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14740:1: ( ( VerticalLineVerticalLine ) )
            // InternalSqlParser.g:14741:1: ( VerticalLineVerticalLine )
            {
            // InternalSqlParser.g:14741:1: ( VerticalLineVerticalLine )
            // InternalSqlParser.g:14742:1: VerticalLineVerticalLine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }
            match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getVerticalLineVerticalLineKeyword_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__0"
    // InternalSqlParser.g:14759:1: rule__Operand__Group_1_0_3__0 : rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 ;
    public final void rule__Operand__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14763:1: ( rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1 )
            // InternalSqlParser.g:14764:2: rule__Operand__Group_1_0_3__0__Impl rule__Operand__Group_1_0_3__1
            {
            pushFollow(FOLLOW_49);
            rule__Operand__Group_1_0_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0"


    // $ANTLR start "rule__Operand__Group_1_0_3__0__Impl"
    // InternalSqlParser.g:14771:1: rule__Operand__Group_1_0_3__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14775:1: ( ( () ) )
            // InternalSqlParser.g:14776:1: ( () )
            {
            // InternalSqlParser.g:14776:1: ( () )
            // InternalSqlParser.g:14777:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }
            // InternalSqlParser.g:14778:1: ()
            // InternalSqlParser.g:14780:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getMultiplyLeftAction_1_0_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_3__1"
    // InternalSqlParser.g:14790:1: rule__Operand__Group_1_0_3__1 : rule__Operand__Group_1_0_3__1__Impl ;
    public final void rule__Operand__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14794:1: ( rule__Operand__Group_1_0_3__1__Impl )
            // InternalSqlParser.g:14795:2: rule__Operand__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1"


    // $ANTLR start "rule__Operand__Group_1_0_3__1__Impl"
    // InternalSqlParser.g:14801:1: rule__Operand__Group_1_0_3__1__Impl : ( RULE_STAR ) ;
    public final void rule__Operand__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14805:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:14806:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:14806:1: ( RULE_STAR )
            // InternalSqlParser.g:14807:1: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSTARTerminalRuleCall_1_0_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__0"
    // InternalSqlParser.g:14822:1: rule__Operand__Group_1_0_4__0 : rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 ;
    public final void rule__Operand__Group_1_0_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14826:1: ( rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1 )
            // InternalSqlParser.g:14827:2: rule__Operand__Group_1_0_4__0__Impl rule__Operand__Group_1_0_4__1
            {
            pushFollow(FOLLOW_68);
            rule__Operand__Group_1_0_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0"


    // $ANTLR start "rule__Operand__Group_1_0_4__0__Impl"
    // InternalSqlParser.g:14834:1: rule__Operand__Group_1_0_4__0__Impl : ( () ) ;
    public final void rule__Operand__Group_1_0_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14838:1: ( ( () ) )
            // InternalSqlParser.g:14839:1: ( () )
            {
            // InternalSqlParser.g:14839:1: ( () )
            // InternalSqlParser.g:14840:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }
            // InternalSqlParser.g:14841:1: ()
            // InternalSqlParser.g:14843:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getDivisionLeftAction_1_0_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__0__Impl"


    // $ANTLR start "rule__Operand__Group_1_0_4__1"
    // InternalSqlParser.g:14853:1: rule__Operand__Group_1_0_4__1 : rule__Operand__Group_1_0_4__1__Impl ;
    public final void rule__Operand__Group_1_0_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14857:1: ( rule__Operand__Group_1_0_4__1__Impl )
            // InternalSqlParser.g:14858:2: rule__Operand__Group_1_0_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Operand__Group_1_0_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1"


    // $ANTLR start "rule__Operand__Group_1_0_4__1__Impl"
    // InternalSqlParser.g:14864:1: rule__Operand__Group_1_0_4__1__Impl : ( Solidus ) ;
    public final void rule__Operand__Group_1_0_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14868:1: ( ( Solidus ) )
            // InternalSqlParser.g:14869:1: ( Solidus )
            {
            // InternalSqlParser.g:14869:1: ( Solidus )
            // InternalSqlParser.g:14870:1: Solidus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }
            match(input,Solidus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getSolidusKeyword_1_0_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Group_1_0_4__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__0"
    // InternalSqlParser.g:14887:1: rule__OperandFunction__Group__0 : rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 ;
    public final void rule__OperandFunction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14891:1: ( rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1 )
            // InternalSqlParser.g:14892:2: rule__OperandFunction__Group__0__Impl rule__OperandFunction__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__OperandFunction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0"


    // $ANTLR start "rule__OperandFunction__Group__0__Impl"
    // InternalSqlParser.g:14899:1: rule__OperandFunction__Group__0__Impl : ( () ) ;
    public final void rule__OperandFunction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14903:1: ( ( () ) )
            // InternalSqlParser.g:14904:1: ( () )
            {
            // InternalSqlParser.g:14904:1: ( () )
            // InternalSqlParser.g:14905:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }
            // InternalSqlParser.g:14906:1: ()
            // InternalSqlParser.g:14908:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getOpFunctionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__0__Impl"


    // $ANTLR start "rule__OperandFunction__Group__1"
    // InternalSqlParser.g:14918:1: rule__OperandFunction__Group__1 : rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 ;
    public final void rule__OperandFunction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14922:1: ( rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2 )
            // InternalSqlParser.g:14923:2: rule__OperandFunction__Group__1__Impl rule__OperandFunction__Group__2
            {
            pushFollow(FOLLOW_73);
            rule__OperandFunction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1"


    // $ANTLR start "rule__OperandFunction__Group__1__Impl"
    // InternalSqlParser.g:14930:1: rule__OperandFunction__Group__1__Impl : ( ( rule__OperandFunction__FnameAssignment_1 ) ) ;
    public final void rule__OperandFunction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14934:1: ( ( ( rule__OperandFunction__FnameAssignment_1 ) ) )
            // InternalSqlParser.g:14935:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            {
            // InternalSqlParser.g:14935:1: ( ( rule__OperandFunction__FnameAssignment_1 ) )
            // InternalSqlParser.g:14936:1: ( rule__OperandFunction__FnameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }
            // InternalSqlParser.g:14937:1: ( rule__OperandFunction__FnameAssignment_1 )
            // InternalSqlParser.g:14937:2: rule__OperandFunction__FnameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__FnameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__1__Impl"


    // $ANTLR start "rule__OperandFunction__Group__2"
    // InternalSqlParser.g:14947:1: rule__OperandFunction__Group__2 : rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 ;
    public final void rule__OperandFunction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14951:1: ( rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3 )
            // InternalSqlParser.g:14952:2: rule__OperandFunction__Group__2__Impl rule__OperandFunction__Group__3
            {
            pushFollow(FOLLOW_73);
            rule__OperandFunction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2"


    // $ANTLR start "rule__OperandFunction__Group__2__Impl"
    // InternalSqlParser.g:14959:1: rule__OperandFunction__Group__2__Impl : ( ( rule__OperandFunction__Alternatives_2 )? ) ;
    public final void rule__OperandFunction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14963:1: ( ( ( rule__OperandFunction__Alternatives_2 )? ) )
            // InternalSqlParser.g:14964:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            {
            // InternalSqlParser.g:14964:1: ( ( rule__OperandFunction__Alternatives_2 )? )
            // InternalSqlParser.g:14965:1: ( rule__OperandFunction__Alternatives_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }
            // InternalSqlParser.g:14966:1: ( rule__OperandFunction__Alternatives_2 )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==DISTINCT||LA127_0==EXTRACT||LA127_0==CAST||LA127_0==CASE||LA127_0==ALL||LA127_0==LeftParenthesis||(LA127_0>=RULE_JRPARAM && LA127_0<=RULE_SIGNED_DOUBLE)||(LA127_0>=RULE_STRING_ && LA127_0<=RULE_ID)) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalSqlParser.g:14966:2: rule__OperandFunction__Alternatives_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__Alternatives_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__2__Impl"


    // $ANTLR start "rule__OperandFunction__Group__3"
    // InternalSqlParser.g:14976:1: rule__OperandFunction__Group__3 : rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 ;
    public final void rule__OperandFunction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14980:1: ( rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4 )
            // InternalSqlParser.g:14981:2: rule__OperandFunction__Group__3__Impl rule__OperandFunction__Group__4
            {
            pushFollow(FOLLOW_74);
            rule__OperandFunction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3"


    // $ANTLR start "rule__OperandFunction__Group__3__Impl"
    // InternalSqlParser.g:14988:1: rule__OperandFunction__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__OperandFunction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:14992:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:14993:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:14993:1: ( RightParenthesis )
            // InternalSqlParser.g:14994:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__3__Impl"


    // $ANTLR start "rule__OperandFunction__Group__4"
    // InternalSqlParser.g:15007:1: rule__OperandFunction__Group__4 : rule__OperandFunction__Group__4__Impl ;
    public final void rule__OperandFunction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15011:1: ( rule__OperandFunction__Group__4__Impl )
            // InternalSqlParser.g:15012:2: rule__OperandFunction__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OperandFunction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4"


    // $ANTLR start "rule__OperandFunction__Group__4__Impl"
    // InternalSqlParser.g:15018:1: rule__OperandFunction__Group__4__Impl : ( ( rule__OperandFunction__FanAssignment_4 )? ) ;
    public final void rule__OperandFunction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15022:1: ( ( ( rule__OperandFunction__FanAssignment_4 )? ) )
            // InternalSqlParser.g:15023:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            {
            // InternalSqlParser.g:15023:1: ( ( rule__OperandFunction__FanAssignment_4 )? )
            // InternalSqlParser.g:15024:1: ( rule__OperandFunction__FanAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }
            // InternalSqlParser.g:15025:1: ( rule__OperandFunction__FanAssignment_4 )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==OVER) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSqlParser.g:15025:2: rule__OperandFunction__FanAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__OperandFunction__FanAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__0"
    // InternalSqlParser.g:15045:1: rule__FunctionExtract__Group__0 : rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 ;
    public final void rule__FunctionExtract__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15049:1: ( rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1 )
            // InternalSqlParser.g:15050:2: rule__FunctionExtract__Group__0__Impl rule__FunctionExtract__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FunctionExtract__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0"


    // $ANTLR start "rule__FunctionExtract__Group__0__Impl"
    // InternalSqlParser.g:15057:1: rule__FunctionExtract__Group__0__Impl : ( EXTRACT ) ;
    public final void rule__FunctionExtract__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15061:1: ( ( EXTRACT ) )
            // InternalSqlParser.g:15062:1: ( EXTRACT )
            {
            // InternalSqlParser.g:15062:1: ( EXTRACT )
            // InternalSqlParser.g:15063:1: EXTRACT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }
            match(input,EXTRACT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getEXTRACTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__0__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__1"
    // InternalSqlParser.g:15076:1: rule__FunctionExtract__Group__1 : rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 ;
    public final void rule__FunctionExtract__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15080:1: ( rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2 )
            // InternalSqlParser.g:15081:2: rule__FunctionExtract__Group__1__Impl rule__FunctionExtract__Group__2
            {
            pushFollow(FOLLOW_75);
            rule__FunctionExtract__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1"


    // $ANTLR start "rule__FunctionExtract__Group__1__Impl"
    // InternalSqlParser.g:15088:1: rule__FunctionExtract__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionExtract__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15092:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:15093:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:15093:1: ( LeftParenthesis )
            // InternalSqlParser.g:15094:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__1__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__2"
    // InternalSqlParser.g:15107:1: rule__FunctionExtract__Group__2 : rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 ;
    public final void rule__FunctionExtract__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15111:1: ( rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3 )
            // InternalSqlParser.g:15112:2: rule__FunctionExtract__Group__2__Impl rule__FunctionExtract__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__FunctionExtract__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2"


    // $ANTLR start "rule__FunctionExtract__Group__2__Impl"
    // InternalSqlParser.g:15119:1: rule__FunctionExtract__Group__2__Impl : ( ( rule__FunctionExtract__VAssignment_2 ) ) ;
    public final void rule__FunctionExtract__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15123:1: ( ( ( rule__FunctionExtract__VAssignment_2 ) ) )
            // InternalSqlParser.g:15124:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            {
            // InternalSqlParser.g:15124:1: ( ( rule__FunctionExtract__VAssignment_2 ) )
            // InternalSqlParser.g:15125:1: ( rule__FunctionExtract__VAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }
            // InternalSqlParser.g:15126:1: ( rule__FunctionExtract__VAssignment_2 )
            // InternalSqlParser.g:15126:2: rule__FunctionExtract__VAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__VAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__2__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__3"
    // InternalSqlParser.g:15136:1: rule__FunctionExtract__Group__3 : rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 ;
    public final void rule__FunctionExtract__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15140:1: ( rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4 )
            // InternalSqlParser.g:15141:2: rule__FunctionExtract__Group__3__Impl rule__FunctionExtract__Group__4
            {
            pushFollow(FOLLOW_55);
            rule__FunctionExtract__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3"


    // $ANTLR start "rule__FunctionExtract__Group__3__Impl"
    // InternalSqlParser.g:15148:1: rule__FunctionExtract__Group__3__Impl : ( FROM ) ;
    public final void rule__FunctionExtract__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15152:1: ( ( FROM ) )
            // InternalSqlParser.g:15153:1: ( FROM )
            {
            // InternalSqlParser.g:15153:1: ( FROM )
            // InternalSqlParser.g:15154:1: FROM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }
            match(input,FROM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getFROMKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__3__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__4"
    // InternalSqlParser.g:15167:1: rule__FunctionExtract__Group__4 : rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 ;
    public final void rule__FunctionExtract__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15171:1: ( rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5 )
            // InternalSqlParser.g:15172:2: rule__FunctionExtract__Group__4__Impl rule__FunctionExtract__Group__5
            {
            pushFollow(FOLLOW_7);
            rule__FunctionExtract__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4"


    // $ANTLR start "rule__FunctionExtract__Group__4__Impl"
    // InternalSqlParser.g:15179:1: rule__FunctionExtract__Group__4__Impl : ( ( rule__FunctionExtract__OperandAssignment_4 ) ) ;
    public final void rule__FunctionExtract__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15183:1: ( ( ( rule__FunctionExtract__OperandAssignment_4 ) ) )
            // InternalSqlParser.g:15184:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            {
            // InternalSqlParser.g:15184:1: ( ( rule__FunctionExtract__OperandAssignment_4 ) )
            // InternalSqlParser.g:15185:1: ( rule__FunctionExtract__OperandAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }
            // InternalSqlParser.g:15186:1: ( rule__FunctionExtract__OperandAssignment_4 )
            // InternalSqlParser.g:15186:2: rule__FunctionExtract__OperandAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__OperandAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__4__Impl"


    // $ANTLR start "rule__FunctionExtract__Group__5"
    // InternalSqlParser.g:15196:1: rule__FunctionExtract__Group__5 : rule__FunctionExtract__Group__5__Impl ;
    public final void rule__FunctionExtract__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15200:1: ( rule__FunctionExtract__Group__5__Impl )
            // InternalSqlParser.g:15201:2: rule__FunctionExtract__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionExtract__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5"


    // $ANTLR start "rule__FunctionExtract__Group__5__Impl"
    // InternalSqlParser.g:15207:1: rule__FunctionExtract__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionExtract__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15211:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:15212:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:15212:1: ( RightParenthesis )
            // InternalSqlParser.g:15213:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__Group__5__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__0"
    // InternalSqlParser.g:15238:1: rule__FunctionAnalytical__Group__0 : rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 ;
    public final void rule__FunctionAnalytical__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15242:1: ( rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1 )
            // InternalSqlParser.g:15243:2: rule__FunctionAnalytical__Group__0__Impl rule__FunctionAnalytical__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FunctionAnalytical__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0"


    // $ANTLR start "rule__FunctionAnalytical__Group__0__Impl"
    // InternalSqlParser.g:15250:1: rule__FunctionAnalytical__Group__0__Impl : ( OVER ) ;
    public final void rule__FunctionAnalytical__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15254:1: ( ( OVER ) )
            // InternalSqlParser.g:15255:1: ( OVER )
            {
            // InternalSqlParser.g:15255:1: ( OVER )
            // InternalSqlParser.g:15256:1: OVER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }
            match(input,OVER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getOVERKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__0__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__1"
    // InternalSqlParser.g:15269:1: rule__FunctionAnalytical__Group__1 : rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 ;
    public final void rule__FunctionAnalytical__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15273:1: ( rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2 )
            // InternalSqlParser.g:15274:2: rule__FunctionAnalytical__Group__1__Impl rule__FunctionAnalytical__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__FunctionAnalytical__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1"


    // $ANTLR start "rule__FunctionAnalytical__Group__1__Impl"
    // InternalSqlParser.g:15281:1: rule__FunctionAnalytical__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15285:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:15286:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:15286:1: ( LeftParenthesis )
            // InternalSqlParser.g:15287:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__1__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__2"
    // InternalSqlParser.g:15300:1: rule__FunctionAnalytical__Group__2 : rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 ;
    public final void rule__FunctionAnalytical__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15304:1: ( rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3 )
            // InternalSqlParser.g:15305:2: rule__FunctionAnalytical__Group__2__Impl rule__FunctionAnalytical__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__FunctionAnalytical__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2"


    // $ANTLR start "rule__FunctionAnalytical__Group__2__Impl"
    // InternalSqlParser.g:15312:1: rule__FunctionAnalytical__Group__2__Impl : ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) ;
    public final void rule__FunctionAnalytical__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15316:1: ( ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) ) )
            // InternalSqlParser.g:15317:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            {
            // InternalSqlParser.g:15317:1: ( ( rule__FunctionAnalytical__AnClauseAssignment_2 ) )
            // InternalSqlParser.g:15318:1: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }
            // InternalSqlParser.g:15319:1: ( rule__FunctionAnalytical__AnClauseAssignment_2 )
            // InternalSqlParser.g:15319:2: rule__FunctionAnalytical__AnClauseAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__AnClauseAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__2__Impl"


    // $ANTLR start "rule__FunctionAnalytical__Group__3"
    // InternalSqlParser.g:15329:1: rule__FunctionAnalytical__Group__3 : rule__FunctionAnalytical__Group__3__Impl ;
    public final void rule__FunctionAnalytical__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15333:1: ( rule__FunctionAnalytical__Group__3__Impl )
            // InternalSqlParser.g:15334:2: rule__FunctionAnalytical__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionAnalytical__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3"


    // $ANTLR start "rule__FunctionAnalytical__Group__3__Impl"
    // InternalSqlParser.g:15340:1: rule__FunctionAnalytical__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__FunctionAnalytical__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15344:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:15345:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:15345:1: ( RightParenthesis )
            // InternalSqlParser.g:15346:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__Group__3__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__0"
    // InternalSqlParser.g:15367:1: rule__AnalyticClause__Group__0 : rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 ;
    public final void rule__AnalyticClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15371:1: ( rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1 )
            // InternalSqlParser.g:15372:2: rule__AnalyticClause__Group__0__Impl rule__AnalyticClause__Group__1
            {
            pushFollow(FOLLOW_76);
            rule__AnalyticClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0"


    // $ANTLR start "rule__AnalyticClause__Group__0__Impl"
    // InternalSqlParser.g:15379:1: rule__AnalyticClause__Group__0__Impl : ( () ) ;
    public final void rule__AnalyticClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15383:1: ( ( () ) )
            // InternalSqlParser.g:15384:1: ( () )
            {
            // InternalSqlParser.g:15384:1: ( () )
            // InternalSqlParser.g:15385:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }
            // InternalSqlParser.g:15386:1: ()
            // InternalSqlParser.g:15388:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAnalyticClauseAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__1"
    // InternalSqlParser.g:15398:1: rule__AnalyticClause__Group__1 : rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 ;
    public final void rule__AnalyticClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15402:1: ( rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2 )
            // InternalSqlParser.g:15403:2: rule__AnalyticClause__Group__1__Impl rule__AnalyticClause__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__AnalyticClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1"


    // $ANTLR start "rule__AnalyticClause__Group__1__Impl"
    // InternalSqlParser.g:15410:1: rule__AnalyticClause__Group__1__Impl : ( ( rule__AnalyticClause__AbcAssignment_1 )? ) ;
    public final void rule__AnalyticClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15414:1: ( ( ( rule__AnalyticClause__AbcAssignment_1 )? ) )
            // InternalSqlParser.g:15415:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            {
            // InternalSqlParser.g:15415:1: ( ( rule__AnalyticClause__AbcAssignment_1 )? )
            // InternalSqlParser.g:15416:1: ( rule__AnalyticClause__AbcAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }
            // InternalSqlParser.g:15417:1: ( rule__AnalyticClause__AbcAssignment_1 )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==PARTITION) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalSqlParser.g:15417:2: rule__AnalyticClause__AbcAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__AbcAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__1__Impl"


    // $ANTLR start "rule__AnalyticClause__Group__2"
    // InternalSqlParser.g:15427:1: rule__AnalyticClause__Group__2 : rule__AnalyticClause__Group__2__Impl ;
    public final void rule__AnalyticClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15431:1: ( rule__AnalyticClause__Group__2__Impl )
            // InternalSqlParser.g:15432:2: rule__AnalyticClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2"


    // $ANTLR start "rule__AnalyticClause__Group__2__Impl"
    // InternalSqlParser.g:15438:1: rule__AnalyticClause__Group__2__Impl : ( ( rule__AnalyticClause__Group_2__0 )? ) ;
    public final void rule__AnalyticClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15442:1: ( ( ( rule__AnalyticClause__Group_2__0 )? ) )
            // InternalSqlParser.g:15443:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            {
            // InternalSqlParser.g:15443:1: ( ( rule__AnalyticClause__Group_2__0 )? )
            // InternalSqlParser.g:15444:1: ( rule__AnalyticClause__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }
            // InternalSqlParser.g:15445:1: ( rule__AnalyticClause__Group_2__0 )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==ORDER) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalSqlParser.g:15445:2: rule__AnalyticClause__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group__2__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__0"
    // InternalSqlParser.g:15461:1: rule__AnalyticClause__Group_2__0 : rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 ;
    public final void rule__AnalyticClause__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15465:1: ( rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1 )
            // InternalSqlParser.g:15466:2: rule__AnalyticClause__Group_2__0__Impl rule__AnalyticClause__Group_2__1
            {
            pushFollow(FOLLOW_77);
            rule__AnalyticClause__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0"


    // $ANTLR start "rule__AnalyticClause__Group_2__0__Impl"
    // InternalSqlParser.g:15473:1: rule__AnalyticClause__Group_2__0__Impl : ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) ;
    public final void rule__AnalyticClause__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15477:1: ( ( ( rule__AnalyticClause__ObcAssignment_2_0 ) ) )
            // InternalSqlParser.g:15478:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            {
            // InternalSqlParser.g:15478:1: ( ( rule__AnalyticClause__ObcAssignment_2_0 ) )
            // InternalSqlParser.g:15479:1: ( rule__AnalyticClause__ObcAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }
            // InternalSqlParser.g:15480:1: ( rule__AnalyticClause__ObcAssignment_2_0 )
            // InternalSqlParser.g:15480:2: rule__AnalyticClause__ObcAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__ObcAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__0__Impl"


    // $ANTLR start "rule__AnalyticClause__Group_2__1"
    // InternalSqlParser.g:15490:1: rule__AnalyticClause__Group_2__1 : rule__AnalyticClause__Group_2__1__Impl ;
    public final void rule__AnalyticClause__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15494:1: ( rule__AnalyticClause__Group_2__1__Impl )
            // InternalSqlParser.g:15495:2: rule__AnalyticClause__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticClause__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1"


    // $ANTLR start "rule__AnalyticClause__Group_2__1__Impl"
    // InternalSqlParser.g:15501:1: rule__AnalyticClause__Group_2__1__Impl : ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) ;
    public final void rule__AnalyticClause__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15505:1: ( ( ( rule__AnalyticClause__WincAssignment_2_1 )? ) )
            // InternalSqlParser.g:15506:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            {
            // InternalSqlParser.g:15506:1: ( ( rule__AnalyticClause__WincAssignment_2_1 )? )
            // InternalSqlParser.g:15507:1: ( rule__AnalyticClause__WincAssignment_2_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }
            // InternalSqlParser.g:15508:1: ( rule__AnalyticClause__WincAssignment_2_1 )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==RANGE||LA131_0==ROWS) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSqlParser.g:15508:2: rule__AnalyticClause__WincAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticClause__WincAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__Group_2__1__Impl"


    // $ANTLR start "rule__WindowingClause__Group__0"
    // InternalSqlParser.g:15522:1: rule__WindowingClause__Group__0 : rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 ;
    public final void rule__WindowingClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15526:1: ( rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1 )
            // InternalSqlParser.g:15527:2: rule__WindowingClause__Group__0__Impl rule__WindowingClause__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0"


    // $ANTLR start "rule__WindowingClause__Group__0__Impl"
    // InternalSqlParser.g:15534:1: rule__WindowingClause__Group__0__Impl : ( ( rule__WindowingClause__Alternatives_0 ) ) ;
    public final void rule__WindowingClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15538:1: ( ( ( rule__WindowingClause__Alternatives_0 ) ) )
            // InternalSqlParser.g:15539:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            {
            // InternalSqlParser.g:15539:1: ( ( rule__WindowingClause__Alternatives_0 ) )
            // InternalSqlParser.g:15540:1: ( rule__WindowingClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }
            // InternalSqlParser.g:15541:1: ( rule__WindowingClause__Alternatives_0 )
            // InternalSqlParser.g:15541:2: rule__WindowingClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__0__Impl"


    // $ANTLR start "rule__WindowingClause__Group__1"
    // InternalSqlParser.g:15551:1: rule__WindowingClause__Group__1 : rule__WindowingClause__Group__1__Impl ;
    public final void rule__WindowingClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15555:1: ( rule__WindowingClause__Group__1__Impl )
            // InternalSqlParser.g:15556:2: rule__WindowingClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1"


    // $ANTLR start "rule__WindowingClause__Group__1__Impl"
    // InternalSqlParser.g:15562:1: rule__WindowingClause__Group__1__Impl : ( ( rule__WindowingClause__Alternatives_1 ) ) ;
    public final void rule__WindowingClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15566:1: ( ( ( rule__WindowingClause__Alternatives_1 ) ) )
            // InternalSqlParser.g:15567:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            {
            // InternalSqlParser.g:15567:1: ( ( rule__WindowingClause__Alternatives_1 ) )
            // InternalSqlParser.g:15568:1: ( rule__WindowingClause__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:15569:1: ( rule__WindowingClause__Alternatives_1 )
            // InternalSqlParser.g:15569:2: rule__WindowingClause__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClause__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClause__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0"
    // InternalSqlParser.g:15583:1: rule__WindowingClauseBetween__Group__0 : rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 ;
    public final void rule__WindowingClauseBetween__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15587:1: ( rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1 )
            // InternalSqlParser.g:15588:2: rule__WindowingClauseBetween__Group__0__Impl rule__WindowingClauseBetween__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClauseBetween__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0"


    // $ANTLR start "rule__WindowingClauseBetween__Group__0__Impl"
    // InternalSqlParser.g:15595:1: rule__WindowingClauseBetween__Group__0__Impl : ( BETWEEN ) ;
    public final void rule__WindowingClauseBetween__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15599:1: ( ( BETWEEN ) )
            // InternalSqlParser.g:15600:1: ( BETWEEN )
            {
            // InternalSqlParser.g:15600:1: ( BETWEEN )
            // InternalSqlParser.g:15601:1: BETWEEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }
            match(input,BETWEEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getBETWEENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1"
    // InternalSqlParser.g:15614:1: rule__WindowingClauseBetween__Group__1 : rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 ;
    public final void rule__WindowingClauseBetween__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15618:1: ( rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2 )
            // InternalSqlParser.g:15619:2: rule__WindowingClauseBetween__Group__1__Impl rule__WindowingClauseBetween__Group__2
            {
            pushFollow(FOLLOW_64);
            rule__WindowingClauseBetween__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1"


    // $ANTLR start "rule__WindowingClauseBetween__Group__1__Impl"
    // InternalSqlParser.g:15626:1: rule__WindowingClauseBetween__Group__1__Impl : ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) ;
    public final void rule__WindowingClauseBetween__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15630:1: ( ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) ) )
            // InternalSqlParser.g:15631:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            {
            // InternalSqlParser.g:15631:1: ( ( rule__WindowingClauseBetween__WcoPAssignment_1 ) )
            // InternalSqlParser.g:15632:1: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }
            // InternalSqlParser.g:15633:1: ( rule__WindowingClauseBetween__WcoPAssignment_1 )
            // InternalSqlParser.g:15633:2: rule__WindowingClauseBetween__WcoPAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoPAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2"
    // InternalSqlParser.g:15643:1: rule__WindowingClauseBetween__Group__2 : rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 ;
    public final void rule__WindowingClauseBetween__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15647:1: ( rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3 )
            // InternalSqlParser.g:15648:2: rule__WindowingClauseBetween__Group__2__Impl rule__WindowingClauseBetween__Group__3
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClauseBetween__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2"


    // $ANTLR start "rule__WindowingClauseBetween__Group__2__Impl"
    // InternalSqlParser.g:15655:1: rule__WindowingClauseBetween__Group__2__Impl : ( AND ) ;
    public final void rule__WindowingClauseBetween__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15659:1: ( ( AND ) )
            // InternalSqlParser.g:15660:1: ( AND )
            {
            // InternalSqlParser.g:15660:1: ( AND )
            // InternalSqlParser.g:15661:1: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }
            match(input,AND,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getANDKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__2__Impl"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3"
    // InternalSqlParser.g:15674:1: rule__WindowingClauseBetween__Group__3 : rule__WindowingClauseBetween__Group__3__Impl ;
    public final void rule__WindowingClauseBetween__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15678:1: ( rule__WindowingClauseBetween__Group__3__Impl )
            // InternalSqlParser.g:15679:2: rule__WindowingClauseBetween__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3"


    // $ANTLR start "rule__WindowingClauseBetween__Group__3__Impl"
    // InternalSqlParser.g:15685:1: rule__WindowingClauseBetween__Group__3__Impl : ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) ;
    public final void rule__WindowingClauseBetween__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15689:1: ( ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) ) )
            // InternalSqlParser.g:15690:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            {
            // InternalSqlParser.g:15690:1: ( ( rule__WindowingClauseBetween__WcoFAssignment_3 ) )
            // InternalSqlParser.g:15691:1: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }
            // InternalSqlParser.g:15692:1: ( rule__WindowingClauseBetween__WcoFAssignment_3 )
            // InternalSqlParser.g:15692:2: rule__WindowingClauseBetween__WcoFAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseBetween__WcoFAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__Group__3__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0"
    // InternalSqlParser.g:15710:1: rule__WindowingClauseOperandFollowing__Group__0 : rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15714:1: ( rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1 )
            // InternalSqlParser.g:15715:2: rule__WindowingClauseOperandFollowing__Group__0__Impl rule__WindowingClauseOperandFollowing__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClauseOperandFollowing__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__0__Impl"
    // InternalSqlParser.g:15722:1: rule__WindowingClauseOperandFollowing__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15726:1: ( ( () ) )
            // InternalSqlParser.g:15727:1: ( () )
            {
            // InternalSqlParser.g:15727:1: ( () )
            // InternalSqlParser.g:15728:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }
            // InternalSqlParser.g:15729:1: ()
            // InternalSqlParser.g:15731:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getWindowingClauseOperandFollowingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1"
    // InternalSqlParser.g:15741:1: rule__WindowingClauseOperandFollowing__Group__1 : rule__WindowingClauseOperandFollowing__Group__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15745:1: ( rule__WindowingClauseOperandFollowing__Group__1__Impl )
            // InternalSqlParser.g:15746:2: rule__WindowingClauseOperandFollowing__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group__1__Impl"
    // InternalSqlParser.g:15752:1: rule__WindowingClauseOperandFollowing__Group__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15756:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) ) )
            // InternalSqlParser.g:15757:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            {
            // InternalSqlParser.g:15757:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1 ) )
            // InternalSqlParser.g:15758:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:15759:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1 )
            // InternalSqlParser.g:15759:2: rule__WindowingClauseOperandFollowing__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0"
    // InternalSqlParser.g:15773:1: rule__WindowingClauseOperandFollowing__Group_1_0__0 : rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15777:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1 )
            // InternalSqlParser.g:15778:2: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl rule__WindowingClauseOperandFollowing__Group_1_0__1
            {
            pushFollow(FOLLOW_79);
            rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"
    // InternalSqlParser.g:15785:1: rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15789:1: ( ( UNBOUNDED ) )
            // InternalSqlParser.g:15790:1: ( UNBOUNDED )
            {
            // InternalSqlParser.g:15790:1: ( UNBOUNDED )
            // InternalSqlParser.g:15791:1: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1"
    // InternalSqlParser.g:15804:1: rule__WindowingClauseOperandFollowing__Group_1_0__1 : rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15808:1: ( rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl )
            // InternalSqlParser.g:15809:2: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"
    // InternalSqlParser.g:15815:1: rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl : ( KW_FOLLOWING ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15819:1: ( ( KW_FOLLOWING ) )
            // InternalSqlParser.g:15820:1: ( KW_FOLLOWING )
            {
            // InternalSqlParser.g:15820:1: ( KW_FOLLOWING )
            // InternalSqlParser.g:15821:1: KW_FOLLOWING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }
            match(input,KW_FOLLOWING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getFOLLOWINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0"
    // InternalSqlParser.g:15838:1: rule__WindowingClauseOperandFollowing__Group_1_1__0 : rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15842:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1 )
            // InternalSqlParser.g:15843:2: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl rule__WindowingClauseOperandFollowing__Group_1_1__1
            {
            pushFollow(FOLLOW_80);
            rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"
    // InternalSqlParser.g:15850:1: rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15854:1: ( ( CURRENT ) )
            // InternalSqlParser.g:15855:1: ( CURRENT )
            {
            // InternalSqlParser.g:15855:1: ( CURRENT )
            // InternalSqlParser.g:15856:1: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1"
    // InternalSqlParser.g:15869:1: rule__WindowingClauseOperandFollowing__Group_1_1__1 : rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15873:1: ( rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl )
            // InternalSqlParser.g:15874:2: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"
    // InternalSqlParser.g:15880:1: rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15884:1: ( ( ROW ) )
            // InternalSqlParser.g:15885:1: ( ROW )
            {
            // InternalSqlParser.g:15885:1: ( ROW )
            // InternalSqlParser.g:15886:1: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0"
    // InternalSqlParser.g:15903:1: rule__WindowingClauseOperandFollowing__Group_1_2__0 : rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15907:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1 )
            // InternalSqlParser.g:15908:2: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl rule__WindowingClauseOperandFollowing__Group_1_2__1
            {
            pushFollow(FOLLOW_81);
            rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"
    // InternalSqlParser.g:15915:1: rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15919:1: ( ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) ) )
            // InternalSqlParser.g:15920:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            {
            // InternalSqlParser.g:15920:1: ( ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 ) )
            // InternalSqlParser.g:15921:1: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }
            // InternalSqlParser.g:15922:1: ( rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 )
            // InternalSqlParser.g:15922:2: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1"
    // InternalSqlParser.g:15932:1: rule__WindowingClauseOperandFollowing__Group_1_2__1 : rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15936:1: ( rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl )
            // InternalSqlParser.g:15937:2: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"
    // InternalSqlParser.g:15943:1: rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15947:1: ( ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) ) )
            // InternalSqlParser.g:15948:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            {
            // InternalSqlParser.g:15948:1: ( ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 ) )
            // InternalSqlParser.g:15949:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSqlParser.g:15950:1: ( rule__WindowingClauseOperandFollowing__Alternatives_1_2_1 )
            // InternalSqlParser.g:15950:2: rule__WindowingClauseOperandFollowing__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandFollowing__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__Group_1_2__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0"
    // InternalSqlParser.g:15964:1: rule__WindowingClauseOperandPreceding__Group__0 : rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15968:1: ( rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1 )
            // InternalSqlParser.g:15969:2: rule__WindowingClauseOperandPreceding__Group__0__Impl rule__WindowingClauseOperandPreceding__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__WindowingClauseOperandPreceding__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__0__Impl"
    // InternalSqlParser.g:15976:1: rule__WindowingClauseOperandPreceding__Group__0__Impl : ( () ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15980:1: ( ( () ) )
            // InternalSqlParser.g:15981:1: ( () )
            {
            // InternalSqlParser.g:15981:1: ( () )
            // InternalSqlParser.g:15982:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }
            // InternalSqlParser.g:15983:1: ()
            // InternalSqlParser.g:15985:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getWindowingClauseOperandPrecedingAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1"
    // InternalSqlParser.g:15995:1: rule__WindowingClauseOperandPreceding__Group__1 : rule__WindowingClauseOperandPreceding__Group__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:15999:1: ( rule__WindowingClauseOperandPreceding__Group__1__Impl )
            // InternalSqlParser.g:16000:2: rule__WindowingClauseOperandPreceding__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group__1__Impl"
    // InternalSqlParser.g:16006:1: rule__WindowingClauseOperandPreceding__Group__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16010:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) ) )
            // InternalSqlParser.g:16011:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            {
            // InternalSqlParser.g:16011:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1 ) )
            // InternalSqlParser.g:16012:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:16013:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1 )
            // InternalSqlParser.g:16013:2: rule__WindowingClauseOperandPreceding__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0"
    // InternalSqlParser.g:16027:1: rule__WindowingClauseOperandPreceding__Group_1_0__0 : rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16031:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1 )
            // InternalSqlParser.g:16032:2: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl rule__WindowingClauseOperandPreceding__Group_1_0__1
            {
            pushFollow(FOLLOW_82);
            rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"
    // InternalSqlParser.g:16039:1: rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl : ( UNBOUNDED ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16043:1: ( ( UNBOUNDED ) )
            // InternalSqlParser.g:16044:1: ( UNBOUNDED )
            {
            // InternalSqlParser.g:16044:1: ( UNBOUNDED )
            // InternalSqlParser.g:16045:1: UNBOUNDED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }
            match(input,UNBOUNDED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getUNBOUNDEDKeyword_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1"
    // InternalSqlParser.g:16058:1: rule__WindowingClauseOperandPreceding__Group_1_0__1 : rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16062:1: ( rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl )
            // InternalSqlParser.g:16063:2: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"
    // InternalSqlParser.g:16069:1: rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl : ( PRECEDING ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16073:1: ( ( PRECEDING ) )
            // InternalSqlParser.g:16074:1: ( PRECEDING )
            {
            // InternalSqlParser.g:16074:1: ( PRECEDING )
            // InternalSqlParser.g:16075:1: PRECEDING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }
            match(input,PRECEDING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getPRECEDINGKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_0__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0"
    // InternalSqlParser.g:16092:1: rule__WindowingClauseOperandPreceding__Group_1_1__0 : rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16096:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1 )
            // InternalSqlParser.g:16097:2: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl rule__WindowingClauseOperandPreceding__Group_1_1__1
            {
            pushFollow(FOLLOW_80);
            rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"
    // InternalSqlParser.g:16104:1: rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl : ( CURRENT ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16108:1: ( ( CURRENT ) )
            // InternalSqlParser.g:16109:1: ( CURRENT )
            {
            // InternalSqlParser.g:16109:1: ( CURRENT )
            // InternalSqlParser.g:16110:1: CURRENT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }
            match(input,CURRENT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getCURRENTKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1"
    // InternalSqlParser.g:16123:1: rule__WindowingClauseOperandPreceding__Group_1_1__1 : rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16127:1: ( rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl )
            // InternalSqlParser.g:16128:2: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"
    // InternalSqlParser.g:16134:1: rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl : ( ROW ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16138:1: ( ( ROW ) )
            // InternalSqlParser.g:16139:1: ( ROW )
            {
            // InternalSqlParser.g:16139:1: ( ROW )
            // InternalSqlParser.g:16140:1: ROW
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }
            match(input,ROW,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getROWKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_1__1__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0"
    // InternalSqlParser.g:16157:1: rule__WindowingClauseOperandPreceding__Group_1_2__0 : rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16161:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1 )
            // InternalSqlParser.g:16162:2: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl rule__WindowingClauseOperandPreceding__Group_1_2__1
            {
            pushFollow(FOLLOW_81);
            rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"
    // InternalSqlParser.g:16169:1: rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl : ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16173:1: ( ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) ) )
            // InternalSqlParser.g:16174:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            {
            // InternalSqlParser.g:16174:1: ( ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 ) )
            // InternalSqlParser.g:16175:1: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }
            // InternalSqlParser.g:16176:1: ( rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 )
            // InternalSqlParser.g:16176:2: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__0__Impl"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1"
    // InternalSqlParser.g:16186:1: rule__WindowingClauseOperandPreceding__Group_1_2__1 : rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16190:1: ( rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl )
            // InternalSqlParser.g:16191:2: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"
    // InternalSqlParser.g:16197:1: rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl : ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) ;
    public final void rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16201:1: ( ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) ) )
            // InternalSqlParser.g:16202:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            {
            // InternalSqlParser.g:16202:1: ( ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 ) )
            // InternalSqlParser.g:16203:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }
            // InternalSqlParser.g:16204:1: ( rule__WindowingClauseOperandPreceding__Alternatives_1_2_1 )
            // InternalSqlParser.g:16204:2: rule__WindowingClauseOperandPreceding__Alternatives_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__WindowingClauseOperandPreceding__Alternatives_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getAlternatives_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__Group_1_2__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group__0"
    // InternalSqlParser.g:16218:1: rule__OrderByClause__Group__0 : rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 ;
    public final void rule__OrderByClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16222:1: ( rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1 )
            // InternalSqlParser.g:16223:2: rule__OrderByClause__Group__0__Impl rule__OrderByClause__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__OrderByClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0"


    // $ANTLR start "rule__OrderByClause__Group__0__Impl"
    // InternalSqlParser.g:16230:1: rule__OrderByClause__Group__0__Impl : ( ( rule__OrderByClause__Alternatives_0 ) ) ;
    public final void rule__OrderByClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16234:1: ( ( ( rule__OrderByClause__Alternatives_0 ) ) )
            // InternalSqlParser.g:16235:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            {
            // InternalSqlParser.g:16235:1: ( ( rule__OrderByClause__Alternatives_0 ) )
            // InternalSqlParser.g:16236:1: ( rule__OrderByClause__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }
            // InternalSqlParser.g:16237:1: ( rule__OrderByClause__Alternatives_0 )
            // InternalSqlParser.g:16237:2: rule__OrderByClause__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group__1"
    // InternalSqlParser.g:16247:1: rule__OrderByClause__Group__1 : rule__OrderByClause__Group__1__Impl ;
    public final void rule__OrderByClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16251:1: ( rule__OrderByClause__Group__1__Impl )
            // InternalSqlParser.g:16252:2: rule__OrderByClause__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1"


    // $ANTLR start "rule__OrderByClause__Group__1__Impl"
    // InternalSqlParser.g:16258:1: rule__OrderByClause__Group__1__Impl : ( ( rule__OrderByClause__ArgsAssignment_1 ) ) ;
    public final void rule__OrderByClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16262:1: ( ( ( rule__OrderByClause__ArgsAssignment_1 ) ) )
            // InternalSqlParser.g:16263:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            {
            // InternalSqlParser.g:16263:1: ( ( rule__OrderByClause__ArgsAssignment_1 ) )
            // InternalSqlParser.g:16264:1: ( rule__OrderByClause__ArgsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }
            // InternalSqlParser.g:16265:1: ( rule__OrderByClause__ArgsAssignment_1 )
            // InternalSqlParser.g:16265:2: rule__OrderByClause__ArgsAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__ArgsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0"
    // InternalSqlParser.g:16279:1: rule__OrderByClause__Group_0_0__0 : rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 ;
    public final void rule__OrderByClause__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16283:1: ( rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1 )
            // InternalSqlParser.g:16284:2: rule__OrderByClause__Group_0_0__0__Impl rule__OrderByClause__Group_0_0__1
            {
            pushFollow(FOLLOW_25);
            rule__OrderByClause__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0"


    // $ANTLR start "rule__OrderByClause__Group_0_0__0__Impl"
    // InternalSqlParser.g:16291:1: rule__OrderByClause__Group_0_0__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16295:1: ( ( ORDER ) )
            // InternalSqlParser.g:16296:1: ( ORDER )
            {
            // InternalSqlParser.g:16296:1: ( ORDER )
            // InternalSqlParser.g:16297:1: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1"
    // InternalSqlParser.g:16310:1: rule__OrderByClause__Group_0_0__1 : rule__OrderByClause__Group_0_0__1__Impl ;
    public final void rule__OrderByClause__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16314:1: ( rule__OrderByClause__Group_0_0__1__Impl )
            // InternalSqlParser.g:16315:2: rule__OrderByClause__Group_0_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1"


    // $ANTLR start "rule__OrderByClause__Group_0_0__1__Impl"
    // InternalSqlParser.g:16321:1: rule__OrderByClause__Group_0_0__1__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16325:1: ( ( BY ) )
            // InternalSqlParser.g:16326:1: ( BY )
            {
            // InternalSqlParser.g:16326:1: ( BY )
            // InternalSqlParser.g:16327:1: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_0__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0"
    // InternalSqlParser.g:16344:1: rule__OrderByClause__Group_0_1__0 : rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 ;
    public final void rule__OrderByClause__Group_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16348:1: ( rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1 )
            // InternalSqlParser.g:16349:2: rule__OrderByClause__Group_0_1__0__Impl rule__OrderByClause__Group_0_1__1
            {
            pushFollow(FOLLOW_83);
            rule__OrderByClause__Group_0_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0"


    // $ANTLR start "rule__OrderByClause__Group_0_1__0__Impl"
    // InternalSqlParser.g:16356:1: rule__OrderByClause__Group_0_1__0__Impl : ( ORDER ) ;
    public final void rule__OrderByClause__Group_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16360:1: ( ( ORDER ) )
            // InternalSqlParser.g:16361:1: ( ORDER )
            {
            // InternalSqlParser.g:16361:1: ( ORDER )
            // InternalSqlParser.g:16362:1: ORDER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }
            match(input,ORDER,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getORDERKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__0__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1"
    // InternalSqlParser.g:16375:1: rule__OrderByClause__Group_0_1__1 : rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 ;
    public final void rule__OrderByClause__Group_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16379:1: ( rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2 )
            // InternalSqlParser.g:16380:2: rule__OrderByClause__Group_0_1__1__Impl rule__OrderByClause__Group_0_1__2
            {
            pushFollow(FOLLOW_25);
            rule__OrderByClause__Group_0_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1"


    // $ANTLR start "rule__OrderByClause__Group_0_1__1__Impl"
    // InternalSqlParser.g:16387:1: rule__OrderByClause__Group_0_1__1__Impl : ( SIBLINGS ) ;
    public final void rule__OrderByClause__Group_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16391:1: ( ( SIBLINGS ) )
            // InternalSqlParser.g:16392:1: ( SIBLINGS )
            {
            // InternalSqlParser.g:16392:1: ( SIBLINGS )
            // InternalSqlParser.g:16393:1: SIBLINGS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }
            match(input,SIBLINGS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getSIBLINGSKeyword_0_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__1__Impl"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2"
    // InternalSqlParser.g:16406:1: rule__OrderByClause__Group_0_1__2 : rule__OrderByClause__Group_0_1__2__Impl ;
    public final void rule__OrderByClause__Group_0_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16410:1: ( rule__OrderByClause__Group_0_1__2__Impl )
            // InternalSqlParser.g:16411:2: rule__OrderByClause__Group_0_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClause__Group_0_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2"


    // $ANTLR start "rule__OrderByClause__Group_0_1__2__Impl"
    // InternalSqlParser.g:16417:1: rule__OrderByClause__Group_0_1__2__Impl : ( BY ) ;
    public final void rule__OrderByClause__Group_0_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16421:1: ( ( BY ) )
            // InternalSqlParser.g:16422:1: ( BY )
            {
            // InternalSqlParser.g:16422:1: ( BY )
            // InternalSqlParser.g:16423:1: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getBYKeyword_0_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__Group_0_1__2__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0"
    // InternalSqlParser.g:16442:1: rule__OrderByClauseArgs__Group__0 : rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 ;
    public final void rule__OrderByClauseArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16446:1: ( rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1 )
            // InternalSqlParser.g:16447:2: rule__OrderByClauseArgs__Group__0__Impl rule__OrderByClauseArgs__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__OrderByClauseArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group__0__Impl"
    // InternalSqlParser.g:16454:1: rule__OrderByClauseArgs__Group__0__Impl : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16458:1: ( ( ruleOrderByClauseArg ) )
            // InternalSqlParser.g:16459:1: ( ruleOrderByClauseArg )
            {
            // InternalSqlParser.g:16459:1: ( ruleOrderByClauseArg )
            // InternalSqlParser.g:16460:1: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOrderByClauseArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1"
    // InternalSqlParser.g:16471:1: rule__OrderByClauseArgs__Group__1 : rule__OrderByClauseArgs__Group__1__Impl ;
    public final void rule__OrderByClauseArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16475:1: ( rule__OrderByClauseArgs__Group__1__Impl )
            // InternalSqlParser.g:16476:2: rule__OrderByClauseArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group__1__Impl"
    // InternalSqlParser.g:16482:1: rule__OrderByClauseArgs__Group__1__Impl : ( ( rule__OrderByClauseArgs__Group_1__0 )? ) ;
    public final void rule__OrderByClauseArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16486:1: ( ( ( rule__OrderByClauseArgs__Group_1__0 )? ) )
            // InternalSqlParser.g:16487:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            {
            // InternalSqlParser.g:16487:1: ( ( rule__OrderByClauseArgs__Group_1__0 )? )
            // InternalSqlParser.g:16488:1: ( rule__OrderByClauseArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:16489:1: ( rule__OrderByClauseArgs__Group_1__0 )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==Comma) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalSqlParser.g:16489:2: rule__OrderByClauseArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0"
    // InternalSqlParser.g:16503:1: rule__OrderByClauseArgs__Group_1__0 : rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16507:1: ( rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1 )
            // InternalSqlParser.g:16508:2: rule__OrderByClauseArgs__Group_1__0__Impl rule__OrderByClauseArgs__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__OrderByClauseArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__0__Impl"
    // InternalSqlParser.g:16515:1: rule__OrderByClauseArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__OrderByClauseArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16519:1: ( ( () ) )
            // InternalSqlParser.g:16520:1: ( () )
            {
            // InternalSqlParser.g:16520:1: ( () )
            // InternalSqlParser.g:16521:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:16522:1: ()
            // InternalSqlParser.g:16524:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getOBCArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1"
    // InternalSqlParser.g:16534:1: rule__OrderByClauseArgs__Group_1__1 : rule__OrderByClauseArgs__Group_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16538:1: ( rule__OrderByClauseArgs__Group_1__1__Impl )
            // InternalSqlParser.g:16539:2: rule__OrderByClauseArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1__1__Impl"
    // InternalSqlParser.g:16545:1: rule__OrderByClauseArgs__Group_1__1__Impl : ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) ;
    public final void rule__OrderByClauseArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16549:1: ( ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:16550:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:16550:1: ( ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* ) )
            // InternalSqlParser.g:16551:1: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) ) ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:16551:1: ( ( rule__OrderByClauseArgs__Group_1_1__0 ) )
            // InternalSqlParser.g:16552:1: ( rule__OrderByClauseArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:16553:1: ( rule__OrderByClauseArgs__Group_1_1__0 )
            // InternalSqlParser.g:16553:2: rule__OrderByClauseArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__OrderByClauseArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:16556:1: ( ( rule__OrderByClauseArgs__Group_1_1__0 )* )
            // InternalSqlParser.g:16557:1: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:16558:1: ( rule__OrderByClauseArgs__Group_1_1__0 )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==Comma) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalSqlParser.g:16558:2: rule__OrderByClauseArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__OrderByClauseArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0"
    // InternalSqlParser.g:16573:1: rule__OrderByClauseArgs__Group_1_1__0 : rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 ;
    public final void rule__OrderByClauseArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16577:1: ( rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1 )
            // InternalSqlParser.g:16578:2: rule__OrderByClauseArgs__Group_1_1__0__Impl rule__OrderByClauseArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_78);
            rule__OrderByClauseArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__0__Impl"
    // InternalSqlParser.g:16585:1: rule__OrderByClauseArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16589:1: ( ( Comma ) )
            // InternalSqlParser.g:16590:1: ( Comma )
            {
            // InternalSqlParser.g:16590:1: ( Comma )
            // InternalSqlParser.g:16591:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1"
    // InternalSqlParser.g:16604:1: rule__OrderByClauseArgs__Group_1_1__1 : rule__OrderByClauseArgs__Group_1_1__1__Impl ;
    public final void rule__OrderByClauseArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16608:1: ( rule__OrderByClauseArgs__Group_1_1__1__Impl )
            // InternalSqlParser.g:16609:2: rule__OrderByClauseArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1"


    // $ANTLR start "rule__OrderByClauseArgs__Group_1_1__1__Impl"
    // InternalSqlParser.g:16615:1: rule__OrderByClauseArgs__Group_1_1__1__Impl : ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OrderByClauseArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16619:1: ( ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:16620:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:16620:1: ( ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:16621:1: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:16622:1: ( rule__OrderByClauseArgs__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:16622:2: rule__OrderByClauseArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__0"
    // InternalSqlParser.g:16636:1: rule__OrderByClauseArg__Group__0 : rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 ;
    public final void rule__OrderByClauseArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16640:1: ( rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1 )
            // InternalSqlParser.g:16641:2: rule__OrderByClauseArg__Group__0__Impl rule__OrderByClauseArg__Group__1
            {
            pushFollow(FOLLOW_84);
            rule__OrderByClauseArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0"


    // $ANTLR start "rule__OrderByClauseArg__Group__0__Impl"
    // InternalSqlParser.g:16648:1: rule__OrderByClauseArg__Group__0__Impl : ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) ;
    public final void rule__OrderByClauseArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16652:1: ( ( ( rule__OrderByClauseArg__ColAssignment_0 ) ) )
            // InternalSqlParser.g:16653:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            {
            // InternalSqlParser.g:16653:1: ( ( rule__OrderByClauseArg__ColAssignment_0 ) )
            // InternalSqlParser.g:16654:1: ( rule__OrderByClauseArg__ColAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }
            // InternalSqlParser.g:16655:1: ( rule__OrderByClauseArg__ColAssignment_0 )
            // InternalSqlParser.g:16655:2: rule__OrderByClauseArg__ColAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__ColAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__1"
    // InternalSqlParser.g:16665:1: rule__OrderByClauseArg__Group__1 : rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 ;
    public final void rule__OrderByClauseArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16669:1: ( rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2 )
            // InternalSqlParser.g:16670:2: rule__OrderByClauseArg__Group__1__Impl rule__OrderByClauseArg__Group__2
            {
            pushFollow(FOLLOW_84);
            rule__OrderByClauseArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1"


    // $ANTLR start "rule__OrderByClauseArg__Group__1__Impl"
    // InternalSqlParser.g:16677:1: rule__OrderByClauseArg__Group__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_1 )? ) ;
    public final void rule__OrderByClauseArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16681:1: ( ( ( rule__OrderByClauseArg__Alternatives_1 )? ) )
            // InternalSqlParser.g:16682:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            {
            // InternalSqlParser.g:16682:1: ( ( rule__OrderByClauseArg__Alternatives_1 )? )
            // InternalSqlParser.g:16683:1: ( rule__OrderByClauseArg__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:16684:1: ( rule__OrderByClauseArg__Alternatives_1 )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==DESC||LA134_0==ASC) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalSqlParser.g:16684:2: rule__OrderByClauseArg__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__1__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group__2"
    // InternalSqlParser.g:16694:1: rule__OrderByClauseArg__Group__2 : rule__OrderByClauseArg__Group__2__Impl ;
    public final void rule__OrderByClauseArg__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16698:1: ( rule__OrderByClauseArg__Group__2__Impl )
            // InternalSqlParser.g:16699:2: rule__OrderByClauseArg__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2"


    // $ANTLR start "rule__OrderByClauseArg__Group__2__Impl"
    // InternalSqlParser.g:16705:1: rule__OrderByClauseArg__Group__2__Impl : ( ( rule__OrderByClauseArg__Group_2__0 )? ) ;
    public final void rule__OrderByClauseArg__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16709:1: ( ( ( rule__OrderByClauseArg__Group_2__0 )? ) )
            // InternalSqlParser.g:16710:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            {
            // InternalSqlParser.g:16710:1: ( ( rule__OrderByClauseArg__Group_2__0 )? )
            // InternalSqlParser.g:16711:1: ( rule__OrderByClauseArg__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }
            // InternalSqlParser.g:16712:1: ( rule__OrderByClauseArg__Group_2__0 )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==NULLS) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSqlParser.g:16712:2: rule__OrderByClauseArg__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OrderByClauseArg__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group__2__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0"
    // InternalSqlParser.g:16728:1: rule__OrderByClauseArg__Group_2__0 : rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 ;
    public final void rule__OrderByClauseArg__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16732:1: ( rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1 )
            // InternalSqlParser.g:16733:2: rule__OrderByClauseArg__Group_2__0__Impl rule__OrderByClauseArg__Group_2__1
            {
            pushFollow(FOLLOW_85);
            rule__OrderByClauseArg__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__0__Impl"
    // InternalSqlParser.g:16740:1: rule__OrderByClauseArg__Group_2__0__Impl : ( NULLS ) ;
    public final void rule__OrderByClauseArg__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16744:1: ( ( NULLS ) )
            // InternalSqlParser.g:16745:1: ( NULLS )
            {
            // InternalSqlParser.g:16745:1: ( NULLS )
            // InternalSqlParser.g:16746:1: NULLS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }
            match(input,NULLS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getNULLSKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__0__Impl"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1"
    // InternalSqlParser.g:16759:1: rule__OrderByClauseArg__Group_2__1 : rule__OrderByClauseArg__Group_2__1__Impl ;
    public final void rule__OrderByClauseArg__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16763:1: ( rule__OrderByClauseArg__Group_2__1__Impl )
            // InternalSqlParser.g:16764:2: rule__OrderByClauseArg__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1"


    // $ANTLR start "rule__OrderByClauseArg__Group_2__1__Impl"
    // InternalSqlParser.g:16770:1: rule__OrderByClauseArg__Group_2__1__Impl : ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) ;
    public final void rule__OrderByClauseArg__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16774:1: ( ( ( rule__OrderByClauseArg__Alternatives_2_1 ) ) )
            // InternalSqlParser.g:16775:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            {
            // InternalSqlParser.g:16775:1: ( ( rule__OrderByClauseArg__Alternatives_2_1 ) )
            // InternalSqlParser.g:16776:1: ( rule__OrderByClauseArg__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }
            // InternalSqlParser.g:16777:1: ( rule__OrderByClauseArg__Alternatives_2_1 )
            // InternalSqlParser.g:16777:2: rule__OrderByClauseArg__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OrderByClauseArg__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__Group_2__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__0"
    // InternalSqlParser.g:16791:1: rule__QueryPartitionClause__Group__0 : rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 ;
    public final void rule__QueryPartitionClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16795:1: ( rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1 )
            // InternalSqlParser.g:16796:2: rule__QueryPartitionClause__Group__0__Impl rule__QueryPartitionClause__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__QueryPartitionClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0"


    // $ANTLR start "rule__QueryPartitionClause__Group__0__Impl"
    // InternalSqlParser.g:16803:1: rule__QueryPartitionClause__Group__0__Impl : ( PARTITION ) ;
    public final void rule__QueryPartitionClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16807:1: ( ( PARTITION ) )
            // InternalSqlParser.g:16808:1: ( PARTITION )
            {
            // InternalSqlParser.g:16808:1: ( PARTITION )
            // InternalSqlParser.g:16809:1: PARTITION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }
            match(input,PARTITION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getPARTITIONKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__1"
    // InternalSqlParser.g:16822:1: rule__QueryPartitionClause__Group__1 : rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 ;
    public final void rule__QueryPartitionClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16826:1: ( rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2 )
            // InternalSqlParser.g:16827:2: rule__QueryPartitionClause__Group__1__Impl rule__QueryPartitionClause__Group__2
            {
            pushFollow(FOLLOW_78);
            rule__QueryPartitionClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1"


    // $ANTLR start "rule__QueryPartitionClause__Group__1__Impl"
    // InternalSqlParser.g:16834:1: rule__QueryPartitionClause__Group__1__Impl : ( BY ) ;
    public final void rule__QueryPartitionClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16838:1: ( ( BY ) )
            // InternalSqlParser.g:16839:1: ( BY )
            {
            // InternalSqlParser.g:16839:1: ( BY )
            // InternalSqlParser.g:16840:1: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getBYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group__2"
    // InternalSqlParser.g:16853:1: rule__QueryPartitionClause__Group__2 : rule__QueryPartitionClause__Group__2__Impl ;
    public final void rule__QueryPartitionClause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16857:1: ( rule__QueryPartitionClause__Group__2__Impl )
            // InternalSqlParser.g:16858:2: rule__QueryPartitionClause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2"


    // $ANTLR start "rule__QueryPartitionClause__Group__2__Impl"
    // InternalSqlParser.g:16864:1: rule__QueryPartitionClause__Group__2__Impl : ( ( rule__QueryPartitionClause__Alternatives_2 ) ) ;
    public final void rule__QueryPartitionClause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16868:1: ( ( ( rule__QueryPartitionClause__Alternatives_2 ) ) )
            // InternalSqlParser.g:16869:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            {
            // InternalSqlParser.g:16869:1: ( ( rule__QueryPartitionClause__Alternatives_2 ) )
            // InternalSqlParser.g:16870:1: ( rule__QueryPartitionClause__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }
            // InternalSqlParser.g:16871:1: ( rule__QueryPartitionClause__Alternatives_2 )
            // InternalSqlParser.g:16871:2: rule__QueryPartitionClause__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group__2__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0"
    // InternalSqlParser.g:16887:1: rule__QueryPartitionClause__Group_2_1__0 : rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 ;
    public final void rule__QueryPartitionClause__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16891:1: ( rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1 )
            // InternalSqlParser.g:16892:2: rule__QueryPartitionClause__Group_2_1__0__Impl rule__QueryPartitionClause__Group_2_1__1
            {
            pushFollow(FOLLOW_78);
            rule__QueryPartitionClause__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__0__Impl"
    // InternalSqlParser.g:16899:1: rule__QueryPartitionClause__Group_2_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16903:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:16904:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:16904:1: ( LeftParenthesis )
            // InternalSqlParser.g:16905:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getLeftParenthesisKeyword_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__0__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1"
    // InternalSqlParser.g:16918:1: rule__QueryPartitionClause__Group_2_1__1 : rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 ;
    public final void rule__QueryPartitionClause__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16922:1: ( rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2 )
            // InternalSqlParser.g:16923:2: rule__QueryPartitionClause__Group_2_1__1__Impl rule__QueryPartitionClause__Group_2_1__2
            {
            pushFollow(FOLLOW_7);
            rule__QueryPartitionClause__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__1__Impl"
    // InternalSqlParser.g:16930:1: rule__QueryPartitionClause__Group_2_1__1__Impl : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16934:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSqlParser.g:16935:1: ( ruleAnalyticExprArgs )
            {
            // InternalSqlParser.g:16935:1: ( ruleAnalyticExprArgs )
            // InternalSqlParser.g:16936:1: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getAnalyticExprArgsParserRuleCall_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__1__Impl"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2"
    // InternalSqlParser.g:16947:1: rule__QueryPartitionClause__Group_2_1__2 : rule__QueryPartitionClause__Group_2_1__2__Impl ;
    public final void rule__QueryPartitionClause__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16951:1: ( rule__QueryPartitionClause__Group_2_1__2__Impl )
            // InternalSqlParser.g:16952:2: rule__QueryPartitionClause__Group_2_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__QueryPartitionClause__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2"


    // $ANTLR start "rule__QueryPartitionClause__Group_2_1__2__Impl"
    // InternalSqlParser.g:16958:1: rule__QueryPartitionClause__Group_2_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__QueryPartitionClause__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16962:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:16963:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:16963:1: ( RightParenthesis )
            // InternalSqlParser.g:16964:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getRightParenthesisKeyword_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__Group_2_1__2__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0"
    // InternalSqlParser.g:16983:1: rule__AnalyticExprArgs__Group__0 : rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 ;
    public final void rule__AnalyticExprArgs__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16987:1: ( rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1 )
            // InternalSqlParser.g:16988:2: rule__AnalyticExprArgs__Group__0__Impl rule__AnalyticExprArgs__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__AnalyticExprArgs__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group__0__Impl"
    // InternalSqlParser.g:16995:1: rule__AnalyticExprArgs__Group__0__Impl : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:16999:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:17000:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:17000:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:17001:1: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAnalyticExprArgParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1"
    // InternalSqlParser.g:17012:1: rule__AnalyticExprArgs__Group__1 : rule__AnalyticExprArgs__Group__1__Impl ;
    public final void rule__AnalyticExprArgs__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17016:1: ( rule__AnalyticExprArgs__Group__1__Impl )
            // InternalSqlParser.g:17017:2: rule__AnalyticExprArgs__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group__1__Impl"
    // InternalSqlParser.g:17023:1: rule__AnalyticExprArgs__Group__1__Impl : ( ( rule__AnalyticExprArgs__Group_1__0 )? ) ;
    public final void rule__AnalyticExprArgs__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17027:1: ( ( ( rule__AnalyticExprArgs__Group_1__0 )? ) )
            // InternalSqlParser.g:17028:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            {
            // InternalSqlParser.g:17028:1: ( ( rule__AnalyticExprArgs__Group_1__0 )? )
            // InternalSqlParser.g:17029:1: ( rule__AnalyticExprArgs__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:17030:1: ( rule__AnalyticExprArgs__Group_1__0 )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==Comma) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // InternalSqlParser.g:17030:2: rule__AnalyticExprArgs__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArgs__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0"
    // InternalSqlParser.g:17044:1: rule__AnalyticExprArgs__Group_1__0 : rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17048:1: ( rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1 )
            // InternalSqlParser.g:17049:2: rule__AnalyticExprArgs__Group_1__0__Impl rule__AnalyticExprArgs__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__AnalyticExprArgs__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__0__Impl"
    // InternalSqlParser.g:17056:1: rule__AnalyticExprArgs__Group_1__0__Impl : ( () ) ;
    public final void rule__AnalyticExprArgs__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17060:1: ( ( () ) )
            // InternalSqlParser.g:17061:1: ( () )
            {
            // InternalSqlParser.g:17061:1: ( () )
            // InternalSqlParser.g:17062:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:17063:1: ()
            // InternalSqlParser.g:17065:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getAExpArgsEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1"
    // InternalSqlParser.g:17075:1: rule__AnalyticExprArgs__Group_1__1 : rule__AnalyticExprArgs__Group_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17079:1: ( rule__AnalyticExprArgs__Group_1__1__Impl )
            // InternalSqlParser.g:17080:2: rule__AnalyticExprArgs__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1__1__Impl"
    // InternalSqlParser.g:17086:1: rule__AnalyticExprArgs__Group_1__1__Impl : ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) ;
    public final void rule__AnalyticExprArgs__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17090:1: ( ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:17091:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:17091:1: ( ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* ) )
            // InternalSqlParser.g:17092:1: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) ) ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:17092:1: ( ( rule__AnalyticExprArgs__Group_1_1__0 ) )
            // InternalSqlParser.g:17093:1: ( rule__AnalyticExprArgs__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:17094:1: ( rule__AnalyticExprArgs__Group_1_1__0 )
            // InternalSqlParser.g:17094:2: rule__AnalyticExprArgs__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__AnalyticExprArgs__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:17097:1: ( ( rule__AnalyticExprArgs__Group_1_1__0 )* )
            // InternalSqlParser.g:17098:1: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:17099:1: ( rule__AnalyticExprArgs__Group_1_1__0 )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==Comma) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // InternalSqlParser.g:17099:2: rule__AnalyticExprArgs__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__AnalyticExprArgs__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0"
    // InternalSqlParser.g:17114:1: rule__AnalyticExprArgs__Group_1_1__0 : rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 ;
    public final void rule__AnalyticExprArgs__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17118:1: ( rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1 )
            // InternalSqlParser.g:17119:2: rule__AnalyticExprArgs__Group_1_1__0__Impl rule__AnalyticExprArgs__Group_1_1__1
            {
            pushFollow(FOLLOW_78);
            rule__AnalyticExprArgs__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__0__Impl"
    // InternalSqlParser.g:17126:1: rule__AnalyticExprArgs__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17130:1: ( ( Comma ) )
            // InternalSqlParser.g:17131:1: ( Comma )
            {
            // InternalSqlParser.g:17131:1: ( Comma )
            // InternalSqlParser.g:17132:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__0__Impl"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1"
    // InternalSqlParser.g:17145:1: rule__AnalyticExprArgs__Group_1_1__1 : rule__AnalyticExprArgs__Group_1_1__1__Impl ;
    public final void rule__AnalyticExprArgs__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17149:1: ( rule__AnalyticExprArgs__Group_1_1__1__Impl )
            // InternalSqlParser.g:17150:2: rule__AnalyticExprArgs__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1"


    // $ANTLR start "rule__AnalyticExprArgs__Group_1_1__1__Impl"
    // InternalSqlParser.g:17156:1: rule__AnalyticExprArgs__Group_1_1__1__Impl : ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__AnalyticExprArgs__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17160:1: ( ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:17161:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:17161:1: ( ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:17162:1: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:17163:1: ( rule__AnalyticExprArgs__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:17163:2: rule__AnalyticExprArgs__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArgs__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__Group_1_1__1__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__0"
    // InternalSqlParser.g:17177:1: rule__AnalyticExprArg__Group__0 : rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 ;
    public final void rule__AnalyticExprArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17181:1: ( rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1 )
            // InternalSqlParser.g:17182:2: rule__AnalyticExprArg__Group__0__Impl rule__AnalyticExprArg__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__AnalyticExprArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0"


    // $ANTLR start "rule__AnalyticExprArg__Group__0__Impl"
    // InternalSqlParser.g:17189:1: rule__AnalyticExprArg__Group__0__Impl : ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) ;
    public final void rule__AnalyticExprArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17193:1: ( ( ( rule__AnalyticExprArg__CeAssignment_0 ) ) )
            // InternalSqlParser.g:17194:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            {
            // InternalSqlParser.g:17194:1: ( ( rule__AnalyticExprArg__CeAssignment_0 ) )
            // InternalSqlParser.g:17195:1: ( rule__AnalyticExprArg__CeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }
            // InternalSqlParser.g:17196:1: ( rule__AnalyticExprArg__CeAssignment_0 )
            // InternalSqlParser.g:17196:2: rule__AnalyticExprArg__CeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__CeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__0__Impl"


    // $ANTLR start "rule__AnalyticExprArg__Group__1"
    // InternalSqlParser.g:17206:1: rule__AnalyticExprArg__Group__1 : rule__AnalyticExprArg__Group__1__Impl ;
    public final void rule__AnalyticExprArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17210:1: ( rule__AnalyticExprArg__Group__1__Impl )
            // InternalSqlParser.g:17211:2: rule__AnalyticExprArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AnalyticExprArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1"


    // $ANTLR start "rule__AnalyticExprArg__Group__1__Impl"
    // InternalSqlParser.g:17217:1: rule__AnalyticExprArg__Group__1__Impl : ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) ;
    public final void rule__AnalyticExprArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17221:1: ( ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? ) )
            // InternalSqlParser.g:17222:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            {
            // InternalSqlParser.g:17222:1: ( ( rule__AnalyticExprArg__ColAliasAssignment_1 )? )
            // InternalSqlParser.g:17223:1: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }
            // InternalSqlParser.g:17224:1: ( rule__AnalyticExprArg__ColAliasAssignment_1 )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( ((LA138_0>=RULE_STRING && LA138_0<=RULE_ID)) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSqlParser.g:17224:2: rule__AnalyticExprArg__ColAliasAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__AnalyticExprArg__ColAliasAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__0"
    // InternalSqlParser.g:17238:1: rule__OpFunctionArg__Group__0 : rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 ;
    public final void rule__OpFunctionArg__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17242:1: ( rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1 )
            // InternalSqlParser.g:17243:2: rule__OpFunctionArg__Group__0__Impl rule__OpFunctionArg__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__OpFunctionArg__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0"


    // $ANTLR start "rule__OpFunctionArg__Group__0__Impl"
    // InternalSqlParser.g:17250:1: rule__OpFunctionArg__Group__0__Impl : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17254:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSqlParser.g:17255:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSqlParser.g:17255:1: ( ruleOpFunctionArgOperand )
            // InternalSqlParser.g:17256:1: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFunctionArgOperandParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group__1"
    // InternalSqlParser.g:17267:1: rule__OpFunctionArg__Group__1 : rule__OpFunctionArg__Group__1__Impl ;
    public final void rule__OpFunctionArg__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17271:1: ( rule__OpFunctionArg__Group__1__Impl )
            // InternalSqlParser.g:17272:2: rule__OpFunctionArg__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1"


    // $ANTLR start "rule__OpFunctionArg__Group__1__Impl"
    // InternalSqlParser.g:17278:1: rule__OpFunctionArg__Group__1__Impl : ( ( rule__OpFunctionArg__Group_1__0 )? ) ;
    public final void rule__OpFunctionArg__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17282:1: ( ( ( rule__OpFunctionArg__Group_1__0 )? ) )
            // InternalSqlParser.g:17283:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            {
            // InternalSqlParser.g:17283:1: ( ( rule__OpFunctionArg__Group_1__0 )? )
            // InternalSqlParser.g:17284:1: ( rule__OpFunctionArg__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:17285:1: ( rule__OpFunctionArg__Group_1__0 )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==Comma) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSqlParser.g:17285:2: rule__OpFunctionArg__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionArg__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0"
    // InternalSqlParser.g:17299:1: rule__OpFunctionArg__Group_1__0 : rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 ;
    public final void rule__OpFunctionArg__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17303:1: ( rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1 )
            // InternalSqlParser.g:17304:2: rule__OpFunctionArg__Group_1__0__Impl rule__OpFunctionArg__Group_1__1
            {
            pushFollow(FOLLOW_8);
            rule__OpFunctionArg__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1__0__Impl"
    // InternalSqlParser.g:17311:1: rule__OpFunctionArg__Group_1__0__Impl : ( () ) ;
    public final void rule__OpFunctionArg__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17315:1: ( ( () ) )
            // InternalSqlParser.g:17316:1: ( () )
            {
            // InternalSqlParser.g:17316:1: ( () )
            // InternalSqlParser.g:17317:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:17318:1: ()
            // InternalSqlParser.g:17320:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getOpFListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1"
    // InternalSqlParser.g:17330:1: rule__OpFunctionArg__Group_1__1 : rule__OpFunctionArg__Group_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17334:1: ( rule__OpFunctionArg__Group_1__1__Impl )
            // InternalSqlParser.g:17335:2: rule__OpFunctionArg__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1__1__Impl"
    // InternalSqlParser.g:17341:1: rule__OpFunctionArg__Group_1__1__Impl : ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) ;
    public final void rule__OpFunctionArg__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17345:1: ( ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) ) )
            // InternalSqlParser.g:17346:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            {
            // InternalSqlParser.g:17346:1: ( ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* ) )
            // InternalSqlParser.g:17347:1: ( ( rule__OpFunctionArg__Group_1_1__0 ) ) ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            {
            // InternalSqlParser.g:17347:1: ( ( rule__OpFunctionArg__Group_1_1__0 ) )
            // InternalSqlParser.g:17348:1: ( rule__OpFunctionArg__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:17349:1: ( rule__OpFunctionArg__Group_1_1__0 )
            // InternalSqlParser.g:17349:2: rule__OpFunctionArg__Group_1_1__0
            {
            pushFollow(FOLLOW_9);
            rule__OpFunctionArg__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }

            // InternalSqlParser.g:17352:1: ( ( rule__OpFunctionArg__Group_1_1__0 )* )
            // InternalSqlParser.g:17353:1: ( rule__OpFunctionArg__Group_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }
            // InternalSqlParser.g:17354:1: ( rule__OpFunctionArg__Group_1_1__0 )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==Comma) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalSqlParser.g:17354:2: rule__OpFunctionArg__Group_1_1__0
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__OpFunctionArg__Group_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getGroup_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1__1__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0"
    // InternalSqlParser.g:17369:1: rule__OpFunctionArg__Group_1_1__0 : rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 ;
    public final void rule__OpFunctionArg__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17373:1: ( rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1 )
            // InternalSqlParser.g:17374:2: rule__OpFunctionArg__Group_1_1__0__Impl rule__OpFunctionArg__Group_1_1__1
            {
            pushFollow(FOLLOW_86);
            rule__OpFunctionArg__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__0__Impl"
    // InternalSqlParser.g:17381:1: rule__OpFunctionArg__Group_1_1__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionArg__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17385:1: ( ( Comma ) )
            // InternalSqlParser.g:17386:1: ( Comma )
            {
            // InternalSqlParser.g:17386:1: ( Comma )
            // InternalSqlParser.g:17387:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getCommaKeyword_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__0__Impl"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1"
    // InternalSqlParser.g:17400:1: rule__OpFunctionArg__Group_1_1__1 : rule__OpFunctionArg__Group_1_1__1__Impl ;
    public final void rule__OpFunctionArg__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17404:1: ( rule__OpFunctionArg__Group_1_1__1__Impl )
            // InternalSqlParser.g:17405:2: rule__OpFunctionArg__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1"


    // $ANTLR start "rule__OpFunctionArg__Group_1_1__1__Impl"
    // InternalSqlParser.g:17411:1: rule__OpFunctionArg__Group_1_1__1__Impl : ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) ;
    public final void rule__OpFunctionArg__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17415:1: ( ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) ) )
            // InternalSqlParser.g:17416:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            {
            // InternalSqlParser.g:17416:1: ( ( rule__OpFunctionArg__EntriesAssignment_1_1_1 ) )
            // InternalSqlParser.g:17417:1: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }
            // InternalSqlParser.g:17418:1: ( rule__OpFunctionArg__EntriesAssignment_1_1_1 )
            // InternalSqlParser.g:17418:2: rule__OpFunctionArg__EntriesAssignment_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArg__EntriesAssignment_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesAssignment_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__Group_1_1__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__0"
    // InternalSqlParser.g:17432:1: rule__OpFunctionCast__Group__0 : rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 ;
    public final void rule__OpFunctionCast__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17436:1: ( rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1 )
            // InternalSqlParser.g:17437:2: rule__OpFunctionCast__Group__0__Impl rule__OpFunctionCast__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__OpFunctionCast__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0"


    // $ANTLR start "rule__OpFunctionCast__Group__0__Impl"
    // InternalSqlParser.g:17444:1: rule__OpFunctionCast__Group__0__Impl : ( CAST ) ;
    public final void rule__OpFunctionCast__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17448:1: ( ( CAST ) )
            // InternalSqlParser.g:17449:1: ( CAST )
            {
            // InternalSqlParser.g:17449:1: ( CAST )
            // InternalSqlParser.g:17450:1: CAST
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }
            match(input,CAST,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCASTKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__1"
    // InternalSqlParser.g:17463:1: rule__OpFunctionCast__Group__1 : rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 ;
    public final void rule__OpFunctionCast__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17467:1: ( rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2 )
            // InternalSqlParser.g:17468:2: rule__OpFunctionCast__Group__1__Impl rule__OpFunctionCast__Group__2
            {
            pushFollow(FOLLOW_48);
            rule__OpFunctionCast__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1"


    // $ANTLR start "rule__OpFunctionCast__Group__1__Impl"
    // InternalSqlParser.g:17475:1: rule__OpFunctionCast__Group__1__Impl : ( ( rule__OpFunctionCast__OpAssignment_1 ) ) ;
    public final void rule__OpFunctionCast__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17479:1: ( ( ( rule__OpFunctionCast__OpAssignment_1 ) ) )
            // InternalSqlParser.g:17480:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            {
            // InternalSqlParser.g:17480:1: ( ( rule__OpFunctionCast__OpAssignment_1 ) )
            // InternalSqlParser.g:17481:1: ( rule__OpFunctionCast__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }
            // InternalSqlParser.g:17482:1: ( rule__OpFunctionCast__OpAssignment_1 )
            // InternalSqlParser.g:17482:2: rule__OpFunctionCast__OpAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__2"
    // InternalSqlParser.g:17492:1: rule__OpFunctionCast__Group__2 : rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 ;
    public final void rule__OpFunctionCast__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17496:1: ( rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3 )
            // InternalSqlParser.g:17497:2: rule__OpFunctionCast__Group__2__Impl rule__OpFunctionCast__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__OpFunctionCast__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2"


    // $ANTLR start "rule__OpFunctionCast__Group__2__Impl"
    // InternalSqlParser.g:17504:1: rule__OpFunctionCast__Group__2__Impl : ( AS ) ;
    public final void rule__OpFunctionCast__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17508:1: ( ( AS ) )
            // InternalSqlParser.g:17509:1: ( AS )
            {
            // InternalSqlParser.g:17509:1: ( AS )
            // InternalSqlParser.g:17510:1: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getASKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__3"
    // InternalSqlParser.g:17523:1: rule__OpFunctionCast__Group__3 : rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 ;
    public final void rule__OpFunctionCast__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17527:1: ( rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4 )
            // InternalSqlParser.g:17528:2: rule__OpFunctionCast__Group__3__Impl rule__OpFunctionCast__Group__4
            {
            pushFollow(FOLLOW_87);
            rule__OpFunctionCast__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3"


    // $ANTLR start "rule__OpFunctionCast__Group__3__Impl"
    // InternalSqlParser.g:17535:1: rule__OpFunctionCast__Group__3__Impl : ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) ;
    public final void rule__OpFunctionCast__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17539:1: ( ( ( rule__OpFunctionCast__TypeAssignment_3 ) ) )
            // InternalSqlParser.g:17540:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            {
            // InternalSqlParser.g:17540:1: ( ( rule__OpFunctionCast__TypeAssignment_3 ) )
            // InternalSqlParser.g:17541:1: ( rule__OpFunctionCast__TypeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }
            // InternalSqlParser.g:17542:1: ( rule__OpFunctionCast__TypeAssignment_3 )
            // InternalSqlParser.g:17542:2: rule__OpFunctionCast__TypeAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__TypeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__4"
    // InternalSqlParser.g:17552:1: rule__OpFunctionCast__Group__4 : rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 ;
    public final void rule__OpFunctionCast__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17556:1: ( rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5 )
            // InternalSqlParser.g:17557:2: rule__OpFunctionCast__Group__4__Impl rule__OpFunctionCast__Group__5
            {
            pushFollow(FOLLOW_87);
            rule__OpFunctionCast__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4"


    // $ANTLR start "rule__OpFunctionCast__Group__4__Impl"
    // InternalSqlParser.g:17564:1: rule__OpFunctionCast__Group__4__Impl : ( ( rule__OpFunctionCast__Group_4__0 )? ) ;
    public final void rule__OpFunctionCast__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17568:1: ( ( ( rule__OpFunctionCast__Group_4__0 )? ) )
            // InternalSqlParser.g:17569:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            {
            // InternalSqlParser.g:17569:1: ( ( rule__OpFunctionCast__Group_4__0 )? )
            // InternalSqlParser.g:17570:1: ( rule__OpFunctionCast__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }
            // InternalSqlParser.g:17571:1: ( rule__OpFunctionCast__Group_4__0 )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==LeftParenthesis) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalSqlParser.g:17571:2: rule__OpFunctionCast__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__4__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group__5"
    // InternalSqlParser.g:17581:1: rule__OpFunctionCast__Group__5 : rule__OpFunctionCast__Group__5__Impl ;
    public final void rule__OpFunctionCast__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17585:1: ( rule__OpFunctionCast__Group__5__Impl )
            // InternalSqlParser.g:17586:2: rule__OpFunctionCast__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5"


    // $ANTLR start "rule__OpFunctionCast__Group__5__Impl"
    // InternalSqlParser.g:17592:1: rule__OpFunctionCast__Group__5__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17596:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:17597:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:17597:1: ( RightParenthesis )
            // InternalSqlParser.g:17598:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group__5__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0"
    // InternalSqlParser.g:17623:1: rule__OpFunctionCast__Group_4__0 : rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 ;
    public final void rule__OpFunctionCast__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17627:1: ( rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1 )
            // InternalSqlParser.g:17628:2: rule__OpFunctionCast__Group_4__0__Impl rule__OpFunctionCast__Group_4__1
            {
            pushFollow(FOLLOW_13);
            rule__OpFunctionCast__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4__0__Impl"
    // InternalSqlParser.g:17635:1: rule__OpFunctionCast__Group_4__0__Impl : ( LeftParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17639:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:17640:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:17640:1: ( LeftParenthesis )
            // InternalSqlParser.g:17641:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getLeftParenthesisKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1"
    // InternalSqlParser.g:17654:1: rule__OpFunctionCast__Group_4__1 : rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 ;
    public final void rule__OpFunctionCast__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17658:1: ( rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2 )
            // InternalSqlParser.g:17659:2: rule__OpFunctionCast__Group_4__1__Impl rule__OpFunctionCast__Group_4__2
            {
            pushFollow(FOLLOW_88);
            rule__OpFunctionCast__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4__1__Impl"
    // InternalSqlParser.g:17666:1: rule__OpFunctionCast__Group_4__1__Impl : ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17670:1: ( ( ( rule__OpFunctionCast__PAssignment_4_1 ) ) )
            // InternalSqlParser.g:17671:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            {
            // InternalSqlParser.g:17671:1: ( ( rule__OpFunctionCast__PAssignment_4_1 ) )
            // InternalSqlParser.g:17672:1: ( rule__OpFunctionCast__PAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }
            // InternalSqlParser.g:17673:1: ( rule__OpFunctionCast__PAssignment_4_1 )
            // InternalSqlParser.g:17673:2: rule__OpFunctionCast__PAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__PAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__1__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2"
    // InternalSqlParser.g:17683:1: rule__OpFunctionCast__Group_4__2 : rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 ;
    public final void rule__OpFunctionCast__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17687:1: ( rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3 )
            // InternalSqlParser.g:17688:2: rule__OpFunctionCast__Group_4__2__Impl rule__OpFunctionCast__Group_4__3
            {
            pushFollow(FOLLOW_88);
            rule__OpFunctionCast__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2"


    // $ANTLR start "rule__OpFunctionCast__Group_4__2__Impl"
    // InternalSqlParser.g:17695:1: rule__OpFunctionCast__Group_4__2__Impl : ( ( rule__OpFunctionCast__Group_4_2__0 )? ) ;
    public final void rule__OpFunctionCast__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17699:1: ( ( ( rule__OpFunctionCast__Group_4_2__0 )? ) )
            // InternalSqlParser.g:17700:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            {
            // InternalSqlParser.g:17700:1: ( ( rule__OpFunctionCast__Group_4_2__0 )? )
            // InternalSqlParser.g:17701:1: ( rule__OpFunctionCast__Group_4_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }
            // InternalSqlParser.g:17702:1: ( rule__OpFunctionCast__Group_4_2__0 )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==Comma) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalSqlParser.g:17702:2: rule__OpFunctionCast__Group_4_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__OpFunctionCast__Group_4_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getGroup_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__2__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3"
    // InternalSqlParser.g:17712:1: rule__OpFunctionCast__Group_4__3 : rule__OpFunctionCast__Group_4__3__Impl ;
    public final void rule__OpFunctionCast__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17716:1: ( rule__OpFunctionCast__Group_4__3__Impl )
            // InternalSqlParser.g:17717:2: rule__OpFunctionCast__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3"


    // $ANTLR start "rule__OpFunctionCast__Group_4__3__Impl"
    // InternalSqlParser.g:17723:1: rule__OpFunctionCast__Group_4__3__Impl : ( RightParenthesis ) ;
    public final void rule__OpFunctionCast__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17727:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:17728:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:17728:1: ( RightParenthesis )
            // InternalSqlParser.g:17729:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getRightParenthesisKeyword_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4__3__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0"
    // InternalSqlParser.g:17750:1: rule__OpFunctionCast__Group_4_2__0 : rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 ;
    public final void rule__OpFunctionCast__Group_4_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17754:1: ( rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1 )
            // InternalSqlParser.g:17755:2: rule__OpFunctionCast__Group_4_2__0__Impl rule__OpFunctionCast__Group_4_2__1
            {
            pushFollow(FOLLOW_13);
            rule__OpFunctionCast__Group_4_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__0__Impl"
    // InternalSqlParser.g:17762:1: rule__OpFunctionCast__Group_4_2__0__Impl : ( Comma ) ;
    public final void rule__OpFunctionCast__Group_4_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17766:1: ( ( Comma ) )
            // InternalSqlParser.g:17767:1: ( Comma )
            {
            // InternalSqlParser.g:17767:1: ( Comma )
            // InternalSqlParser.g:17768:1: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getCommaKeyword_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__0__Impl"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1"
    // InternalSqlParser.g:17781:1: rule__OpFunctionCast__Group_4_2__1 : rule__OpFunctionCast__Group_4_2__1__Impl ;
    public final void rule__OpFunctionCast__Group_4_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17785:1: ( rule__OpFunctionCast__Group_4_2__1__Impl )
            // InternalSqlParser.g:17786:2: rule__OpFunctionCast__Group_4_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__Group_4_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1"


    // $ANTLR start "rule__OpFunctionCast__Group_4_2__1__Impl"
    // InternalSqlParser.g:17792:1: rule__OpFunctionCast__Group_4_2__1__Impl : ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) ;
    public final void rule__OpFunctionCast__Group_4_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17796:1: ( ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) ) )
            // InternalSqlParser.g:17797:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            {
            // InternalSqlParser.g:17797:1: ( ( rule__OpFunctionCast__P2Assignment_4_2_1 ) )
            // InternalSqlParser.g:17798:1: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }
            // InternalSqlParser.g:17799:1: ( rule__OpFunctionCast__P2Assignment_4_2_1 )
            // InternalSqlParser.g:17799:2: rule__OpFunctionCast__P2Assignment_4_2_1
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionCast__P2Assignment_4_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2Assignment_4_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__Group_4_2__1__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0"
    // InternalSqlParser.g:17813:1: rule__OpFunctionArgAgregate__Group__0 : rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 ;
    public final void rule__OpFunctionArgAgregate__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17817:1: ( rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1 )
            // InternalSqlParser.g:17818:2: rule__OpFunctionArgAgregate__Group__0__Impl rule__OpFunctionArgAgregate__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__OpFunctionArgAgregate__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__0__Impl"
    // InternalSqlParser.g:17825:1: rule__OpFunctionArgAgregate__Group__0__Impl : ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) ;
    public final void rule__OpFunctionArgAgregate__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17829:1: ( ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) ) )
            // InternalSqlParser.g:17830:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            {
            // InternalSqlParser.g:17830:1: ( ( rule__OpFunctionArgAgregate__Alternatives_0 ) )
            // InternalSqlParser.g:17831:1: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }
            // InternalSqlParser.g:17832:1: ( rule__OpFunctionArgAgregate__Alternatives_0 )
            // InternalSqlParser.g:17832:2: rule__OpFunctionArgAgregate__Alternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__0__Impl"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1"
    // InternalSqlParser.g:17842:1: rule__OpFunctionArgAgregate__Group__1 : rule__OpFunctionArgAgregate__Group__1__Impl ;
    public final void rule__OpFunctionArgAgregate__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17846:1: ( rule__OpFunctionArgAgregate__Group__1__Impl )
            // InternalSqlParser.g:17847:2: rule__OpFunctionArgAgregate__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgAgregate__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1"


    // $ANTLR start "rule__OpFunctionArgAgregate__Group__1__Impl"
    // InternalSqlParser.g:17853:1: rule__OpFunctionArgAgregate__Group__1__Impl : ( ruleOperand ) ;
    public final void rule__OpFunctionArgAgregate__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17857:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:17858:1: ( ruleOperand )
            {
            // InternalSqlParser.g:17858:1: ( ruleOperand )
            // InternalSqlParser.g:17859:1: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAgregateAccess().getOperandParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgAgregate__Group__1__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__0"
    // InternalSqlParser.g:17874:1: rule__ColumnOperand__Group__0 : rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 ;
    public final void rule__ColumnOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17878:1: ( rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1 )
            // InternalSqlParser.g:17879:2: rule__ColumnOperand__Group__0__Impl rule__ColumnOperand__Group__1
            {
            pushFollow(FOLLOW_89);
            rule__ColumnOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0"


    // $ANTLR start "rule__ColumnOperand__Group__0__Impl"
    // InternalSqlParser.g:17886:1: rule__ColumnOperand__Group__0__Impl : ( ( rule__ColumnOperand__CfullAssignment_0 ) ) ;
    public final void rule__ColumnOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17890:1: ( ( ( rule__ColumnOperand__CfullAssignment_0 ) ) )
            // InternalSqlParser.g:17891:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            {
            // InternalSqlParser.g:17891:1: ( ( rule__ColumnOperand__CfullAssignment_0 ) )
            // InternalSqlParser.g:17892:1: ( rule__ColumnOperand__CfullAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }
            // InternalSqlParser.g:17893:1: ( rule__ColumnOperand__CfullAssignment_0 )
            // InternalSqlParser.g:17893:2: rule__ColumnOperand__CfullAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__CfullAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__0__Impl"


    // $ANTLR start "rule__ColumnOperand__Group__1"
    // InternalSqlParser.g:17903:1: rule__ColumnOperand__Group__1 : rule__ColumnOperand__Group__1__Impl ;
    public final void rule__ColumnOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17907:1: ( rule__ColumnOperand__Group__1__Impl )
            // InternalSqlParser.g:17908:2: rule__ColumnOperand__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColumnOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1"


    // $ANTLR start "rule__ColumnOperand__Group__1__Impl"
    // InternalSqlParser.g:17914:1: rule__ColumnOperand__Group__1__Impl : ( ( rule__ColumnOperand__OraAssignment_1 )? ) ;
    public final void rule__ColumnOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17918:1: ( ( ( rule__ColumnOperand__OraAssignment_1 )? ) )
            // InternalSqlParser.g:17919:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            {
            // InternalSqlParser.g:17919:1: ( ( rule__ColumnOperand__OraAssignment_1 )? )
            // InternalSqlParser.g:17920:1: ( rule__ColumnOperand__OraAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }
            // InternalSqlParser.g:17921:1: ( rule__ColumnOperand__OraAssignment_1 )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==LeftParenthesisPlusSignRightParenthesis) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSqlParser.g:17921:2: rule__ColumnOperand__OraAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__ColumnOperand__OraAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__0"
    // InternalSqlParser.g:17935:1: rule__SubQueryOperand__Group__0 : rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 ;
    public final void rule__SubQueryOperand__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17939:1: ( rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1 )
            // InternalSqlParser.g:17940:2: rule__SubQueryOperand__Group__0__Impl rule__SubQueryOperand__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__SubQueryOperand__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0"


    // $ANTLR start "rule__SubQueryOperand__Group__0__Impl"
    // InternalSqlParser.g:17947:1: rule__SubQueryOperand__Group__0__Impl : ( () ) ;
    public final void rule__SubQueryOperand__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17951:1: ( ( () ) )
            // InternalSqlParser.g:17952:1: ( () )
            {
            // InternalSqlParser.g:17952:1: ( () )
            // InternalSqlParser.g:17953:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }
            // InternalSqlParser.g:17954:1: ()
            // InternalSqlParser.g:17956:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSubQueryOperandAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__0__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__1"
    // InternalSqlParser.g:17966:1: rule__SubQueryOperand__Group__1 : rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 ;
    public final void rule__SubQueryOperand__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17970:1: ( rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2 )
            // InternalSqlParser.g:17971:2: rule__SubQueryOperand__Group__1__Impl rule__SubQueryOperand__Group__2
            {
            pushFollow(FOLLOW_3);
            rule__SubQueryOperand__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1"


    // $ANTLR start "rule__SubQueryOperand__Group__1__Impl"
    // InternalSqlParser.g:17978:1: rule__SubQueryOperand__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__SubQueryOperand__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:17982:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:17983:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:17983:1: ( LeftParenthesis )
            // InternalSqlParser.g:17984:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__1__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__2"
    // InternalSqlParser.g:17997:1: rule__SubQueryOperand__Group__2 : rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 ;
    public final void rule__SubQueryOperand__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18001:1: ( rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3 )
            // InternalSqlParser.g:18002:2: rule__SubQueryOperand__Group__2__Impl rule__SubQueryOperand__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__SubQueryOperand__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2"


    // $ANTLR start "rule__SubQueryOperand__Group__2__Impl"
    // InternalSqlParser.g:18009:1: rule__SubQueryOperand__Group__2__Impl : ( ( rule__SubQueryOperand__SelAssignment_2 ) ) ;
    public final void rule__SubQueryOperand__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18013:1: ( ( ( rule__SubQueryOperand__SelAssignment_2 ) ) )
            // InternalSqlParser.g:18014:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            {
            // InternalSqlParser.g:18014:1: ( ( rule__SubQueryOperand__SelAssignment_2 ) )
            // InternalSqlParser.g:18015:1: ( rule__SubQueryOperand__SelAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }
            // InternalSqlParser.g:18016:1: ( rule__SubQueryOperand__SelAssignment_2 )
            // InternalSqlParser.g:18016:2: rule__SubQueryOperand__SelAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__SelAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__2__Impl"


    // $ANTLR start "rule__SubQueryOperand__Group__3"
    // InternalSqlParser.g:18026:1: rule__SubQueryOperand__Group__3 : rule__SubQueryOperand__Group__3__Impl ;
    public final void rule__SubQueryOperand__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18030:1: ( rule__SubQueryOperand__Group__3__Impl )
            // InternalSqlParser.g:18031:2: rule__SubQueryOperand__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SubQueryOperand__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3"


    // $ANTLR start "rule__SubQueryOperand__Group__3__Impl"
    // InternalSqlParser.g:18037:1: rule__SubQueryOperand__Group__3__Impl : ( RightParenthesis ) ;
    public final void rule__SubQueryOperand__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18041:1: ( ( RightParenthesis ) )
            // InternalSqlParser.g:18042:1: ( RightParenthesis )
            {
            // InternalSqlParser.g:18042:1: ( RightParenthesis )
            // InternalSqlParser.g:18043:1: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__Group__3__Impl"


    // $ANTLR start "rule__SQLCASE__Group__0"
    // InternalSqlParser.g:18064:1: rule__SQLCASE__Group__0 : rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 ;
    public final void rule__SQLCASE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18068:1: ( rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1 )
            // InternalSqlParser.g:18069:2: rule__SQLCASE__Group__0__Impl rule__SQLCASE__Group__1
            {
            pushFollow(FOLLOW_90);
            rule__SQLCASE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0"


    // $ANTLR start "rule__SQLCASE__Group__0__Impl"
    // InternalSqlParser.g:18076:1: rule__SQLCASE__Group__0__Impl : ( CASE ) ;
    public final void rule__SQLCASE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18080:1: ( ( CASE ) )
            // InternalSqlParser.g:18081:1: ( CASE )
            {
            // InternalSqlParser.g:18081:1: ( CASE )
            // InternalSqlParser.g:18082:1: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__0__Impl"


    // $ANTLR start "rule__SQLCASE__Group__1"
    // InternalSqlParser.g:18095:1: rule__SQLCASE__Group__1 : rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 ;
    public final void rule__SQLCASE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18099:1: ( rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2 )
            // InternalSqlParser.g:18100:2: rule__SQLCASE__Group__1__Impl rule__SQLCASE__Group__2
            {
            pushFollow(FOLLOW_90);
            rule__SQLCASE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1"


    // $ANTLR start "rule__SQLCASE__Group__1__Impl"
    // InternalSqlParser.g:18107:1: rule__SQLCASE__Group__1__Impl : ( ( rule__SQLCASE__Alternatives_1 )? ) ;
    public final void rule__SQLCASE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18111:1: ( ( ( rule__SQLCASE__Alternatives_1 )? ) )
            // InternalSqlParser.g:18112:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            {
            // InternalSqlParser.g:18112:1: ( ( rule__SQLCASE__Alternatives_1 )? )
            // InternalSqlParser.g:18113:1: ( rule__SQLCASE__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:18114:1: ( rule__SQLCASE__Alternatives_1 )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==EXTRACT||LA144_0==EXISTS||LA144_0==CAST||LA144_0==CASE||LA144_0==NOT_1||LA144_0==NOT||LA144_0==X||LA144_0==IN||LA144_0==LeftParenthesis||(LA144_0>=RULE_JRPARAM && LA144_0<=RULE_JRNPARAM)||(LA144_0>=RULE_UNSIGNED && LA144_0<=RULE_SIGNED_DOUBLE)||(LA144_0>=RULE_STRING_ && LA144_0<=RULE_ID)) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalSqlParser.g:18114:2: rule__SQLCASE__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCASE__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__1__Impl"


    // $ANTLR start "rule__SQLCASE__Group__2"
    // InternalSqlParser.g:18124:1: rule__SQLCASE__Group__2 : rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 ;
    public final void rule__SQLCASE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18128:1: ( rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3 )
            // InternalSqlParser.g:18129:2: rule__SQLCASE__Group__2__Impl rule__SQLCASE__Group__3
            {
            pushFollow(FOLLOW_91);
            rule__SQLCASE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2"


    // $ANTLR start "rule__SQLCASE__Group__2__Impl"
    // InternalSqlParser.g:18136:1: rule__SQLCASE__Group__2__Impl : ( ( rule__SQLCASE__WhenAssignment_2 ) ) ;
    public final void rule__SQLCASE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18140:1: ( ( ( rule__SQLCASE__WhenAssignment_2 ) ) )
            // InternalSqlParser.g:18141:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            {
            // InternalSqlParser.g:18141:1: ( ( rule__SQLCASE__WhenAssignment_2 ) )
            // InternalSqlParser.g:18142:1: ( rule__SQLCASE__WhenAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }
            // InternalSqlParser.g:18143:1: ( rule__SQLCASE__WhenAssignment_2 )
            // InternalSqlParser.g:18143:2: rule__SQLCASE__WhenAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__WhenAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__2__Impl"


    // $ANTLR start "rule__SQLCASE__Group__3"
    // InternalSqlParser.g:18153:1: rule__SQLCASE__Group__3 : rule__SQLCASE__Group__3__Impl ;
    public final void rule__SQLCASE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18157:1: ( rule__SQLCASE__Group__3__Impl )
            // InternalSqlParser.g:18158:2: rule__SQLCASE__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCASE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3"


    // $ANTLR start "rule__SQLCASE__Group__3__Impl"
    // InternalSqlParser.g:18164:1: rule__SQLCASE__Group__3__Impl : ( END ) ;
    public final void rule__SQLCASE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18168:1: ( ( END ) )
            // InternalSqlParser.g:18169:1: ( END )
            {
            // InternalSqlParser.g:18169:1: ( END )
            // InternalSqlParser.g:18170:1: END
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }
            match(input,END,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getENDKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__Group__3__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__0"
    // InternalSqlParser.g:18191:1: rule__SQLCaseWhens__Group__0 : rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 ;
    public final void rule__SQLCaseWhens__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18195:1: ( rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1 )
            // InternalSqlParser.g:18196:2: rule__SQLCaseWhens__Group__0__Impl rule__SQLCaseWhens__Group__1
            {
            pushFollow(FOLLOW_90);
            rule__SQLCaseWhens__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0"


    // $ANTLR start "rule__SQLCaseWhens__Group__0__Impl"
    // InternalSqlParser.g:18203:1: rule__SQLCaseWhens__Group__0__Impl : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18207:1: ( ( ruleSqlCaseWhen ) )
            // InternalSqlParser.g:18208:1: ( ruleSqlCaseWhen )
            {
            // InternalSqlParser.g:18208:1: ( ruleSqlCaseWhen )
            // InternalSqlParser.g:18209:1: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getSqlCaseWhenParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group__1"
    // InternalSqlParser.g:18220:1: rule__SQLCaseWhens__Group__1 : rule__SQLCaseWhens__Group__1__Impl ;
    public final void rule__SQLCaseWhens__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18224:1: ( rule__SQLCaseWhens__Group__1__Impl )
            // InternalSqlParser.g:18225:2: rule__SQLCaseWhens__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1"


    // $ANTLR start "rule__SQLCaseWhens__Group__1__Impl"
    // InternalSqlParser.g:18231:1: rule__SQLCaseWhens__Group__1__Impl : ( ( rule__SQLCaseWhens__Group_1__0 )? ) ;
    public final void rule__SQLCaseWhens__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18235:1: ( ( ( rule__SQLCaseWhens__Group_1__0 )? ) )
            // InternalSqlParser.g:18236:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            {
            // InternalSqlParser.g:18236:1: ( ( rule__SQLCaseWhens__Group_1__0 )? )
            // InternalSqlParser.g:18237:1: ( rule__SQLCaseWhens__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }
            // InternalSqlParser.g:18238:1: ( rule__SQLCaseWhens__Group_1__0 )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==WHEN) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalSqlParser.g:18238:2: rule__SQLCaseWhens__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SQLCaseWhens__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group__1__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0"
    // InternalSqlParser.g:18252:1: rule__SQLCaseWhens__Group_1__0 : rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 ;
    public final void rule__SQLCaseWhens__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18256:1: ( rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1 )
            // InternalSqlParser.g:18257:2: rule__SQLCaseWhens__Group_1__0__Impl rule__SQLCaseWhens__Group_1__1
            {
            pushFollow(FOLLOW_90);
            rule__SQLCaseWhens__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__0__Impl"
    // InternalSqlParser.g:18264:1: rule__SQLCaseWhens__Group_1__0__Impl : ( () ) ;
    public final void rule__SQLCaseWhens__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18268:1: ( ( () ) )
            // InternalSqlParser.g:18269:1: ( () )
            {
            // InternalSqlParser.g:18269:1: ( () )
            // InternalSqlParser.g:18270:1: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }
            // InternalSqlParser.g:18271:1: ()
            // InternalSqlParser.g:18273:1: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getWhenListEntriesAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__0__Impl"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1"
    // InternalSqlParser.g:18283:1: rule__SQLCaseWhens__Group_1__1 : rule__SQLCaseWhens__Group_1__1__Impl ;
    public final void rule__SQLCaseWhens__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18287:1: ( rule__SQLCaseWhens__Group_1__1__Impl )
            // InternalSqlParser.g:18288:2: rule__SQLCaseWhens__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SQLCaseWhens__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1"


    // $ANTLR start "rule__SQLCaseWhens__Group_1__1__Impl"
    // InternalSqlParser.g:18294:1: rule__SQLCaseWhens__Group_1__1__Impl : ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) ;
    public final void rule__SQLCaseWhens__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18298:1: ( ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) ) )
            // InternalSqlParser.g:18299:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            {
            // InternalSqlParser.g:18299:1: ( ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* ) )
            // InternalSqlParser.g:18300:1: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) ) ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            {
            // InternalSqlParser.g:18300:1: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 ) )
            // InternalSqlParser.g:18301:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSqlParser.g:18302:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )
            // InternalSqlParser.g:18302:2: rule__SQLCaseWhens__EntriesAssignment_1_1
            {
            pushFollow(FOLLOW_92);
            rule__SQLCaseWhens__EntriesAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }

            // InternalSqlParser.g:18305:1: ( ( rule__SQLCaseWhens__EntriesAssignment_1_1 )* )
            // InternalSqlParser.g:18306:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }
            // InternalSqlParser.g:18307:1: ( rule__SQLCaseWhens__EntriesAssignment_1_1 )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==WHEN) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalSqlParser.g:18307:2: rule__SQLCaseWhens__EntriesAssignment_1_1
            	    {
            	    pushFollow(FOLLOW_92);
            	    rule__SQLCaseWhens__EntriesAssignment_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesAssignment_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__Group_1__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__0"
    // InternalSqlParser.g:18322:1: rule__SqlCaseWhen__Group__0 : rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 ;
    public final void rule__SqlCaseWhen__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18326:1: ( rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1 )
            // InternalSqlParser.g:18327:2: rule__SqlCaseWhen__Group__0__Impl rule__SqlCaseWhen__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__SqlCaseWhen__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0"


    // $ANTLR start "rule__SqlCaseWhen__Group__0__Impl"
    // InternalSqlParser.g:18334:1: rule__SqlCaseWhen__Group__0__Impl : ( WHEN ) ;
    public final void rule__SqlCaseWhen__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18338:1: ( ( WHEN ) )
            // InternalSqlParser.g:18339:1: ( WHEN )
            {
            // InternalSqlParser.g:18339:1: ( WHEN )
            // InternalSqlParser.g:18340:1: WHEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }
            match(input,WHEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWHENKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__1"
    // InternalSqlParser.g:18353:1: rule__SqlCaseWhen__Group__1 : rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 ;
    public final void rule__SqlCaseWhen__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18357:1: ( rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2 )
            // InternalSqlParser.g:18358:2: rule__SqlCaseWhen__Group__1__Impl rule__SqlCaseWhen__Group__2
            {
            pushFollow(FOLLOW_93);
            rule__SqlCaseWhen__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1"


    // $ANTLR start "rule__SqlCaseWhen__Group__1__Impl"
    // InternalSqlParser.g:18365:1: rule__SqlCaseWhen__Group__1__Impl : ( ( rule__SqlCaseWhen__Alternatives_1 ) ) ;
    public final void rule__SqlCaseWhen__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18369:1: ( ( ( rule__SqlCaseWhen__Alternatives_1 ) ) )
            // InternalSqlParser.g:18370:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            {
            // InternalSqlParser.g:18370:1: ( ( rule__SqlCaseWhen__Alternatives_1 ) )
            // InternalSqlParser.g:18371:1: ( rule__SqlCaseWhen__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:18372:1: ( rule__SqlCaseWhen__Alternatives_1 )
            // InternalSqlParser.g:18372:2: rule__SqlCaseWhen__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__1__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__2"
    // InternalSqlParser.g:18382:1: rule__SqlCaseWhen__Group__2 : rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 ;
    public final void rule__SqlCaseWhen__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18386:1: ( rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3 )
            // InternalSqlParser.g:18387:2: rule__SqlCaseWhen__Group__2__Impl rule__SqlCaseWhen__Group__3
            {
            pushFollow(FOLLOW_55);
            rule__SqlCaseWhen__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2"


    // $ANTLR start "rule__SqlCaseWhen__Group__2__Impl"
    // InternalSqlParser.g:18394:1: rule__SqlCaseWhen__Group__2__Impl : ( THEN ) ;
    public final void rule__SqlCaseWhen__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18398:1: ( ( THEN ) )
            // InternalSqlParser.g:18399:1: ( THEN )
            {
            // InternalSqlParser.g:18399:1: ( THEN )
            // InternalSqlParser.g:18400:1: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__2__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__3"
    // InternalSqlParser.g:18413:1: rule__SqlCaseWhen__Group__3 : rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 ;
    public final void rule__SqlCaseWhen__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18417:1: ( rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4 )
            // InternalSqlParser.g:18418:2: rule__SqlCaseWhen__Group__3__Impl rule__SqlCaseWhen__Group__4
            {
            pushFollow(FOLLOW_94);
            rule__SqlCaseWhen__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3"


    // $ANTLR start "rule__SqlCaseWhen__Group__3__Impl"
    // InternalSqlParser.g:18425:1: rule__SqlCaseWhen__Group__3__Impl : ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) ;
    public final void rule__SqlCaseWhen__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18429:1: ( ( ( rule__SqlCaseWhen__TexpAssignment_3 ) ) )
            // InternalSqlParser.g:18430:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            {
            // InternalSqlParser.g:18430:1: ( ( rule__SqlCaseWhen__TexpAssignment_3 ) )
            // InternalSqlParser.g:18431:1: ( rule__SqlCaseWhen__TexpAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }
            // InternalSqlParser.g:18432:1: ( rule__SqlCaseWhen__TexpAssignment_3 )
            // InternalSqlParser.g:18432:2: rule__SqlCaseWhen__TexpAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__TexpAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__3__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group__4"
    // InternalSqlParser.g:18442:1: rule__SqlCaseWhen__Group__4 : rule__SqlCaseWhen__Group__4__Impl ;
    public final void rule__SqlCaseWhen__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18446:1: ( rule__SqlCaseWhen__Group__4__Impl )
            // InternalSqlParser.g:18447:2: rule__SqlCaseWhen__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4"


    // $ANTLR start "rule__SqlCaseWhen__Group__4__Impl"
    // InternalSqlParser.g:18453:1: rule__SqlCaseWhen__Group__4__Impl : ( ( rule__SqlCaseWhen__Group_4__0 )? ) ;
    public final void rule__SqlCaseWhen__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18457:1: ( ( ( rule__SqlCaseWhen__Group_4__0 )? ) )
            // InternalSqlParser.g:18458:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            {
            // InternalSqlParser.g:18458:1: ( ( rule__SqlCaseWhen__Group_4__0 )? )
            // InternalSqlParser.g:18459:1: ( rule__SqlCaseWhen__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }
            // InternalSqlParser.g:18460:1: ( rule__SqlCaseWhen__Group_4__0 )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==ELSE) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalSqlParser.g:18460:2: rule__SqlCaseWhen__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__SqlCaseWhen__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group__4__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0"
    // InternalSqlParser.g:18480:1: rule__SqlCaseWhen__Group_4__0 : rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 ;
    public final void rule__SqlCaseWhen__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18484:1: ( rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1 )
            // InternalSqlParser.g:18485:2: rule__SqlCaseWhen__Group_4__0__Impl rule__SqlCaseWhen__Group_4__1
            {
            pushFollow(FOLLOW_55);
            rule__SqlCaseWhen__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__0__Impl"
    // InternalSqlParser.g:18492:1: rule__SqlCaseWhen__Group_4__0__Impl : ( ELSE ) ;
    public final void rule__SqlCaseWhen__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18496:1: ( ( ELSE ) )
            // InternalSqlParser.g:18497:1: ( ELSE )
            {
            // InternalSqlParser.g:18497:1: ( ELSE )
            // InternalSqlParser.g:18498:1: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getELSEKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__0__Impl"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1"
    // InternalSqlParser.g:18511:1: rule__SqlCaseWhen__Group_4__1 : rule__SqlCaseWhen__Group_4__1__Impl ;
    public final void rule__SqlCaseWhen__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18515:1: ( rule__SqlCaseWhen__Group_4__1__Impl )
            // InternalSqlParser.g:18516:2: rule__SqlCaseWhen__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1"


    // $ANTLR start "rule__SqlCaseWhen__Group_4__1__Impl"
    // InternalSqlParser.g:18522:1: rule__SqlCaseWhen__Group_4__1__Impl : ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) ;
    public final void rule__SqlCaseWhen__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18526:1: ( ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) ) )
            // InternalSqlParser.g:18527:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            {
            // InternalSqlParser.g:18527:1: ( ( rule__SqlCaseWhen__EexpAssignment_4_1 ) )
            // InternalSqlParser.g:18528:1: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }
            // InternalSqlParser.g:18529:1: ( rule__SqlCaseWhen__EexpAssignment_4_1 )
            // InternalSqlParser.g:18529:2: rule__SqlCaseWhen__EexpAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__SqlCaseWhen__EexpAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__Group_4__1__Impl"


    // $ANTLR start "rule__JoinType__Group__0"
    // InternalSqlParser.g:18543:1: rule__JoinType__Group__0 : rule__JoinType__Group__0__Impl rule__JoinType__Group__1 ;
    public final void rule__JoinType__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18547:1: ( rule__JoinType__Group__0__Impl rule__JoinType__Group__1 )
            // InternalSqlParser.g:18548:2: rule__JoinType__Group__0__Impl rule__JoinType__Group__1
            {
            pushFollow(FOLLOW_33);
            rule__JoinType__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0"


    // $ANTLR start "rule__JoinType__Group__0__Impl"
    // InternalSqlParser.g:18555:1: rule__JoinType__Group__0__Impl : ( ( NATURAL )? ) ;
    public final void rule__JoinType__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18559:1: ( ( ( NATURAL )? ) )
            // InternalSqlParser.g:18560:1: ( ( NATURAL )? )
            {
            // InternalSqlParser.g:18560:1: ( ( NATURAL )? )
            // InternalSqlParser.g:18561:1: ( NATURAL )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }
            // InternalSqlParser.g:18562:1: ( NATURAL )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==NATURAL) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSqlParser.g:18563:2: NATURAL
                    {
                    match(input,NATURAL,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getNATURALKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__0__Impl"


    // $ANTLR start "rule__JoinType__Group__1"
    // InternalSqlParser.g:18574:1: rule__JoinType__Group__1 : rule__JoinType__Group__1__Impl rule__JoinType__Group__2 ;
    public final void rule__JoinType__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18578:1: ( rule__JoinType__Group__1__Impl rule__JoinType__Group__2 )
            // InternalSqlParser.g:18579:2: rule__JoinType__Group__1__Impl rule__JoinType__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__JoinType__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1"


    // $ANTLR start "rule__JoinType__Group__1__Impl"
    // InternalSqlParser.g:18586:1: rule__JoinType__Group__1__Impl : ( ( rule__JoinType__Alternatives_1 )? ) ;
    public final void rule__JoinType__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18590:1: ( ( ( rule__JoinType__Alternatives_1 )? ) )
            // InternalSqlParser.g:18591:1: ( ( rule__JoinType__Alternatives_1 )? )
            {
            // InternalSqlParser.g:18591:1: ( ( rule__JoinType__Alternatives_1 )? )
            // InternalSqlParser.g:18592:1: ( rule__JoinType__Alternatives_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }
            // InternalSqlParser.g:18593:1: ( rule__JoinType__Alternatives_1 )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==STRAIGHT_JOIN||LA149_0==CROSS||LA149_0==INNER||LA149_0==RIGHT||LA149_0==FULL||LA149_0==LEFT) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalSqlParser.g:18593:2: rule__JoinType__Alternatives_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__JoinType__Alternatives_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__1__Impl"


    // $ANTLR start "rule__JoinType__Group__2"
    // InternalSqlParser.g:18603:1: rule__JoinType__Group__2 : rule__JoinType__Group__2__Impl ;
    public final void rule__JoinType__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18607:1: ( rule__JoinType__Group__2__Impl )
            // InternalSqlParser.g:18608:2: rule__JoinType__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2"


    // $ANTLR start "rule__JoinType__Group__2__Impl"
    // InternalSqlParser.g:18614:1: rule__JoinType__Group__2__Impl : ( JOIN ) ;
    public final void rule__JoinType__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18618:1: ( ( JOIN ) )
            // InternalSqlParser.g:18619:1: ( JOIN )
            {
            // InternalSqlParser.g:18619:1: ( JOIN )
            // InternalSqlParser.g:18620:1: JOIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }
            match(input,JOIN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getJOINKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group__2__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__0"
    // InternalSqlParser.g:18639:1: rule__JoinType__Group_1_1__0 : rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 ;
    public final void rule__JoinType__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18643:1: ( rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1 )
            // InternalSqlParser.g:18644:2: rule__JoinType__Group_1_1__0__Impl rule__JoinType__Group_1_1__1
            {
            pushFollow(FOLLOW_95);
            rule__JoinType__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0"


    // $ANTLR start "rule__JoinType__Group_1_1__0__Impl"
    // InternalSqlParser.g:18651:1: rule__JoinType__Group_1_1__0__Impl : ( ( rule__JoinType__Alternatives_1_1_0 ) ) ;
    public final void rule__JoinType__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18655:1: ( ( ( rule__JoinType__Alternatives_1_1_0 ) ) )
            // InternalSqlParser.g:18656:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            {
            // InternalSqlParser.g:18656:1: ( ( rule__JoinType__Alternatives_1_1_0 ) )
            // InternalSqlParser.g:18657:1: ( rule__JoinType__Alternatives_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }
            // InternalSqlParser.g:18658:1: ( rule__JoinType__Alternatives_1_1_0 )
            // InternalSqlParser.g:18658:2: rule__JoinType__Alternatives_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Alternatives_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getAlternatives_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__0__Impl"


    // $ANTLR start "rule__JoinType__Group_1_1__1"
    // InternalSqlParser.g:18668:1: rule__JoinType__Group_1_1__1 : rule__JoinType__Group_1_1__1__Impl ;
    public final void rule__JoinType__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18672:1: ( rule__JoinType__Group_1_1__1__Impl )
            // InternalSqlParser.g:18673:2: rule__JoinType__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__JoinType__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1"


    // $ANTLR start "rule__JoinType__Group_1_1__1__Impl"
    // InternalSqlParser.g:18679:1: rule__JoinType__Group_1_1__1__Impl : ( ( OUTER )? ) ;
    public final void rule__JoinType__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18683:1: ( ( ( OUTER )? ) )
            // InternalSqlParser.g:18684:1: ( ( OUTER )? )
            {
            // InternalSqlParser.g:18684:1: ( ( OUTER )? )
            // InternalSqlParser.g:18685:1: ( OUTER )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }
            // InternalSqlParser.g:18686:1: ( OUTER )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==OUTER) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalSqlParser.g:18687:2: OUTER
                    {
                    match(input,OUTER,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinTypeAccess().getOUTERKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinType__Group_1_1__1__Impl"


    // $ANTLR start "rule__FNAME__Group__0"
    // InternalSqlParser.g:18702:1: rule__FNAME__Group__0 : rule__FNAME__Group__0__Impl rule__FNAME__Group__1 ;
    public final void rule__FNAME__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18706:1: ( rule__FNAME__Group__0__Impl rule__FNAME__Group__1 )
            // InternalSqlParser.g:18707:2: rule__FNAME__Group__0__Impl rule__FNAME__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__FNAME__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0"


    // $ANTLR start "rule__FNAME__Group__0__Impl"
    // InternalSqlParser.g:18714:1: rule__FNAME__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FNAME__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18718:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:18719:1: ( RULE_ID )
            {
            // InternalSqlParser.g:18719:1: ( RULE_ID )
            // InternalSqlParser.g:18720:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__0__Impl"


    // $ANTLR start "rule__FNAME__Group__1"
    // InternalSqlParser.g:18731:1: rule__FNAME__Group__1 : rule__FNAME__Group__1__Impl ;
    public final void rule__FNAME__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18735:1: ( rule__FNAME__Group__1__Impl )
            // InternalSqlParser.g:18736:2: rule__FNAME__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FNAME__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1"


    // $ANTLR start "rule__FNAME__Group__1__Impl"
    // InternalSqlParser.g:18742:1: rule__FNAME__Group__1__Impl : ( LeftParenthesis ) ;
    public final void rule__FNAME__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18746:1: ( ( LeftParenthesis ) )
            // InternalSqlParser.g:18747:1: ( LeftParenthesis )
            {
            // InternalSqlParser.g:18747:1: ( LeftParenthesis )
            // InternalSqlParser.g:18748:1: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFNAMEAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FNAME__Group__1__Impl"


    // $ANTLR start "rule__Model__WqAssignment_1"
    // InternalSqlParser.g:18766:1: rule__Model__WqAssignment_1 : ( ruleWithQuery ) ;
    public final void rule__Model__WqAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18770:1: ( ( ruleWithQuery ) )
            // InternalSqlParser.g:18771:1: ( ruleWithQuery )
            {
            // InternalSqlParser.g:18771:1: ( ruleWithQuery )
            // InternalSqlParser.g:18772:1: ruleWithQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getWqWithQueryParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getWqWithQueryParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__WqAssignment_1"


    // $ANTLR start "rule__Model__QueryAssignment_2"
    // InternalSqlParser.g:18781:1: rule__Model__QueryAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__Model__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18785:1: ( ( ruleSelectQuery ) )
            // InternalSqlParser.g:18786:1: ( ruleSelectQuery )
            {
            // InternalSqlParser.g:18786:1: ( ruleSelectQuery )
            // InternalSqlParser.g:18787:1: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModelAccess().getQuerySelectQueryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Model__QueryAssignment_2"


    // $ANTLR start "rule__WithQuery__WAssignment_0"
    // InternalSqlParser.g:18796:1: rule__WithQuery__WAssignment_0 : ( ( WITH ) ) ;
    public final void rule__WithQuery__WAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18800:1: ( ( ( WITH ) ) )
            // InternalSqlParser.g:18801:1: ( ( WITH ) )
            {
            // InternalSqlParser.g:18801:1: ( ( WITH ) )
            // InternalSqlParser.g:18802:1: ( WITH )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            // InternalSqlParser.g:18803:1: ( WITH )
            // InternalSqlParser.g:18804:1: WITH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }
            match(input,WITH,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWWITHKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WAssignment_0"


    // $ANTLR start "rule__WithQuery__WnameAssignment_1"
    // InternalSqlParser.g:18819:1: rule__WithQuery__WnameAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__WnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18823:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:18824:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:18824:1: ( ruleDbObjectName )
            // InternalSqlParser.g:18825:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWnameDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WnameAssignment_1"


    // $ANTLR start "rule__WithQuery__WithColsAssignment_2"
    // InternalSqlParser.g:18834:1: rule__WithQuery__WithColsAssignment_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__WithColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18838:1: ( ( ruleWithColumns ) )
            // InternalSqlParser.g:18839:1: ( ruleWithColumns )
            {
            // InternalSqlParser.g:18839:1: ( ruleWithColumns )
            // InternalSqlParser.g:18840:1: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getWithColsWithColumnsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__WithColsAssignment_2"


    // $ANTLR start "rule__WithQuery__QueryAssignment_5"
    // InternalSqlParser.g:18849:1: rule__WithQuery__QueryAssignment_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__QueryAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18853:1: ( ( ruleSelectQuery ) )
            // InternalSqlParser.g:18854:1: ( ruleSelectQuery )
            {
            // InternalSqlParser.g:18854:1: ( ruleSelectQuery )
            // InternalSqlParser.g:18855:1: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getQuerySelectQueryParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__QueryAssignment_5"


    // $ANTLR start "rule__WithQuery__AdditionalWnameAssignment_7_1"
    // InternalSqlParser.g:18864:1: rule__WithQuery__AdditionalWnameAssignment_7_1 : ( ruleDbObjectName ) ;
    public final void rule__WithQuery__AdditionalWnameAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18868:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:18869:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:18869:1: ( ruleDbObjectName )
            // InternalSqlParser.g:18870:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWnameDbObjectNameParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWnameAssignment_7_1"


    // $ANTLR start "rule__WithQuery__AdditionalWithColsAssignment_7_2"
    // InternalSqlParser.g:18879:1: rule__WithQuery__AdditionalWithColsAssignment_7_2 : ( ruleWithColumns ) ;
    public final void rule__WithQuery__AdditionalWithColsAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18883:1: ( ( ruleWithColumns ) )
            // InternalSqlParser.g:18884:1: ( ruleWithColumns )
            {
            // InternalSqlParser.g:18884:1: ( ruleWithColumns )
            // InternalSqlParser.g:18885:1: ruleWithColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWithColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalWithColsWithColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalWithColsAssignment_7_2"


    // $ANTLR start "rule__WithQuery__AdditionalQueriesAssignment_7_5"
    // InternalSqlParser.g:18894:1: rule__WithQuery__AdditionalQueriesAssignment_7_5 : ( ruleSelectQuery ) ;
    public final void rule__WithQuery__AdditionalQueriesAssignment_7_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18898:1: ( ( ruleSelectQuery ) )
            // InternalSqlParser.g:18899:1: ( ruleSelectQuery )
            {
            // InternalSqlParser.g:18899:1: ( ruleSelectQuery )
            // InternalSqlParser.g:18900:1: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWithQueryAccess().getAdditionalQueriesSelectQueryParserRuleCall_7_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WithQuery__AdditionalQueriesAssignment_7_5"


    // $ANTLR start "rule__FetchFirst__FetchFirstAssignment_0"
    // InternalSqlParser.g:18909:1: rule__FetchFirst__FetchFirstAssignment_0 : ( ruleUnsignedValue ) ;
    public final void rule__FetchFirst__FetchFirstAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18913:1: ( ( ruleUnsignedValue ) )
            // InternalSqlParser.g:18914:1: ( ruleUnsignedValue )
            {
            // InternalSqlParser.g:18914:1: ( ruleUnsignedValue )
            // InternalSqlParser.g:18915:1: ruleUnsignedValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnsignedValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getFetchFirstUnsignedValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__FetchFirstAssignment_0"


    // $ANTLR start "rule__FetchFirst__RowAssignment_1"
    // InternalSqlParser.g:18924:1: rule__FetchFirst__RowAssignment_1 : ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) ;
    public final void rule__FetchFirst__RowAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18928:1: ( ( ( rule__FetchFirst__RowAlternatives_1_0 ) ) )
            // InternalSqlParser.g:18929:1: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:18929:1: ( ( rule__FetchFirst__RowAlternatives_1_0 ) )
            // InternalSqlParser.g:18930:1: ( rule__FetchFirst__RowAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }
            // InternalSqlParser.g:18931:1: ( rule__FetchFirst__RowAlternatives_1_0 )
            // InternalSqlParser.g:18931:2: rule__FetchFirst__RowAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__FetchFirst__RowAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFetchFirstAccess().getRowAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FetchFirst__RowAssignment_1"


    // $ANTLR start "rule__Offset__OffsetAssignment"
    // InternalSqlParser.g:18940:1: rule__Offset__OffsetAssignment : ( RULE_INT ) ;
    public final void rule__Offset__OffsetAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18944:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:18945:1: ( RULE_INT )
            {
            // InternalSqlParser.g:18945:1: ( RULE_INT )
            // InternalSqlParser.g:18946:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOffsetAccess().getOffsetINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Offset__OffsetAssignment"


    // $ANTLR start "rule__Limit__L1Assignment_1_0"
    // InternalSqlParser.g:18955:1: rule__Limit__L1Assignment_1_0 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L1Assignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18959:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:18960:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:18960:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:18961:1: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL1UNSIGNEDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L1Assignment_1_0"


    // $ANTLR start "rule__Limit__L2Assignment_1_1_1"
    // InternalSqlParser.g:18970:1: rule__Limit__L2Assignment_1_1_1 : ( RULE_UNSIGNED ) ;
    public final void rule__Limit__L2Assignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18974:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:18975:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:18975:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:18976:1: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLimitAccess().getL2UNSIGNEDTerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Limit__L2Assignment_1_1_1"


    // $ANTLR start "rule__SelectQuery__OpAssignment_1"
    // InternalSqlParser.g:18985:1: rule__SelectQuery__OpAssignment_1 : ( ruleSelectSubSet ) ;
    public final void rule__SelectQuery__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:18989:1: ( ( ruleSelectSubSet ) )
            // InternalSqlParser.g:18990:1: ( ruleSelectSubSet )
            {
            // InternalSqlParser.g:18990:1: ( ruleSelectSubSet )
            // InternalSqlParser.g:18991:1: ruleSelectSubSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectSubSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectQueryAccess().getOpSelectSubSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectQuery__OpAssignment_1"


    // $ANTLR start "rule__SelectSubSet__OpAssignment_0"
    // InternalSqlParser.g:19000:1: rule__SelectSubSet__OpAssignment_0 : ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) ;
    public final void rule__SelectSubSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19004:1: ( ( ( rule__SelectSubSet__OpAlternatives_0_0 ) ) )
            // InternalSqlParser.g:19005:1: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:19005:1: ( ( rule__SelectSubSet__OpAlternatives_0_0 ) )
            // InternalSqlParser.g:19006:1: ( rule__SelectSubSet__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }
            // InternalSqlParser.g:19007:1: ( rule__SelectSubSet__OpAlternatives_0_0 )
            // InternalSqlParser.g:19007:2: rule__SelectSubSet__OpAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__SelectSubSet__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__OpAssignment_0"


    // $ANTLR start "rule__SelectSubSet__AllAssignment_1"
    // InternalSqlParser.g:19016:1: rule__SelectSubSet__AllAssignment_1 : ( ( ALL ) ) ;
    public final void rule__SelectSubSet__AllAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19020:1: ( ( ( ALL ) ) )
            // InternalSqlParser.g:19021:1: ( ( ALL ) )
            {
            // InternalSqlParser.g:19021:1: ( ( ALL ) )
            // InternalSqlParser.g:19022:1: ( ALL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            // InternalSqlParser.g:19023:1: ( ALL )
            // InternalSqlParser.g:19024:1: ALL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }
            match(input,ALL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getAllALLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__AllAssignment_1"


    // $ANTLR start "rule__SelectSubSet__QueryAssignment_2"
    // InternalSqlParser.g:19039:1: rule__SelectSubSet__QueryAssignment_2 : ( ruleSelect ) ;
    public final void rule__SelectSubSet__QueryAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19043:1: ( ( ruleSelect ) )
            // InternalSqlParser.g:19044:1: ( ruleSelect )
            {
            // InternalSqlParser.g:19044:1: ( ruleSelect )
            // InternalSqlParser.g:19045:1: ruleSelect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectSubSetAccess().getQuerySelectParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SelectSubSet__QueryAssignment_2"


    // $ANTLR start "rule__Select__SelectAssignment_0"
    // InternalSqlParser.g:19054:1: rule__Select__SelectAssignment_0 : ( ( SELECT ) ) ;
    public final void rule__Select__SelectAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19058:1: ( ( ( SELECT ) ) )
            // InternalSqlParser.g:19059:1: ( ( SELECT ) )
            {
            // InternalSqlParser.g:19059:1: ( ( SELECT ) )
            // InternalSqlParser.g:19060:1: ( SELECT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            // InternalSqlParser.g:19061:1: ( SELECT )
            // InternalSqlParser.g:19062:1: SELECT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }
            match(input,SELECT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getSelectSELECTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__SelectAssignment_0"


    // $ANTLR start "rule__Select__ColsAssignment_3"
    // InternalSqlParser.g:19077:1: rule__Select__ColsAssignment_3 : ( ruleColumns ) ;
    public final void rule__Select__ColsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19081:1: ( ( ruleColumns ) )
            // InternalSqlParser.g:19082:1: ( ruleColumns )
            {
            // InternalSqlParser.g:19082:1: ( ruleColumns )
            // InternalSqlParser.g:19083:1: ruleColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getColsColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__ColsAssignment_3"


    // $ANTLR start "rule__Select__TblAssignment_5"
    // InternalSqlParser.g:19092:1: rule__Select__TblAssignment_5 : ( ruleTables ) ;
    public final void rule__Select__TblAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19096:1: ( ( ruleTables ) )
            // InternalSqlParser.g:19097:1: ( ruleTables )
            {
            // InternalSqlParser.g:19097:1: ( ruleTables )
            // InternalSqlParser.g:19098:1: ruleTables
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTables();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getTblTablesParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__TblAssignment_5"


    // $ANTLR start "rule__Select__WhereExpressionAssignment_6_1"
    // InternalSqlParser.g:19107:1: rule__Select__WhereExpressionAssignment_6_1 : ( ruleFullExpression ) ;
    public final void rule__Select__WhereExpressionAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19111:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:19112:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:19112:1: ( ruleFullExpression )
            // InternalSqlParser.g:19113:1: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getWhereExpressionFullExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__WhereExpressionAssignment_6_1"


    // $ANTLR start "rule__Select__GroupByEntryAssignment_7_2"
    // InternalSqlParser.g:19122:1: rule__Select__GroupByEntryAssignment_7_2 : ( ruleGroupByColumns ) ;
    public final void rule__Select__GroupByEntryAssignment_7_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19126:1: ( ( ruleGroupByColumns ) )
            // InternalSqlParser.g:19127:1: ( ruleGroupByColumns )
            {
            // InternalSqlParser.g:19127:1: ( ruleGroupByColumns )
            // InternalSqlParser.g:19128:1: ruleGroupByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getGroupByEntryGroupByColumnsParserRuleCall_7_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__GroupByEntryAssignment_7_2"


    // $ANTLR start "rule__Select__HavingEntryAssignment_8_1"
    // InternalSqlParser.g:19137:1: rule__Select__HavingEntryAssignment_8_1 : ( ruleFullExpression ) ;
    public final void rule__Select__HavingEntryAssignment_8_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19141:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:19142:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:19142:1: ( ruleFullExpression )
            // InternalSqlParser.g:19143:1: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getHavingEntryFullExpressionParserRuleCall_8_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__HavingEntryAssignment_8_1"


    // $ANTLR start "rule__Select__OrderByEntryAssignment_9_2"
    // InternalSqlParser.g:19152:1: rule__Select__OrderByEntryAssignment_9_2 : ( ruleOrderByColumns ) ;
    public final void rule__Select__OrderByEntryAssignment_9_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19156:1: ( ( ruleOrderByColumns ) )
            // InternalSqlParser.g:19157:1: ( ruleOrderByColumns )
            {
            // InternalSqlParser.g:19157:1: ( ruleOrderByColumns )
            // InternalSqlParser.g:19158:1: ruleOrderByColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOrderByEntryOrderByColumnsParserRuleCall_9_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OrderByEntryAssignment_9_2"


    // $ANTLR start "rule__Select__LimAssignment_10_1"
    // InternalSqlParser.g:19167:1: rule__Select__LimAssignment_10_1 : ( ruleLimit ) ;
    public final void rule__Select__LimAssignment_10_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19171:1: ( ( ruleLimit ) )
            // InternalSqlParser.g:19172:1: ( ruleLimit )
            {
            // InternalSqlParser.g:19172:1: ( ruleLimit )
            // InternalSqlParser.g:19173:1: ruleLimit
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLimit();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getLimLimitParserRuleCall_10_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__LimAssignment_10_1"


    // $ANTLR start "rule__Select__OffsetAssignment_11_1"
    // InternalSqlParser.g:19182:1: rule__Select__OffsetAssignment_11_1 : ( ruleOffset ) ;
    public final void rule__Select__OffsetAssignment_11_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19186:1: ( ( ruleOffset ) )
            // InternalSqlParser.g:19187:1: ( ruleOffset )
            {
            // InternalSqlParser.g:19187:1: ( ruleOffset )
            // InternalSqlParser.g:19188:1: ruleOffset
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOffset();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getOffsetOffsetParserRuleCall_11_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__OffsetAssignment_11_1"


    // $ANTLR start "rule__Select__FetchFirstAssignment_12_2"
    // InternalSqlParser.g:19197:1: rule__Select__FetchFirstAssignment_12_2 : ( ruleFetchFirst ) ;
    public final void rule__Select__FetchFirstAssignment_12_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19201:1: ( ( ruleFetchFirst ) )
            // InternalSqlParser.g:19202:1: ( ruleFetchFirst )
            {
            // InternalSqlParser.g:19202:1: ( ruleFetchFirst )
            // InternalSqlParser.g:19203:1: ruleFetchFirst
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFetchFirst();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSelectAccess().getFetchFirstFetchFirstParserRuleCall_12_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Select__FetchFirstAssignment_12_2"


    // $ANTLR start "rule__Columns__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19212:1: rule__Columns__EntriesAssignment_1_1_1 : ( ruleColumnOrAlias ) ;
    public final void rule__Columns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19216:1: ( ( ruleColumnOrAlias ) )
            // InternalSqlParser.g:19217:1: ( ruleColumnOrAlias )
            {
            // InternalSqlParser.g:19217:1: ( ruleColumnOrAlias )
            // InternalSqlParser.g:19218:1: ruleColumnOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnsAccess().getEntriesColumnOrAliasParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Columns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnOrAlias__CeAssignment_0_0"
    // InternalSqlParser.g:19227:1: rule__ColumnOrAlias__CeAssignment_0_0 : ( ruleOperandGroup ) ;
    public final void rule__ColumnOrAlias__CeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19231:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:19232:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:19232:1: ( ruleOperandGroup )
            // InternalSqlParser.g:19233:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getCeOperandGroupParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__CeAssignment_0_0"


    // $ANTLR start "rule__ColumnOrAlias__AliasAssignment_0_1"
    // InternalSqlParser.g:19242:1: rule__ColumnOrAlias__AliasAssignment_0_1 : ( ( AS ) ) ;
    public final void rule__ColumnOrAlias__AliasAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19246:1: ( ( ( AS ) ) )
            // InternalSqlParser.g:19247:1: ( ( AS ) )
            {
            // InternalSqlParser.g:19247:1: ( ( AS ) )
            // InternalSqlParser.g:19248:1: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            // InternalSqlParser.g:19249:1: ( AS )
            // InternalSqlParser.g:19250:1: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAliasASKeyword_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AliasAssignment_0_1"


    // $ANTLR start "rule__ColumnOrAlias__ColAliasAssignment_0_2"
    // InternalSqlParser.g:19265:1: rule__ColumnOrAlias__ColAliasAssignment_0_2 : ( ruleDbObjectName ) ;
    public final void rule__ColumnOrAlias__ColAliasAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19269:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:19270:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:19270:1: ( ruleDbObjectName )
            // InternalSqlParser.g:19271:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getColAliasDbObjectNameParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__ColAliasAssignment_0_2"


    // $ANTLR start "rule__ColumnOrAlias__AllColsAssignment_1"
    // InternalSqlParser.g:19280:1: rule__ColumnOrAlias__AllColsAssignment_1 : ( RULE_STAR ) ;
    public final void rule__ColumnOrAlias__AllColsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19284:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:19285:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:19285:1: ( RULE_STAR )
            // InternalSqlParser.g:19286:1: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getAllColsSTARTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__AllColsAssignment_1"


    // $ANTLR start "rule__ColumnOrAlias__DbAllColsAssignment_2"
    // InternalSqlParser.g:19295:1: rule__ColumnOrAlias__DbAllColsAssignment_2 : ( ruleDbObjectNameAll ) ;
    public final void rule__ColumnOrAlias__DbAllColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19299:1: ( ( ruleDbObjectNameAll ) )
            // InternalSqlParser.g:19300:1: ( ruleDbObjectNameAll )
            {
            // InternalSqlParser.g:19300:1: ( ruleDbObjectNameAll )
            // InternalSqlParser.g:19301:1: ruleDbObjectNameAll
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectNameAll();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOrAliasAccess().getDbAllColsDbObjectNameAllParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOrAlias__DbAllColsAssignment_2"


    // $ANTLR start "rule__ColumnFull__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19310:1: rule__ColumnFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__ColumnFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19314:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:19315:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:19315:1: ( ruleDbObjectName )
            // InternalSqlParser.g:19316:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Tables__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19325:1: rule__Tables__EntriesAssignment_1_1_1 : ( ruleFromTable ) ;
    public final void rule__Tables__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19329:1: ( ( ruleFromTable ) )
            // InternalSqlParser.g:19330:1: ( ruleFromTable )
            {
            // InternalSqlParser.g:19330:1: ( ruleFromTable )
            // InternalSqlParser.g:19331:1: ruleFromTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTablesAccess().getEntriesFromTableParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Tables__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__FromTable__TableAssignment_0"
    // InternalSqlParser.g:19340:1: rule__FromTable__TableAssignment_0 : ( ruleTableOrAlias ) ;
    public final void rule__FromTable__TableAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19344:1: ( ( ruleTableOrAlias ) )
            // InternalSqlParser.g:19345:1: ( ruleTableOrAlias )
            {
            // InternalSqlParser.g:19345:1: ( ruleTableOrAlias )
            // InternalSqlParser.g:19346:1: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getTableTableOrAliasParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__TableAssignment_0"


    // $ANTLR start "rule__FromTable__FjoinAssignment_1"
    // InternalSqlParser.g:19355:1: rule__FromTable__FjoinAssignment_1 : ( ruleFromTableJoin ) ;
    public final void rule__FromTable__FjoinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19359:1: ( ( ruleFromTableJoin ) )
            // InternalSqlParser.g:19360:1: ( ruleFromTableJoin )
            {
            // InternalSqlParser.g:19360:1: ( ruleFromTableJoin )
            // InternalSqlParser.g:19361:1: ruleFromTableJoin
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromTableJoin();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableAccess().getFjoinFromTableJoinParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTable__FjoinAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinAssignment_0"
    // InternalSqlParser.g:19370:1: rule__FromTableJoin__JoinAssignment_0 : ( ruleJoinType ) ;
    public final void rule__FromTableJoin__JoinAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19374:1: ( ( ruleJoinType ) )
            // InternalSqlParser.g:19375:1: ( ruleJoinType )
            {
            // InternalSqlParser.g:19375:1: ( ruleJoinType )
            // InternalSqlParser.g:19376:1: ruleJoinType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinJoinTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinAssignment_0"


    // $ANTLR start "rule__FromTableJoin__OnTableAssignment_1"
    // InternalSqlParser.g:19385:1: rule__FromTableJoin__OnTableAssignment_1 : ( ruleTableOrAlias ) ;
    public final void rule__FromTableJoin__OnTableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19389:1: ( ( ruleTableOrAlias ) )
            // InternalSqlParser.g:19390:1: ( ruleTableOrAlias )
            {
            // InternalSqlParser.g:19390:1: ( ruleTableOrAlias )
            // InternalSqlParser.g:19391:1: ruleTableOrAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableOrAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getOnTableTableOrAliasParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__OnTableAssignment_1"


    // $ANTLR start "rule__FromTableJoin__JoinExprAssignment_2_0_1"
    // InternalSqlParser.g:19400:1: rule__FromTableJoin__JoinExprAssignment_2_0_1 : ( ruleFullExpression ) ;
    public final void rule__FromTableJoin__JoinExprAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19404:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:19405:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:19405:1: ( ruleFullExpression )
            // InternalSqlParser.g:19406:1: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinExprFullExpressionParserRuleCall_2_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinExprAssignment_2_0_1"


    // $ANTLR start "rule__FromTableJoin__JoinCondAssignment_2_1"
    // InternalSqlParser.g:19415:1: rule__FromTableJoin__JoinCondAssignment_2_1 : ( ruleJoinCondition ) ;
    public final void rule__FromTableJoin__JoinCondAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19419:1: ( ( ruleJoinCondition ) )
            // InternalSqlParser.g:19420:1: ( ruleJoinCondition )
            {
            // InternalSqlParser.g:19420:1: ( ruleJoinCondition )
            // InternalSqlParser.g:19421:1: ruleJoinCondition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJoinCondition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromTableJoinAccess().getJoinCondJoinConditionParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromTableJoin__JoinCondAssignment_2_1"


    // $ANTLR start "rule__JoinCondition__UseColsAssignment_2"
    // InternalSqlParser.g:19430:1: rule__JoinCondition__UseColsAssignment_2 : ( ruleUsingCols ) ;
    public final void rule__JoinCondition__UseColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19434:1: ( ( ruleUsingCols ) )
            // InternalSqlParser.g:19435:1: ( ruleUsingCols )
            {
            // InternalSqlParser.g:19435:1: ( ruleUsingCols )
            // InternalSqlParser.g:19436:1: ruleUsingCols
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUsingCols();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJoinConditionAccess().getUseColsUsingColsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JoinCondition__UseColsAssignment_2"


    // $ANTLR start "rule__UsingCols__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19445:1: rule__UsingCols__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__UsingCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19449:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:19450:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:19450:1: ( ruleDbObjectName )
            // InternalSqlParser.g:19451:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUsingColsAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UsingCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableOrAlias__TfullAssignment_0_0"
    // InternalSqlParser.g:19460:1: rule__TableOrAlias__TfullAssignment_0_0 : ( ruleTableFull ) ;
    public final void rule__TableOrAlias__TfullAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19464:1: ( ( ruleTableFull ) )
            // InternalSqlParser.g:19465:1: ( ruleTableFull )
            {
            // InternalSqlParser.g:19465:1: ( ruleTableFull )
            // InternalSqlParser.g:19466:1: ruleTableFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTableFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTfullTableFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TfullAssignment_0_0"


    // $ANTLR start "rule__TableOrAlias__SqAssignment_0_1"
    // InternalSqlParser.g:19475:1: rule__TableOrAlias__SqAssignment_0_1 : ( ruleSubQueryOperand ) ;
    public final void rule__TableOrAlias__SqAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19479:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:19480:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:19480:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:19481:1: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getSqSubQueryOperandParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__SqAssignment_0_1"


    // $ANTLR start "rule__TableOrAlias__ValuesAssignment_0_2"
    // InternalSqlParser.g:19490:1: rule__TableOrAlias__ValuesAssignment_0_2 : ( ruleFromValues ) ;
    public final void rule__TableOrAlias__ValuesAssignment_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19494:1: ( ( ruleFromValues ) )
            // InternalSqlParser.g:19495:1: ( ruleFromValues )
            {
            // InternalSqlParser.g:19495:1: ( ruleFromValues )
            // InternalSqlParser.g:19496:1: ruleFromValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getValuesFromValuesParserRuleCall_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__ValuesAssignment_0_2"


    // $ANTLR start "rule__TableOrAlias__PivotAssignment_1_0"
    // InternalSqlParser.g:19505:1: rule__TableOrAlias__PivotAssignment_1_0 : ( rulePivotTable ) ;
    public final void rule__TableOrAlias__PivotAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19509:1: ( ( rulePivotTable ) )
            // InternalSqlParser.g:19510:1: ( rulePivotTable )
            {
            // InternalSqlParser.g:19510:1: ( rulePivotTable )
            // InternalSqlParser.g:19511:1: rulePivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getPivotPivotTableParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__PivotAssignment_1_0"


    // $ANTLR start "rule__TableOrAlias__UnpivotAssignment_1_1"
    // InternalSqlParser.g:19520:1: rule__TableOrAlias__UnpivotAssignment_1_1 : ( ruleUnpivotTable ) ;
    public final void rule__TableOrAlias__UnpivotAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19524:1: ( ( ruleUnpivotTable ) )
            // InternalSqlParser.g:19525:1: ( ruleUnpivotTable )
            {
            // InternalSqlParser.g:19525:1: ( ruleUnpivotTable )
            // InternalSqlParser.g:19526:1: ruleUnpivotTable
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotTable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getUnpivotUnpivotTableParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__UnpivotAssignment_1_1"


    // $ANTLR start "rule__TableOrAlias__AliasAssignment_2"
    // InternalSqlParser.g:19535:1: rule__TableOrAlias__AliasAssignment_2 : ( ( AS ) ) ;
    public final void rule__TableOrAlias__AliasAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19539:1: ( ( ( AS ) ) )
            // InternalSqlParser.g:19540:1: ( ( AS ) )
            {
            // InternalSqlParser.g:19540:1: ( ( AS ) )
            // InternalSqlParser.g:19541:1: ( AS )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            // InternalSqlParser.g:19542:1: ( AS )
            // InternalSqlParser.g:19543:1: AS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }
            match(input,AS,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getAliasASKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__AliasAssignment_2"


    // $ANTLR start "rule__TableOrAlias__TblAliasAssignment_3"
    // InternalSqlParser.g:19558:1: rule__TableOrAlias__TblAliasAssignment_3 : ( ruleDbObjectName ) ;
    public final void rule__TableOrAlias__TblAliasAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19562:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:19563:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:19563:1: ( ruleDbObjectName )
            // InternalSqlParser.g:19564:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableOrAliasAccess().getTblAliasDbObjectNameParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableOrAlias__TblAliasAssignment_3"


    // $ANTLR start "rule__FromValues__ValuesAssignment_0"
    // InternalSqlParser.g:19573:1: rule__FromValues__ValuesAssignment_0 : ( ruleValues ) ;
    public final void rule__FromValues__ValuesAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19577:1: ( ( ruleValues ) )
            // InternalSqlParser.g:19578:1: ( ruleValues )
            {
            // InternalSqlParser.g:19578:1: ( ruleValues )
            // InternalSqlParser.g:19579:1: ruleValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getValuesValuesParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__ValuesAssignment_0"


    // $ANTLR start "rule__FromValues__CAssignment_1"
    // InternalSqlParser.g:19588:1: rule__FromValues__CAssignment_1 : ( ruleFromValuesColumns ) ;
    public final void rule__FromValues__CAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19592:1: ( ( ruleFromValuesColumns ) )
            // InternalSqlParser.g:19593:1: ( ruleFromValuesColumns )
            {
            // InternalSqlParser.g:19593:1: ( ruleFromValuesColumns )
            // InternalSqlParser.g:19594:1: ruleFromValuesColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesAccess().getCFromValuesColumnsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValues__CAssignment_1"


    // $ANTLR start "rule__FromValuesColumns__FvColsAssignment_2"
    // InternalSqlParser.g:19603:1: rule__FromValuesColumns__FvColsAssignment_2 : ( ruleFromValuesColumnNames ) ;
    public final void rule__FromValuesColumns__FvColsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19607:1: ( ( ruleFromValuesColumnNames ) )
            // InternalSqlParser.g:19608:1: ( ruleFromValuesColumnNames )
            {
            // InternalSqlParser.g:19608:1: ( ruleFromValuesColumnNames )
            // InternalSqlParser.g:19609:1: ruleFromValuesColumnNames
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFromValuesColumnNames();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnsAccess().getFvColsFromValuesColumnNamesParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumns__FvColsAssignment_2"


    // $ANTLR start "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19618:1: rule__FromValuesColumnNames__EntriesAssignment_1_1_1 : ( ruleColumnName ) ;
    public final void rule__FromValuesColumnNames__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19622:1: ( ( ruleColumnName ) )
            // InternalSqlParser.g:19623:1: ( ruleColumnName )
            {
            // InternalSqlParser.g:19623:1: ( ruleColumnName )
            // InternalSqlParser.g:19624:1: ruleColumnName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFromValuesColumnNamesAccess().getEntriesColumnNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FromValuesColumnNames__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__ColumnName__ColNameAssignment"
    // InternalSqlParser.g:19633:1: rule__ColumnName__ColNameAssignment : ( RULE_STRING ) ;
    public final void rule__ColumnName__ColNameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19637:1: ( ( RULE_STRING ) )
            // InternalSqlParser.g:19638:1: ( RULE_STRING )
            {
            // InternalSqlParser.g:19638:1: ( RULE_STRING )
            // InternalSqlParser.g:19639:1: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnNameAccess().getColNameSTRINGTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnName__ColNameAssignment"


    // $ANTLR start "rule__Values__RowsAssignment_2"
    // InternalSqlParser.g:19648:1: rule__Values__RowsAssignment_2 : ( ruleRows ) ;
    public final void rule__Values__RowsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19652:1: ( ( ruleRows ) )
            // InternalSqlParser.g:19653:1: ( ruleRows )
            {
            // InternalSqlParser.g:19653:1: ( ruleRows )
            // InternalSqlParser.g:19654:1: ruleRows
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRows();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getValuesAccess().getRowsRowsParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Values__RowsAssignment_2"


    // $ANTLR start "rule__Rows__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19663:1: rule__Rows__EntriesAssignment_1_1_1 : ( ruleRow ) ;
    public final void rule__Rows__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19667:1: ( ( ruleRow ) )
            // InternalSqlParser.g:19668:1: ( ruleRow )
            {
            // InternalSqlParser.g:19668:1: ( ruleRow )
            // InternalSqlParser.g:19669:1: ruleRow
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRow();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowsAccess().getEntriesRowParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Rows__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Row__RowValuesAssignment_1"
    // InternalSqlParser.g:19678:1: rule__Row__RowValuesAssignment_1 : ( ruleRowValues ) ;
    public final void rule__Row__RowValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19682:1: ( ( ruleRowValues ) )
            // InternalSqlParser.g:19683:1: ( ruleRowValues )
            {
            // InternalSqlParser.g:19683:1: ( ruleRowValues )
            // InternalSqlParser.g:19684:1: ruleRowValues
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValues();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowAccess().getRowValuesRowValuesParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Row__RowValuesAssignment_1"


    // $ANTLR start "rule__RowValues__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19693:1: rule__RowValues__EntriesAssignment_1_1_1 : ( ruleRowValue ) ;
    public final void rule__RowValues__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19697:1: ( ( ruleRowValue ) )
            // InternalSqlParser.g:19698:1: ( ruleRowValue )
            {
            // InternalSqlParser.g:19698:1: ( ruleRowValue )
            // InternalSqlParser.g:19699:1: ruleRowValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleRowValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValuesAccess().getEntriesRowValueParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValues__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__RowValue__NullAssignment_1"
    // InternalSqlParser.g:19708:1: rule__RowValue__NullAssignment_1 : ( ( NULL ) ) ;
    public final void rule__RowValue__NullAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19712:1: ( ( ( NULL ) ) )
            // InternalSqlParser.g:19713:1: ( ( NULL ) )
            {
            // InternalSqlParser.g:19713:1: ( ( NULL ) )
            // InternalSqlParser.g:19714:1: ( NULL )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            // InternalSqlParser.g:19715:1: ( NULL )
            // InternalSqlParser.g:19716:1: NULL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }
            match(input,NULL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRowValueAccess().getNullNULLKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RowValue__NullAssignment_1"


    // $ANTLR start "rule__PivotTable__PfunAssignment_3"
    // InternalSqlParser.g:19731:1: rule__PivotTable__PfunAssignment_3 : ( rulePivotFunctions ) ;
    public final void rule__PivotTable__PfunAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19735:1: ( ( rulePivotFunctions ) )
            // InternalSqlParser.g:19736:1: ( rulePivotFunctions )
            {
            // InternalSqlParser.g:19736:1: ( rulePivotFunctions )
            // InternalSqlParser.g:19737:1: rulePivotFunctions
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotFunctions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPfunPivotFunctionsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PfunAssignment_3"


    // $ANTLR start "rule__PivotTable__PforAssignment_4"
    // InternalSqlParser.g:19746:1: rule__PivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__PivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19750:1: ( ( rulePivotForClause ) )
            // InternalSqlParser.g:19751:1: ( rulePivotForClause )
            {
            // InternalSqlParser.g:19751:1: ( rulePivotForClause )
            // InternalSqlParser.g:19752:1: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PforAssignment_4"


    // $ANTLR start "rule__PivotTable__PinAssignment_5"
    // InternalSqlParser.g:19761:1: rule__PivotTable__PinAssignment_5 : ( rulePivotInClause ) ;
    public final void rule__PivotTable__PinAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19765:1: ( ( rulePivotInClause ) )
            // InternalSqlParser.g:19766:1: ( rulePivotInClause )
            {
            // InternalSqlParser.g:19766:1: ( rulePivotInClause )
            // InternalSqlParser.g:19767:1: rulePivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotTableAccess().getPinPivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotTable__PinAssignment_5"


    // $ANTLR start "rule__PivotFunctions__AbcAssignment"
    // InternalSqlParser.g:19776:1: rule__PivotFunctions__AbcAssignment : ( RULE_ID ) ;
    public final void rule__PivotFunctions__AbcAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19780:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:19781:1: ( RULE_ID )
            {
            // InternalSqlParser.g:19781:1: ( RULE_ID )
            // InternalSqlParser.g:19782:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotFunctionsAccess().getAbcIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotFunctions__AbcAssignment"


    // $ANTLR start "rule__PivotInClause__SqAssignment_2_0"
    // InternalSqlParser.g:19791:1: rule__PivotInClause__SqAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__PivotInClause__SqAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19795:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:19796:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:19796:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:19797:1: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getSqSubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__SqAssignment_2_0"


    // $ANTLR start "rule__PivotInClause__ArgsAssignment_2_1"
    // InternalSqlParser.g:19806:1: rule__PivotInClause__ArgsAssignment_2_1 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__PivotInClause__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19810:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSqlParser.g:19811:1: ( ruleUnpivotInClauseArgs )
            {
            // InternalSqlParser.g:19811:1: ( ruleUnpivotInClauseArgs )
            // InternalSqlParser.g:19812:1: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__ArgsAssignment_2_1"


    // $ANTLR start "rule__PivotInClause__PinanyAssignment_2_2"
    // InternalSqlParser.g:19821:1: rule__PivotInClause__PinanyAssignment_2_2 : ( rulePivotInClauseAny ) ;
    public final void rule__PivotInClause__PinanyAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19825:1: ( ( rulePivotInClauseAny ) )
            // InternalSqlParser.g:19826:1: ( rulePivotInClauseAny )
            {
            // InternalSqlParser.g:19826:1: ( rulePivotInClauseAny )
            // InternalSqlParser.g:19827:1: rulePivotInClauseAny
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotInClauseAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotInClauseAccess().getPinanyPivotInClauseAnyParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotInClause__PinanyAssignment_2_2"


    // $ANTLR start "rule__UnpivotTable__PcolsAssignment_3"
    // InternalSqlParser.g:19836:1: rule__UnpivotTable__PcolsAssignment_3 : ( rulePivotColumns ) ;
    public final void rule__UnpivotTable__PcolsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19840:1: ( ( rulePivotColumns ) )
            // InternalSqlParser.g:19841:1: ( rulePivotColumns )
            {
            // InternalSqlParser.g:19841:1: ( rulePivotColumns )
            // InternalSqlParser.g:19842:1: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPcolsPivotColumnsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PcolsAssignment_3"


    // $ANTLR start "rule__UnpivotTable__PforAssignment_4"
    // InternalSqlParser.g:19851:1: rule__UnpivotTable__PforAssignment_4 : ( rulePivotForClause ) ;
    public final void rule__UnpivotTable__PforAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19855:1: ( ( rulePivotForClause ) )
            // InternalSqlParser.g:19856:1: ( rulePivotForClause )
            {
            // InternalSqlParser.g:19856:1: ( rulePivotForClause )
            // InternalSqlParser.g:19857:1: rulePivotForClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotForClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getPforPivotForClauseParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__PforAssignment_4"


    // $ANTLR start "rule__UnpivotTable__InopAssignment_5"
    // InternalSqlParser.g:19866:1: rule__UnpivotTable__InopAssignment_5 : ( ruleUnpivotInClause ) ;
    public final void rule__UnpivotTable__InopAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19870:1: ( ( ruleUnpivotInClause ) )
            // InternalSqlParser.g:19871:1: ( ruleUnpivotInClause )
            {
            // InternalSqlParser.g:19871:1: ( ruleUnpivotInClause )
            // InternalSqlParser.g:19872:1: ruleUnpivotInClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotTableAccess().getInopUnpivotInClauseParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotTable__InopAssignment_5"


    // $ANTLR start "rule__UnpivotInClause__OpAssignment_1"
    // InternalSqlParser.g:19881:1: rule__UnpivotInClause__OpAssignment_1 : ( ( IN ) ) ;
    public final void rule__UnpivotInClause__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19885:1: ( ( ( IN ) ) )
            // InternalSqlParser.g:19886:1: ( ( IN ) )
            {
            // InternalSqlParser.g:19886:1: ( ( IN ) )
            // InternalSqlParser.g:19887:1: ( IN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            // InternalSqlParser.g:19888:1: ( IN )
            // InternalSqlParser.g:19889:1: IN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }
            match(input,IN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getOpINKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__OpAssignment_1"


    // $ANTLR start "rule__UnpivotInClause__ArgsAssignment_3"
    // InternalSqlParser.g:19904:1: rule__UnpivotInClause__ArgsAssignment_3 : ( ruleUnpivotInClauseArgs ) ;
    public final void rule__UnpivotInClause__ArgsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19908:1: ( ( ruleUnpivotInClauseArgs ) )
            // InternalSqlParser.g:19909:1: ( ruleUnpivotInClauseArgs )
            {
            // InternalSqlParser.g:19909:1: ( ruleUnpivotInClauseArgs )
            // InternalSqlParser.g:19910:1: ruleUnpivotInClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseAccess().getArgsUnpivotInClauseArgsParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClause__ArgsAssignment_3"


    // $ANTLR start "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19919:1: rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1 : ( ruleUnpivotInClauseArg ) ;
    public final void rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19923:1: ( ( ruleUnpivotInClauseArg ) )
            // InternalSqlParser.g:19924:1: ( ruleUnpivotInClauseArg )
            {
            // InternalSqlParser.g:19924:1: ( ruleUnpivotInClauseArg )
            // InternalSqlParser.g:19925:1: ruleUnpivotInClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnpivotInClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgsAccess().getEntriesUnpivotInClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__UnpivotInClauseArg__PcolsAssignment_0"
    // InternalSqlParser.g:19934:1: rule__UnpivotInClauseArg__PcolsAssignment_0 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__PcolsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19938:1: ( ( rulePivotColumns ) )
            // InternalSqlParser.g:19939:1: ( rulePivotColumns )
            {
            // InternalSqlParser.g:19939:1: ( rulePivotColumns )
            // InternalSqlParser.g:19940:1: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getPcolsPivotColumnsParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__PcolsAssignment_0"


    // $ANTLR start "rule__UnpivotInClauseArg__CfulsAssignment_1_1"
    // InternalSqlParser.g:19949:1: rule__UnpivotInClauseArg__CfulsAssignment_1_1 : ( rulePivotColumns ) ;
    public final void rule__UnpivotInClauseArg__CfulsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19953:1: ( ( rulePivotColumns ) )
            // InternalSqlParser.g:19954:1: ( rulePivotColumns )
            {
            // InternalSqlParser.g:19954:1: ( rulePivotColumns )
            // InternalSqlParser.g:19955:1: rulePivotColumns
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotColumns();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnpivotInClauseArgAccess().getCfulsPivotColumnsParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnpivotInClauseArg__CfulsAssignment_1_1"


    // $ANTLR start "rule__PivotCols__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19964:1: rule__PivotCols__EntriesAssignment_1_1_1 : ( rulePivotCol ) ;
    public final void rule__PivotCols__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19968:1: ( ( rulePivotCol ) )
            // InternalSqlParser.g:19969:1: ( rulePivotCol )
            {
            // InternalSqlParser.g:19969:1: ( rulePivotCol )
            // InternalSqlParser.g:19970:1: rulePivotCol
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePivotCol();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColsAccess().getEntriesPivotColParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCols__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__PivotCol__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19979:1: rule__PivotCol__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__PivotCol__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19983:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:19984:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:19984:1: ( ruleDbObjectName )
            // InternalSqlParser.g:19985:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPivotColAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PivotCol__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__TableFull__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:19994:1: rule__TableFull__EntriesAssignment_1_1_1 : ( ruleDbObjectName ) ;
    public final void rule__TableFull__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:19998:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:19999:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:19999:1: ( ruleDbObjectName )
            // InternalSqlParser.g:20000:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTableFullAccess().getEntriesDbObjectNameParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TableFull__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__DbObjectNameAll__DbnameAssignment_0"
    // InternalSqlParser.g:20009:1: rule__DbObjectNameAll__DbnameAssignment_0 : ( ruleDBID ) ;
    public final void rule__DbObjectNameAll__DbnameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20013:1: ( ( ruleDBID ) )
            // InternalSqlParser.g:20014:1: ( ruleDBID )
            {
            // InternalSqlParser.g:20014:1: ( ruleDBID )
            // InternalSqlParser.g:20015:1: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAllAccess().getDbnameDBIDParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectNameAll__DbnameAssignment_0"


    // $ANTLR start "rule__DbObjectName__DbnameAssignment"
    // InternalSqlParser.g:20024:1: rule__DbObjectName__DbnameAssignment : ( ruleDBID ) ;
    public final void rule__DbObjectName__DbnameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20028:1: ( ( ruleDBID ) )
            // InternalSqlParser.g:20029:1: ( ruleDBID )
            {
            // InternalSqlParser.g:20029:1: ( ruleDBID )
            // InternalSqlParser.g:20030:1: ruleDBID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDBID();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDbObjectNameAccess().getDbnameDBIDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DbObjectName__DbnameAssignment"


    // $ANTLR start "rule__OrderByColumns__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:20039:1: rule__OrderByColumns__EntriesAssignment_1_1_1 : ( ruleOrderByColumnFull ) ;
    public final void rule__OrderByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20043:1: ( ( ruleOrderByColumnFull ) )
            // InternalSqlParser.g:20044:1: ( ruleOrderByColumnFull )
            {
            // InternalSqlParser.g:20044:1: ( ruleOrderByColumnFull )
            // InternalSqlParser.g:20045:1: ruleOrderByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnsAccess().getEntriesOrderByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderAssignment_0_0"
    // InternalSqlParser.g:20054:1: rule__OrderByColumnFull__ColOrderAssignment_0_0 : ( ruleColumnFull ) ;
    public final void rule__OrderByColumnFull__ColOrderAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20058:1: ( ( ruleColumnFull ) )
            // InternalSqlParser.g:20059:1: ( ruleColumnFull )
            {
            // InternalSqlParser.g:20059:1: ( ruleColumnFull )
            // InternalSqlParser.g:20060:1: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderColumnFullParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderAssignment_0_0"


    // $ANTLR start "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"
    // InternalSqlParser.g:20069:1: rule__OrderByColumnFull__ColOrderIntAssignment_0_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OrderByColumnFull__ColOrderIntAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20073:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:20074:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:20074:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:20075:1: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getColOrderIntUNSIGNEDTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__ColOrderIntAssignment_0_1"


    // $ANTLR start "rule__OrderByColumnFull__DirectionAssignment_1"
    // InternalSqlParser.g:20084:1: rule__OrderByColumnFull__DirectionAssignment_1 : ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) ;
    public final void rule__OrderByColumnFull__DirectionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20088:1: ( ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) ) )
            // InternalSqlParser.g:20089:1: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:20089:1: ( ( rule__OrderByColumnFull__DirectionAlternatives_1_0 ) )
            // InternalSqlParser.g:20090:1: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }
            // InternalSqlParser.g:20091:1: ( rule__OrderByColumnFull__DirectionAlternatives_1_0 )
            // InternalSqlParser.g:20091:2: rule__OrderByColumnFull__DirectionAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__OrderByColumnFull__DirectionAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByColumnFullAccess().getDirectionAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByColumnFull__DirectionAssignment_1"


    // $ANTLR start "rule__GroupByColumns__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:20100:1: rule__GroupByColumns__EntriesAssignment_1_1_1 : ( ruleGroupByColumnFull ) ;
    public final void rule__GroupByColumns__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20104:1: ( ( ruleGroupByColumnFull ) )
            // InternalSqlParser.g:20105:1: ( ruleGroupByColumnFull )
            {
            // InternalSqlParser.g:20105:1: ( ruleGroupByColumnFull )
            // InternalSqlParser.g:20106:1: ruleGroupByColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleGroupByColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnsAccess().getEntriesGroupByColumnFullParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumns__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__GroupByColumnFull__ColGrByAssignment_0"
    // InternalSqlParser.g:20115:1: rule__GroupByColumnFull__ColGrByAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__GroupByColumnFull__ColGrByAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20119:1: ( ( ruleColumnFull ) )
            // InternalSqlParser.g:20120:1: ( ruleColumnFull )
            {
            // InternalSqlParser.g:20120:1: ( ruleColumnFull )
            // InternalSqlParser.g:20121:1: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getColGrByColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__ColGrByAssignment_0"


    // $ANTLR start "rule__GroupByColumnFull__GbFunctionAssignment_1"
    // InternalSqlParser.g:20130:1: rule__GroupByColumnFull__GbFunctionAssignment_1 : ( ruleOperandFunction ) ;
    public final void rule__GroupByColumnFull__GbFunctionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20134:1: ( ( ruleOperandFunction ) )
            // InternalSqlParser.g:20135:1: ( ruleOperandFunction )
            {
            // InternalSqlParser.g:20135:1: ( ruleOperandFunction )
            // InternalSqlParser.g:20136:1: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGbFunctionOperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GbFunctionAssignment_1"


    // $ANTLR start "rule__GroupByColumnFull__GrByIntAssignment_2"
    // InternalSqlParser.g:20145:1: rule__GroupByColumnFull__GrByIntAssignment_2 : ( RULE_UNSIGNED ) ;
    public final void rule__GroupByColumnFull__GrByIntAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20149:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:20150:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:20150:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:20151:1: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGroupByColumnFullAccess().getGrByIntUNSIGNEDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GroupByColumnFull__GrByIntAssignment_2"


    // $ANTLR start "rule__FullExpression__EntriesAssignment_1_1"
    // InternalSqlParser.g:20160:1: rule__FullExpression__EntriesAssignment_1_1 : ( ruleExpressionFragmentSecond ) ;
    public final void rule__FullExpression__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20164:1: ( ( ruleExpressionFragmentSecond ) )
            // InternalSqlParser.g:20165:1: ( ruleExpressionFragmentSecond )
            {
            // InternalSqlParser.g:20165:1: ( ruleExpressionFragmentSecond )
            // InternalSqlParser.g:20166:1: ruleExpressionFragmentSecond
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragmentSecond();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFullExpressionAccess().getEntriesExpressionFragmentSecondParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FullExpression__EntriesAssignment_1_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__CAssignment_0_0"
    // InternalSqlParser.g:20175:1: rule__ExpressionFragmentSecond__CAssignment_0_0 : ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) ;
    public final void rule__ExpressionFragmentSecond__CAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20179:1: ( ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) ) )
            // InternalSqlParser.g:20180:1: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            {
            // InternalSqlParser.g:20180:1: ( ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 ) )
            // InternalSqlParser.g:20181:1: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }
            // InternalSqlParser.g:20182:1: ( rule__ExpressionFragmentSecond__CAlternatives_0_0_0 )
            // InternalSqlParser.g:20182:2: rule__ExpressionFragmentSecond__CAlternatives_0_0_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragmentSecond__CAlternatives_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getCAlternatives_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__CAssignment_0_0"


    // $ANTLR start "rule__ExpressionFragmentSecond__EfragAssignment_0_1"
    // InternalSqlParser.g:20191:1: rule__ExpressionFragmentSecond__EfragAssignment_0_1 : ( ruleExpressionFragment ) ;
    public final void rule__ExpressionFragmentSecond__EfragAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20195:1: ( ( ruleExpressionFragment ) )
            // InternalSqlParser.g:20196:1: ( ruleExpressionFragment )
            {
            // InternalSqlParser.g:20196:1: ( ruleExpressionFragment )
            // InternalSqlParser.g:20197:1: ruleExpressionFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getEfragExpressionFragmentParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__EfragAssignment_0_1"


    // $ANTLR start "rule__ExpressionFragmentSecond__NotPrmAssignment_1"
    // InternalSqlParser.g:20206:1: rule__ExpressionFragmentSecond__NotPrmAssignment_1 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragmentSecond__NotPrmAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20210:1: ( ( RULE_JRNPARAM ) )
            // InternalSqlParser.g:20211:1: ( RULE_JRNPARAM )
            {
            // InternalSqlParser.g:20211:1: ( RULE_JRNPARAM )
            // InternalSqlParser.g:20212:1: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentSecondAccess().getNotPrmJRNPARAMTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragmentSecond__NotPrmAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__ExpgroupAssignment_0"
    // InternalSqlParser.g:20221:1: rule__ExpressionFragment__ExpgroupAssignment_0 : ( ruleExpressionGroup ) ;
    public final void rule__ExpressionFragment__ExpgroupAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20225:1: ( ( ruleExpressionGroup ) )
            // InternalSqlParser.g:20226:1: ( ruleExpressionGroup )
            {
            // InternalSqlParser.g:20226:1: ( ruleExpressionGroup )
            // InternalSqlParser.g:20227:1: ruleExpressionGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpressionGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpgroupExpressionGroupParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpgroupAssignment_0"


    // $ANTLR start "rule__ExpressionFragment__ExpAssignment_1"
    // InternalSqlParser.g:20236:1: rule__ExpressionFragment__ExpAssignment_1 : ( ruleExpression ) ;
    public final void rule__ExpressionFragment__ExpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20240:1: ( ( ruleExpression ) )
            // InternalSqlParser.g:20241:1: ( ruleExpression )
            {
            // InternalSqlParser.g:20241:1: ( ruleExpression )
            // InternalSqlParser.g:20242:1: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExpExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExpAssignment_1"


    // $ANTLR start "rule__ExpressionFragment__XexpAssignment_2"
    // InternalSqlParser.g:20251:1: rule__ExpressionFragment__XexpAssignment_2 : ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) ;
    public final void rule__ExpressionFragment__XexpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20255:1: ( ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) ) )
            // InternalSqlParser.g:20256:1: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            {
            // InternalSqlParser.g:20256:1: ( ( rule__ExpressionFragment__XexpAlternatives_2_0 ) )
            // InternalSqlParser.g:20257:1: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }
            // InternalSqlParser.g:20258:1: ( rule__ExpressionFragment__XexpAlternatives_2_0 )
            // InternalSqlParser.g:20258:2: rule__ExpressionFragment__XexpAlternatives_2_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionFragment__XexpAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getXexpAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__XexpAssignment_2"


    // $ANTLR start "rule__ExpressionFragment__NotPrmAssignment_3"
    // InternalSqlParser.g:20267:1: rule__ExpressionFragment__NotPrmAssignment_3 : ( RULE_JRNPARAM ) ;
    public final void rule__ExpressionFragment__NotPrmAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20271:1: ( ( RULE_JRNPARAM ) )
            // InternalSqlParser.g:20272:1: ( RULE_JRNPARAM )
            {
            // InternalSqlParser.g:20272:1: ( RULE_JRNPARAM )
            // InternalSqlParser.g:20273:1: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getNotPrmJRNPARAMTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__NotPrmAssignment_3"


    // $ANTLR start "rule__ExpressionFragment__InAssignment_4"
    // InternalSqlParser.g:20282:1: rule__ExpressionFragment__InAssignment_4 : ( ruleInOperator ) ;
    public final void rule__ExpressionFragment__InAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20286:1: ( ( ruleInOperator ) )
            // InternalSqlParser.g:20287:1: ( ruleInOperator )
            {
            // InternalSqlParser.g:20287:1: ( ruleInOperator )
            // InternalSqlParser.g:20288:1: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getInInOperatorParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__InAssignment_4"


    // $ANTLR start "rule__ExpressionFragment__ExistsAssignment_5"
    // InternalSqlParser.g:20297:1: rule__ExpressionFragment__ExistsAssignment_5 : ( ruleExistsOperator ) ;
    public final void rule__ExpressionFragment__ExistsAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20301:1: ( ( ruleExistsOperator ) )
            // InternalSqlParser.g:20302:1: ( ruleExistsOperator )
            {
            // InternalSqlParser.g:20302:1: ( ruleExistsOperator )
            // InternalSqlParser.g:20303:1: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionFragmentAccess().getExistsExistsOperatorParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionFragment__ExistsAssignment_5"


    // $ANTLR start "rule__ExpressionGroup__IsnotAssignment_1"
    // InternalSqlParser.g:20312:1: rule__ExpressionGroup__IsnotAssignment_1 : ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) ;
    public final void rule__ExpressionGroup__IsnotAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20316:1: ( ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) ) )
            // InternalSqlParser.g:20317:1: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:20317:1: ( ( rule__ExpressionGroup__IsnotAlternatives_1_0 ) )
            // InternalSqlParser.g:20318:1: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }
            // InternalSqlParser.g:20319:1: ( rule__ExpressionGroup__IsnotAlternatives_1_0 )
            // InternalSqlParser.g:20319:2: rule__ExpressionGroup__IsnotAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__ExpressionGroup__IsnotAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getIsnotAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__IsnotAssignment_1"


    // $ANTLR start "rule__ExpressionGroup__ExprAssignment_3"
    // InternalSqlParser.g:20328:1: rule__ExpressionGroup__ExprAssignment_3 : ( ruleFullExpression ) ;
    public final void rule__ExpressionGroup__ExprAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20332:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:20333:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:20333:1: ( ruleFullExpression )
            // InternalSqlParser.g:20334:1: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionGroupAccess().getExprFullExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExpressionGroup__ExprAssignment_3"


    // $ANTLR start "rule__XExpression__XfAssignment_2"
    // InternalSqlParser.g:20343:1: rule__XExpression__XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression__XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20347:1: ( ( ruleXFunction ) )
            // InternalSqlParser.g:20348:1: ( ruleXFunction )
            {
            // InternalSqlParser.g:20348:1: ( ruleXFunction )
            // InternalSqlParser.g:20349:1: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__XfAssignment_2"


    // $ANTLR start "rule__XExpression__ColAssignment_4"
    // InternalSqlParser.g:20358:1: rule__XExpression__ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression__ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20362:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:20363:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:20363:1: ( ruleOperandGroup )
            // InternalSqlParser.g:20364:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__ColAssignment_4"


    // $ANTLR start "rule__XExpression__PrmAssignment_5_1"
    // InternalSqlParser.g:20373:1: rule__XExpression__PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression__PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20377:1: ( ( ruleXExpressionParams ) )
            // InternalSqlParser.g:20378:1: ( ruleXExpressionParams )
            {
            // InternalSqlParser.g:20378:1: ( ruleXExpressionParams )
            // InternalSqlParser.g:20379:1: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionAccess().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression__PrmAssignment_5_1"


    // $ANTLR start "rule__XExpression___XfAssignment_2"
    // InternalSqlParser.g:20388:1: rule__XExpression___XfAssignment_2 : ( ruleXFunction ) ;
    public final void rule__XExpression___XfAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20392:1: ( ( ruleXFunction ) )
            // InternalSqlParser.g:20393:1: ( ruleXFunction )
            {
            // InternalSqlParser.g:20393:1: ( ruleXFunction )
            // InternalSqlParser.g:20394:1: ruleXFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getXfXFunctionEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___XfAssignment_2"


    // $ANTLR start "rule__XExpression___ColAssignment_4"
    // InternalSqlParser.g:20403:1: rule__XExpression___ColAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__XExpression___ColAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20407:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:20408:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:20408:1: ( ruleOperandGroup )
            // InternalSqlParser.g:20409:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getColOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___ColAssignment_4"


    // $ANTLR start "rule__XExpression___PrmAssignment_5_1"
    // InternalSqlParser.g:20418:1: rule__XExpression___PrmAssignment_5_1 : ( ruleXExpressionParams ) ;
    public final void rule__XExpression___PrmAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20422:1: ( ( ruleXExpressionParams ) )
            // InternalSqlParser.g:20423:1: ( ruleXExpressionParams )
            {
            // InternalSqlParser.g:20423:1: ( ruleXExpressionParams )
            // InternalSqlParser.g:20424:1: ruleXExpressionParams
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXExpressionParams();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpression_Access().getPrmXExpressionParamsParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpression___PrmAssignment_5_1"


    // $ANTLR start "rule__XExpressionParams__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:20433:1: rule__XExpressionParams__EntriesAssignment_1_1_1 : ( ruleJRParameter ) ;
    public final void rule__XExpressionParams__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20437:1: ( ( ruleJRParameter ) )
            // InternalSqlParser.g:20438:1: ( ruleJRParameter )
            {
            // InternalSqlParser.g:20438:1: ( ruleJRParameter )
            // InternalSqlParser.g:20439:1: ruleJRParameter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleJRParameter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXExpressionParamsAccess().getEntriesJRParameterParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XExpressionParams__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__JRParameter__JrprmAssignment"
    // InternalSqlParser.g:20448:1: rule__JRParameter__JrprmAssignment : ( RULE_ID ) ;
    public final void rule__JRParameter__JrprmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20452:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:20453:1: ( RULE_ID )
            {
            // InternalSqlParser.g:20453:1: ( RULE_ID )
            // InternalSqlParser.g:20454:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getJRParameterAccess().getJrprmIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__JRParameter__JrprmAssignment"


    // $ANTLR start "rule__Expression__Op1Assignment_0"
    // InternalSqlParser.g:20463:1: rule__Expression__Op1Assignment_0 : ( ruleOperand ) ;
    public final void rule__Expression__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20467:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:20468:1: ( ruleOperand )
            {
            // InternalSqlParser.g:20468:1: ( ruleOperand )
            // InternalSqlParser.g:20469:1: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getOp1OperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Op1Assignment_0"


    // $ANTLR start "rule__Expression__IsnullAssignment_1_0"
    // InternalSqlParser.g:20478:1: rule__Expression__IsnullAssignment_1_0 : ( ruleIsNullValue ) ;
    public final void rule__Expression__IsnullAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20482:1: ( ( ruleIsNullValue ) )
            // InternalSqlParser.g:20483:1: ( ruleIsNullValue )
            {
            // InternalSqlParser.g:20483:1: ( ruleIsNullValue )
            // InternalSqlParser.g:20484:1: ruleIsNullValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleIsNullValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getIsnullIsNullValueParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__IsnullAssignment_1_0"


    // $ANTLR start "rule__Expression__InAssignment_1_1"
    // InternalSqlParser.g:20493:1: rule__Expression__InAssignment_1_1 : ( ruleInOperator ) ;
    public final void rule__Expression__InAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20497:1: ( ( ruleInOperator ) )
            // InternalSqlParser.g:20498:1: ( ruleInOperator )
            {
            // InternalSqlParser.g:20498:1: ( ruleInOperator )
            // InternalSqlParser.g:20499:1: ruleInOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getInInOperatorParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__InAssignment_1_1"


    // $ANTLR start "rule__Expression__ExistsAssignment_1_2"
    // InternalSqlParser.g:20508:1: rule__Expression__ExistsAssignment_1_2 : ( ruleExistsOperator ) ;
    public final void rule__Expression__ExistsAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20512:1: ( ( ruleExistsOperator ) )
            // InternalSqlParser.g:20513:1: ( ruleExistsOperator )
            {
            // InternalSqlParser.g:20513:1: ( ruleExistsOperator )
            // InternalSqlParser.g:20514:1: ruleExistsOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getExistsExistsOperatorParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__ExistsAssignment_1_2"


    // $ANTLR start "rule__Expression__BetweenAssignment_1_3"
    // InternalSqlParser.g:20523:1: rule__Expression__BetweenAssignment_1_3 : ( ruleBetween ) ;
    public final void rule__Expression__BetweenAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20527:1: ( ( ruleBetween ) )
            // InternalSqlParser.g:20528:1: ( ruleBetween )
            {
            // InternalSqlParser.g:20528:1: ( ruleBetween )
            // InternalSqlParser.g:20529:1: ruleBetween
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetween();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getBetweenBetweenParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__BetweenAssignment_1_3"


    // $ANTLR start "rule__Expression__LikeAssignment_1_4"
    // InternalSqlParser.g:20538:1: rule__Expression__LikeAssignment_1_4 : ( ruleLike ) ;
    public final void rule__Expression__LikeAssignment_1_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20542:1: ( ( ruleLike ) )
            // InternalSqlParser.g:20543:1: ( ruleLike )
            {
            // InternalSqlParser.g:20543:1: ( ruleLike )
            // InternalSqlParser.g:20544:1: ruleLike
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLike();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getLikeLikeParserRuleCall_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__LikeAssignment_1_4"


    // $ANTLR start "rule__Expression__CompAssignment_1_5"
    // InternalSqlParser.g:20553:1: rule__Expression__CompAssignment_1_5 : ( ruleComparison ) ;
    public final void rule__Expression__CompAssignment_1_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20557:1: ( ( ruleComparison ) )
            // InternalSqlParser.g:20558:1: ( ruleComparison )
            {
            // InternalSqlParser.g:20558:1: ( ruleComparison )
            // InternalSqlParser.g:20559:1: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getCompComparisonParserRuleCall_1_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__CompAssignment_1_5"


    // $ANTLR start "rule__Comparison__OperatorAssignment_0"
    // InternalSqlParser.g:20568:1: rule__Comparison__OperatorAssignment_0 : ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) ;
    public final void rule__Comparison__OperatorAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20572:1: ( ( ( rule__Comparison__OperatorAlternatives_0_0 ) ) )
            // InternalSqlParser.g:20573:1: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            {
            // InternalSqlParser.g:20573:1: ( ( rule__Comparison__OperatorAlternatives_0_0 ) )
            // InternalSqlParser.g:20574:1: ( rule__Comparison__OperatorAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }
            // InternalSqlParser.g:20575:1: ( rule__Comparison__OperatorAlternatives_0_0 )
            // InternalSqlParser.g:20575:2: rule__Comparison__OperatorAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__OperatorAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOperatorAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__OperatorAssignment_0"


    // $ANTLR start "rule__Comparison__SubOperatorAssignment_1"
    // InternalSqlParser.g:20584:1: rule__Comparison__SubOperatorAssignment_1 : ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) ;
    public final void rule__Comparison__SubOperatorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20588:1: ( ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) ) )
            // InternalSqlParser.g:20589:1: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            {
            // InternalSqlParser.g:20589:1: ( ( rule__Comparison__SubOperatorAlternatives_1_0 ) )
            // InternalSqlParser.g:20590:1: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }
            // InternalSqlParser.g:20591:1: ( rule__Comparison__SubOperatorAlternatives_1_0 )
            // InternalSqlParser.g:20591:2: rule__Comparison__SubOperatorAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__Comparison__SubOperatorAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getSubOperatorAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__SubOperatorAssignment_1"


    // $ANTLR start "rule__Comparison__Op2Assignment_2"
    // InternalSqlParser.g:20600:1: rule__Comparison__Op2Assignment_2 : ( ruleOperand ) ;
    public final void rule__Comparison__Op2Assignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20604:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:20605:1: ( ruleOperand )
            {
            // InternalSqlParser.g:20605:1: ( ruleOperand )
            // InternalSqlParser.g:20606:1: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getOp2OperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Op2Assignment_2"


    // $ANTLR start "rule__Like__OpLikeAssignment_0"
    // InternalSqlParser.g:20615:1: rule__Like__OpLikeAssignment_0 : ( ruleLikeValue ) ;
    public final void rule__Like__OpLikeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20619:1: ( ( ruleLikeValue ) )
            // InternalSqlParser.g:20620:1: ( ruleLikeValue )
            {
            // InternalSqlParser.g:20620:1: ( ruleLikeValue )
            // InternalSqlParser.g:20621:1: ruleLikeValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOpLikeLikeValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__OpLikeAssignment_0"


    // $ANTLR start "rule__Like__Op2Assignment_1"
    // InternalSqlParser.g:20630:1: rule__Like__Op2Assignment_1 : ( ruleLikeOperand ) ;
    public final void rule__Like__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20634:1: ( ( ruleLikeOperand ) )
            // InternalSqlParser.g:20635:1: ( ruleLikeOperand )
            {
            // InternalSqlParser.g:20635:1: ( ruleLikeOperand )
            // InternalSqlParser.g:20636:1: ruleLikeOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleLikeOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeAccess().getOp2LikeOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Like__Op2Assignment_1"


    // $ANTLR start "rule__LikeOperand__Op2Assignment_0"
    // InternalSqlParser.g:20645:1: rule__LikeOperand__Op2Assignment_0 : ( ruleStringOperand ) ;
    public final void rule__LikeOperand__Op2Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20649:1: ( ( ruleStringOperand ) )
            // InternalSqlParser.g:20650:1: ( ruleStringOperand )
            {
            // InternalSqlParser.g:20650:1: ( ruleStringOperand )
            // InternalSqlParser.g:20651:1: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getOp2StringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Op2Assignment_0"


    // $ANTLR start "rule__LikeOperand__Fop2Assignment_1"
    // InternalSqlParser.g:20660:1: rule__LikeOperand__Fop2Assignment_1 : ( ruleOperandFunction ) ;
    public final void rule__LikeOperand__Fop2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20664:1: ( ( ruleOperandFunction ) )
            // InternalSqlParser.g:20665:1: ( ruleOperandFunction )
            {
            // InternalSqlParser.g:20665:1: ( ruleOperandFunction )
            // InternalSqlParser.g:20666:1: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFop2OperandFunctionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__Fop2Assignment_1"


    // $ANTLR start "rule__LikeOperand__FcastAssignment_2"
    // InternalSqlParser.g:20675:1: rule__LikeOperand__FcastAssignment_2 : ( ruleOpFunctionCast ) ;
    public final void rule__LikeOperand__FcastAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20679:1: ( ( ruleOpFunctionCast ) )
            // InternalSqlParser.g:20680:1: ( ruleOpFunctionCast )
            {
            // InternalSqlParser.g:20680:1: ( ruleOpFunctionCast )
            // InternalSqlParser.g:20681:1: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFcastOpFunctionCastParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FcastAssignment_2"


    // $ANTLR start "rule__LikeOperand__FparamAssignment_3"
    // InternalSqlParser.g:20690:1: rule__LikeOperand__FparamAssignment_3 : ( ruleParameterOperand ) ;
    public final void rule__LikeOperand__FparamAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20694:1: ( ( ruleParameterOperand ) )
            // InternalSqlParser.g:20695:1: ( ruleParameterOperand )
            {
            // InternalSqlParser.g:20695:1: ( ruleParameterOperand )
            // InternalSqlParser.g:20696:1: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLikeOperandAccess().getFparamParameterOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LikeOperand__FparamAssignment_3"


    // $ANTLR start "rule__Between__OpBetweenAssignment_0"
    // InternalSqlParser.g:20705:1: rule__Between__OpBetweenAssignment_0 : ( ruleBetweenValue ) ;
    public final void rule__Between__OpBetweenAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20709:1: ( ( ruleBetweenValue ) )
            // InternalSqlParser.g:20710:1: ( ruleBetweenValue )
            {
            // InternalSqlParser.g:20710:1: ( ruleBetweenValue )
            // InternalSqlParser.g:20711:1: ruleBetweenValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBetweenValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOpBetweenBetweenValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__OpBetweenAssignment_0"


    // $ANTLR start "rule__Between__Op2Assignment_1"
    // InternalSqlParser.g:20720:1: rule__Between__Op2Assignment_1 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op2Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20724:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:20725:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:20725:1: ( ruleOperandGroup )
            // InternalSqlParser.g:20726:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp2OperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op2Assignment_1"


    // $ANTLR start "rule__Between__Op3Assignment_3"
    // InternalSqlParser.g:20735:1: rule__Between__Op3Assignment_3 : ( ruleOperandGroup ) ;
    public final void rule__Between__Op3Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20739:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:20740:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:20740:1: ( ruleOperandGroup )
            // InternalSqlParser.g:20741:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBetweenAccess().getOp3OperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Between__Op3Assignment_3"


    // $ANTLR start "rule__InOperator__OpAssignment_1"
    // InternalSqlParser.g:20750:1: rule__InOperator__OpAssignment_1 : ( ruleInValue ) ;
    public final void rule__InOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20754:1: ( ( ruleInValue ) )
            // InternalSqlParser.g:20755:1: ( ruleInValue )
            {
            // InternalSqlParser.g:20755:1: ( ruleInValue )
            // InternalSqlParser.g:20756:1: ruleInValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpInValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpAssignment_1"


    // $ANTLR start "rule__InOperator__SubqueryAssignment_2_0"
    // InternalSqlParser.g:20765:1: rule__InOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__InOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20769:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:20770:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:20770:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:20771:1: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__InOperator__OpListAssignment_2_1"
    // InternalSqlParser.g:20780:1: rule__InOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__InOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20784:1: ( ( ruleOperandListGroup ) )
            // InternalSqlParser.g:20785:1: ( ruleOperandListGroup )
            {
            // InternalSqlParser.g:20785:1: ( ruleOperandListGroup )
            // InternalSqlParser.g:20786:1: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__ExistsOperator__OpAssignment_1"
    // InternalSqlParser.g:20795:1: rule__ExistsOperator__OpAssignment_1 : ( ruleExistsValue ) ;
    public final void rule__ExistsOperator__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20799:1: ( ( ruleExistsValue ) )
            // InternalSqlParser.g:20800:1: ( ruleExistsValue )
            {
            // InternalSqlParser.g:20800:1: ( ruleExistsValue )
            // InternalSqlParser.g:20801:1: ruleExistsValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExistsValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpExistsValueParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpAssignment_1"


    // $ANTLR start "rule__ExistsOperator__SubqueryAssignment_2_0"
    // InternalSqlParser.g:20810:1: rule__ExistsOperator__SubqueryAssignment_2_0 : ( ruleSubQueryOperand ) ;
    public final void rule__ExistsOperator__SubqueryAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20814:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:20815:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:20815:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:20816:1: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getSubquerySubQueryOperandParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__SubqueryAssignment_2_0"


    // $ANTLR start "rule__ExistsOperator__OpListAssignment_2_1"
    // InternalSqlParser.g:20825:1: rule__ExistsOperator__OpListAssignment_2_1 : ( ruleOperandListGroup ) ;
    public final void rule__ExistsOperator__OpListAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20829:1: ( ( ruleOperandListGroup ) )
            // InternalSqlParser.g:20830:1: ( ruleOperandListGroup )
            {
            // InternalSqlParser.g:20830:1: ( ruleOperandListGroup )
            // InternalSqlParser.g:20831:1: ruleOperandListGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandListGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExistsOperatorAccess().getOpListOperandListGroupParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExistsOperator__OpListAssignment_2_1"


    // $ANTLR start "rule__OperandListGroup__OpGroupAssignment_1"
    // InternalSqlParser.g:20840:1: rule__OperandListGroup__OpGroupAssignment_1 : ( ruleOperandList ) ;
    public final void rule__OperandListGroup__OpGroupAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20844:1: ( ( ruleOperandList ) )
            // InternalSqlParser.g:20845:1: ( ruleOperandList )
            {
            // InternalSqlParser.g:20845:1: ( ruleOperandList )
            // InternalSqlParser.g:20846:1: ruleOperandList
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandList();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListGroupAccess().getOpGroupOperandListParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandListGroup__OpGroupAssignment_1"


    // $ANTLR start "rule__OperandList__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:20855:1: rule__OperandList__EntriesAssignment_1_1_1 : ( ruleScalarOperand ) ;
    public final void rule__OperandList__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20859:1: ( ( ruleScalarOperand ) )
            // InternalSqlParser.g:20860:1: ( ruleScalarOperand )
            {
            // InternalSqlParser.g:20860:1: ( ruleScalarOperand )
            // InternalSqlParser.g:20861:1: ruleScalarOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandListAccess().getEntriesScalarOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandList__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__Operand__Op1Assignment_0"
    // InternalSqlParser.g:20870:1: rule__Operand__Op1Assignment_0 : ( ruleOperandFragment ) ;
    public final void rule__Operand__Op1Assignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20874:1: ( ( ruleOperandFragment ) )
            // InternalSqlParser.g:20875:1: ( ruleOperandFragment )
            {
            // InternalSqlParser.g:20875:1: ( ruleOperandFragment )
            // InternalSqlParser.g:20876:1: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getOp1OperandFragmentParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__Op1Assignment_0"


    // $ANTLR start "rule__Operand__RightAssignment_1_1"
    // InternalSqlParser.g:20885:1: rule__Operand__RightAssignment_1_1 : ( ruleOperandFragment ) ;
    public final void rule__Operand__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20889:1: ( ( ruleOperandFragment ) )
            // InternalSqlParser.g:20890:1: ( ruleOperandFragment )
            {
            // InternalSqlParser.g:20890:1: ( ruleOperandFragment )
            // InternalSqlParser.g:20891:1: ruleOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandAccess().getRightOperandFragmentParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Operand__RightAssignment_1_1"


    // $ANTLR start "rule__OperandFragment__ColumnAssignment_0"
    // InternalSqlParser.g:20900:1: rule__OperandFragment__ColumnAssignment_0 : ( ruleColumnOperand ) ;
    public final void rule__OperandFragment__ColumnAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20904:1: ( ( ruleColumnOperand ) )
            // InternalSqlParser.g:20905:1: ( ruleColumnOperand )
            {
            // InternalSqlParser.g:20905:1: ( ruleColumnOperand )
            // InternalSqlParser.g:20906:1: ruleColumnOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getColumnColumnOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__ColumnAssignment_0"


    // $ANTLR start "rule__OperandFragment__XopAssignment_1"
    // InternalSqlParser.g:20915:1: rule__OperandFragment__XopAssignment_1 : ( ruleXOperandFragment ) ;
    public final void rule__OperandFragment__XopAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20919:1: ( ( ruleXOperandFragment ) )
            // InternalSqlParser.g:20920:1: ( ruleXOperandFragment )
            {
            // InternalSqlParser.g:20920:1: ( ruleXOperandFragment )
            // InternalSqlParser.g:20921:1: ruleXOperandFragment
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXOperandFragment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getXopXOperandFragmentParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__XopAssignment_1"


    // $ANTLR start "rule__OperandFragment__SubqAssignment_2"
    // InternalSqlParser.g:20930:1: rule__OperandFragment__SubqAssignment_2 : ( ruleSubQueryOperand ) ;
    public final void rule__OperandFragment__SubqAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20934:1: ( ( ruleSubQueryOperand ) )
            // InternalSqlParser.g:20935:1: ( ruleSubQueryOperand )
            {
            // InternalSqlParser.g:20935:1: ( ruleSubQueryOperand )
            // InternalSqlParser.g:20936:1: ruleSubQueryOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubQueryOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSubqSubQueryOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SubqAssignment_2"


    // $ANTLR start "rule__OperandFragment__FcastAssignment_3"
    // InternalSqlParser.g:20945:1: rule__OperandFragment__FcastAssignment_3 : ( ruleOpFunctionCast ) ;
    public final void rule__OperandFragment__FcastAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20949:1: ( ( ruleOpFunctionCast ) )
            // InternalSqlParser.g:20950:1: ( ruleOpFunctionCast )
            {
            // InternalSqlParser.g:20950:1: ( ruleOpFunctionCast )
            // InternalSqlParser.g:20951:1: ruleOpFunctionCast
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionCast();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFcastOpFunctionCastParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FcastAssignment_3"


    // $ANTLR start "rule__OperandFragment__FextAssignment_4"
    // InternalSqlParser.g:20960:1: rule__OperandFragment__FextAssignment_4 : ( ruleFunctionExtract ) ;
    public final void rule__OperandFragment__FextAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20964:1: ( ( ruleFunctionExtract ) )
            // InternalSqlParser.g:20965:1: ( ruleFunctionExtract )
            {
            // InternalSqlParser.g:20965:1: ( ruleFunctionExtract )
            // InternalSqlParser.g:20966:1: ruleFunctionExtract
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionExtract();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFextFunctionExtractParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FextAssignment_4"


    // $ANTLR start "rule__OperandFragment__FuncAssignment_5"
    // InternalSqlParser.g:20975:1: rule__OperandFragment__FuncAssignment_5 : ( ruleOperandFunction ) ;
    public final void rule__OperandFragment__FuncAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20979:1: ( ( ruleOperandFunction ) )
            // InternalSqlParser.g:20980:1: ( ruleOperandFunction )
            {
            // InternalSqlParser.g:20980:1: ( ruleOperandFunction )
            // InternalSqlParser.g:20981:1: ruleOperandFunction
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getFuncOperandFunctionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__FuncAssignment_5"


    // $ANTLR start "rule__OperandFragment__SqlcaseAssignment_6"
    // InternalSqlParser.g:20990:1: rule__OperandFragment__SqlcaseAssignment_6 : ( ruleSQLCASE ) ;
    public final void rule__OperandFragment__SqlcaseAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:20994:1: ( ( ruleSQLCASE ) )
            // InternalSqlParser.g:20995:1: ( ruleSQLCASE )
            {
            // InternalSqlParser.g:20995:1: ( ruleSQLCASE )
            // InternalSqlParser.g:20996:1: ruleSQLCASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCASE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFragmentAccess().getSqlcaseSQLCASEParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFragment__SqlcaseAssignment_6"


    // $ANTLR start "rule__OperandFunction__FnameAssignment_1"
    // InternalSqlParser.g:21005:1: rule__OperandFunction__FnameAssignment_1 : ( ruleFNAME ) ;
    public final void rule__OperandFunction__FnameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21009:1: ( ( ruleFNAME ) )
            // InternalSqlParser.g:21010:1: ( ruleFNAME )
            {
            // InternalSqlParser.g:21010:1: ( ruleFNAME )
            // InternalSqlParser.g:21011:1: ruleFNAME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFNAME();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFnameFNAMEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FnameAssignment_1"


    // $ANTLR start "rule__OperandFunction__StarAssignment_2_0"
    // InternalSqlParser.g:21020:1: rule__OperandFunction__StarAssignment_2_0 : ( RULE_STAR ) ;
    public final void rule__OperandFunction__StarAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21024:1: ( ( RULE_STAR ) )
            // InternalSqlParser.g:21025:1: ( RULE_STAR )
            {
            // InternalSqlParser.g:21025:1: ( RULE_STAR )
            // InternalSqlParser.g:21026:1: RULE_STAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }
            match(input,RULE_STAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getStarSTARTerminalRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__StarAssignment_2_0"


    // $ANTLR start "rule__OperandFunction__ArgsAssignment_2_1"
    // InternalSqlParser.g:21035:1: rule__OperandFunction__ArgsAssignment_2_1 : ( ruleOpFunctionArg ) ;
    public final void rule__OperandFunction__ArgsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21039:1: ( ( ruleOpFunctionArg ) )
            // InternalSqlParser.g:21040:1: ( ruleOpFunctionArg )
            {
            // InternalSqlParser.g:21040:1: ( ruleOpFunctionArg )
            // InternalSqlParser.g:21041:1: ruleOpFunctionArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getArgsOpFunctionArgParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__ArgsAssignment_2_1"


    // $ANTLR start "rule__OperandFunction__FanAssignment_4"
    // InternalSqlParser.g:21050:1: rule__OperandFunction__FanAssignment_4 : ( ruleFunctionAnalytical ) ;
    public final void rule__OperandFunction__FanAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21054:1: ( ( ruleFunctionAnalytical ) )
            // InternalSqlParser.g:21055:1: ( ruleFunctionAnalytical )
            {
            // InternalSqlParser.g:21055:1: ( ruleFunctionAnalytical )
            // InternalSqlParser.g:21056:1: ruleFunctionAnalytical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionAnalytical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOperandFunctionAccess().getFanFunctionAnalyticalParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OperandFunction__FanAssignment_4"


    // $ANTLR start "rule__FunctionExtract__VAssignment_2"
    // InternalSqlParser.g:21065:1: rule__FunctionExtract__VAssignment_2 : ( ruleEXTRACT_VALUES ) ;
    public final void rule__FunctionExtract__VAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21069:1: ( ( ruleEXTRACT_VALUES ) )
            // InternalSqlParser.g:21070:1: ( ruleEXTRACT_VALUES )
            {
            // InternalSqlParser.g:21070:1: ( ruleEXTRACT_VALUES )
            // InternalSqlParser.g:21071:1: ruleEXTRACT_VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEXTRACT_VALUES();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getVEXTRACT_VALUESEnumRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__VAssignment_2"


    // $ANTLR start "rule__FunctionExtract__OperandAssignment_4"
    // InternalSqlParser.g:21080:1: rule__FunctionExtract__OperandAssignment_4 : ( ruleOperandGroup ) ;
    public final void rule__FunctionExtract__OperandAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21084:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:21085:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:21085:1: ( ruleOperandGroup )
            // InternalSqlParser.g:21086:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionExtractAccess().getOperandOperandGroupParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionExtract__OperandAssignment_4"


    // $ANTLR start "rule__FunctionAnalytical__AnClauseAssignment_2"
    // InternalSqlParser.g:21095:1: rule__FunctionAnalytical__AnClauseAssignment_2 : ( ruleAnalyticClause ) ;
    public final void rule__FunctionAnalytical__AnClauseAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21099:1: ( ( ruleAnalyticClause ) )
            // InternalSqlParser.g:21100:1: ( ruleAnalyticClause )
            {
            // InternalSqlParser.g:21100:1: ( ruleAnalyticClause )
            // InternalSqlParser.g:21101:1: ruleAnalyticClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionAnalyticalAccess().getAnClauseAnalyticClauseParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionAnalytical__AnClauseAssignment_2"


    // $ANTLR start "rule__AnalyticClause__AbcAssignment_1"
    // InternalSqlParser.g:21110:1: rule__AnalyticClause__AbcAssignment_1 : ( ruleQueryPartitionClause ) ;
    public final void rule__AnalyticClause__AbcAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21114:1: ( ( ruleQueryPartitionClause ) )
            // InternalSqlParser.g:21115:1: ( ruleQueryPartitionClause )
            {
            // InternalSqlParser.g:21115:1: ( ruleQueryPartitionClause )
            // InternalSqlParser.g:21116:1: ruleQueryPartitionClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleQueryPartitionClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getAbcQueryPartitionClauseParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__AbcAssignment_1"


    // $ANTLR start "rule__AnalyticClause__ObcAssignment_2_0"
    // InternalSqlParser.g:21125:1: rule__AnalyticClause__ObcAssignment_2_0 : ( ruleOrderByClause ) ;
    public final void rule__AnalyticClause__ObcAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21129:1: ( ( ruleOrderByClause ) )
            // InternalSqlParser.g:21130:1: ( ruleOrderByClause )
            {
            // InternalSqlParser.g:21130:1: ( ruleOrderByClause )
            // InternalSqlParser.g:21131:1: ruleOrderByClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getObcOrderByClauseParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__ObcAssignment_2_0"


    // $ANTLR start "rule__AnalyticClause__WincAssignment_2_1"
    // InternalSqlParser.g:21140:1: rule__AnalyticClause__WincAssignment_2_1 : ( ruleWindowingClause ) ;
    public final void rule__AnalyticClause__WincAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21144:1: ( ( ruleWindowingClause ) )
            // InternalSqlParser.g:21145:1: ( ruleWindowingClause )
            {
            // InternalSqlParser.g:21145:1: ( ruleWindowingClause )
            // InternalSqlParser.g:21146:1: ruleWindowingClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticClauseAccess().getWincWindowingClauseParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticClause__WincAssignment_2_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoPAssignment_1"
    // InternalSqlParser.g:21155:1: rule__WindowingClauseBetween__WcoPAssignment_1 : ( ruleWindowingClauseOperandPreceding ) ;
    public final void rule__WindowingClauseBetween__WcoPAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21159:1: ( ( ruleWindowingClauseOperandPreceding ) )
            // InternalSqlParser.g:21160:1: ( ruleWindowingClauseOperandPreceding )
            {
            // InternalSqlParser.g:21160:1: ( ruleWindowingClauseOperandPreceding )
            // InternalSqlParser.g:21161:1: ruleWindowingClauseOperandPreceding
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandPreceding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoPWindowingClauseOperandPrecedingParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoPAssignment_1"


    // $ANTLR start "rule__WindowingClauseBetween__WcoFAssignment_3"
    // InternalSqlParser.g:21170:1: rule__WindowingClauseBetween__WcoFAssignment_3 : ( ruleWindowingClauseOperandFollowing ) ;
    public final void rule__WindowingClauseBetween__WcoFAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21174:1: ( ( ruleWindowingClauseOperandFollowing ) )
            // InternalSqlParser.g:21175:1: ( ruleWindowingClauseOperandFollowing )
            {
            // InternalSqlParser.g:21175:1: ( ruleWindowingClauseOperandFollowing )
            // InternalSqlParser.g:21176:1: ruleWindowingClauseOperandFollowing
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleWindowingClauseOperandFollowing();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseBetweenAccess().getWcoFWindowingClauseOperandFollowingParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseBetween__WcoFAssignment_3"


    // $ANTLR start "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"
    // InternalSqlParser.g:21185:1: rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21189:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:21190:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:21190:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:21191:1: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandFollowingAccess().getExpAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandFollowing__ExpAssignment_1_2_0"


    // $ANTLR start "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"
    // InternalSqlParser.g:21200:1: rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21204:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:21205:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:21205:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:21206:1: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWindowingClauseOperandPrecedingAccess().getExprAnalyticExprArgParserRuleCall_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WindowingClauseOperandPreceding__ExprAssignment_1_2_0"


    // $ANTLR start "rule__OrderByClause__ArgsAssignment_1"
    // InternalSqlParser.g:21215:1: rule__OrderByClause__ArgsAssignment_1 : ( ruleOrderByClauseArgs ) ;
    public final void rule__OrderByClause__ArgsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21219:1: ( ( ruleOrderByClauseArgs ) )
            // InternalSqlParser.g:21220:1: ( ruleOrderByClauseArgs )
            {
            // InternalSqlParser.g:21220:1: ( ruleOrderByClauseArgs )
            // InternalSqlParser.g:21221:1: ruleOrderByClauseArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseAccess().getArgsOrderByClauseArgsParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClause__ArgsAssignment_1"


    // $ANTLR start "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:21230:1: rule__OrderByClauseArgs__EntriesAssignment_1_1_1 : ( ruleOrderByClauseArg ) ;
    public final void rule__OrderByClauseArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21234:1: ( ( ruleOrderByClauseArg ) )
            // InternalSqlParser.g:21235:1: ( ruleOrderByClauseArg )
            {
            // InternalSqlParser.g:21235:1: ( ruleOrderByClauseArg )
            // InternalSqlParser.g:21236:1: ruleOrderByClauseArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrderByClauseArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgsAccess().getEntriesOrderByClauseArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OrderByClauseArg__ColAssignment_0"
    // InternalSqlParser.g:21245:1: rule__OrderByClauseArg__ColAssignment_0 : ( ruleAnalyticExprArg ) ;
    public final void rule__OrderByClauseArg__ColAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21249:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:21250:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:21250:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:21251:1: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrderByClauseArgAccess().getColAnalyticExprArgParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrderByClauseArg__ColAssignment_0"


    // $ANTLR start "rule__QueryPartitionClause__ArgsAssignment_2_0"
    // InternalSqlParser.g:21260:1: rule__QueryPartitionClause__ArgsAssignment_2_0 : ( ruleAnalyticExprArgs ) ;
    public final void rule__QueryPartitionClause__ArgsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21264:1: ( ( ruleAnalyticExprArgs ) )
            // InternalSqlParser.g:21265:1: ( ruleAnalyticExprArgs )
            {
            // InternalSqlParser.g:21265:1: ( ruleAnalyticExprArgs )
            // InternalSqlParser.g:21266:1: ruleAnalyticExprArgs
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArgs();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getQueryPartitionClauseAccess().getArgsAnalyticExprArgsParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__QueryPartitionClause__ArgsAssignment_2_0"


    // $ANTLR start "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:21275:1: rule__AnalyticExprArgs__EntriesAssignment_1_1_1 : ( ruleAnalyticExprArg ) ;
    public final void rule__AnalyticExprArgs__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21279:1: ( ( ruleAnalyticExprArg ) )
            // InternalSqlParser.g:21280:1: ( ruleAnalyticExprArg )
            {
            // InternalSqlParser.g:21280:1: ( ruleAnalyticExprArg )
            // InternalSqlParser.g:21281:1: ruleAnalyticExprArg
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAnalyticExprArg();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgsAccess().getEntriesAnalyticExprArgParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArgs__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__AnalyticExprArg__CeAssignment_0"
    // InternalSqlParser.g:21290:1: rule__AnalyticExprArg__CeAssignment_0 : ( ruleOperand ) ;
    public final void rule__AnalyticExprArg__CeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21294:1: ( ( ruleOperand ) )
            // InternalSqlParser.g:21295:1: ( ruleOperand )
            {
            // InternalSqlParser.g:21295:1: ( ruleOperand )
            // InternalSqlParser.g:21296:1: ruleOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getCeOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__CeAssignment_0"


    // $ANTLR start "rule__AnalyticExprArg__ColAliasAssignment_1"
    // InternalSqlParser.g:21305:1: rule__AnalyticExprArg__ColAliasAssignment_1 : ( ruleDbObjectName ) ;
    public final void rule__AnalyticExprArg__ColAliasAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21309:1: ( ( ruleDbObjectName ) )
            // InternalSqlParser.g:21310:1: ( ruleDbObjectName )
            {
            // InternalSqlParser.g:21310:1: ( ruleDbObjectName )
            // InternalSqlParser.g:21311:1: ruleDbObjectName
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDbObjectName();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnalyticExprArgAccess().getColAliasDbObjectNameParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AnalyticExprArg__ColAliasAssignment_1"


    // $ANTLR start "rule__OpFunctionArg__EntriesAssignment_1_1_1"
    // InternalSqlParser.g:21320:1: rule__OpFunctionArg__EntriesAssignment_1_1_1 : ( ruleOpFunctionArgOperand ) ;
    public final void rule__OpFunctionArg__EntriesAssignment_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21324:1: ( ( ruleOpFunctionArgOperand ) )
            // InternalSqlParser.g:21325:1: ( ruleOpFunctionArgOperand )
            {
            // InternalSqlParser.g:21325:1: ( ruleOpFunctionArgOperand )
            // InternalSqlParser.g:21326:1: ruleOpFunctionArgOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOpFunctionArgOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgAccess().getEntriesOpFunctionArgOperandParserRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArg__EntriesAssignment_1_1_1"


    // $ANTLR start "rule__OpFunctionArgOperand__OpAssignment"
    // InternalSqlParser.g:21335:1: rule__OpFunctionArgOperand__OpAssignment : ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) ;
    public final void rule__OpFunctionArgOperand__OpAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21339:1: ( ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) ) )
            // InternalSqlParser.g:21340:1: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            {
            // InternalSqlParser.g:21340:1: ( ( rule__OpFunctionArgOperand__OpAlternatives_0 ) )
            // InternalSqlParser.g:21341:1: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }
            // InternalSqlParser.g:21342:1: ( rule__OpFunctionArgOperand__OpAlternatives_0 )
            // InternalSqlParser.g:21342:2: rule__OpFunctionArgOperand__OpAlternatives_0
            {
            pushFollow(FOLLOW_2);
            rule__OpFunctionArgOperand__OpAlternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionArgOperandAccess().getOpAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionArgOperand__OpAssignment"


    // $ANTLR start "rule__OpFunctionCast__OpAssignment_1"
    // InternalSqlParser.g:21351:1: rule__OpFunctionCast__OpAssignment_1 : ( ruleOperandGroup ) ;
    public final void rule__OpFunctionCast__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21355:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:21356:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:21356:1: ( ruleOperandGroup )
            // InternalSqlParser.g:21357:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getOpOperandGroupParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__OpAssignment_1"


    // $ANTLR start "rule__OpFunctionCast__TypeAssignment_3"
    // InternalSqlParser.g:21366:1: rule__OpFunctionCast__TypeAssignment_3 : ( RULE_ID ) ;
    public final void rule__OpFunctionCast__TypeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21370:1: ( ( RULE_ID ) )
            // InternalSqlParser.g:21371:1: ( RULE_ID )
            {
            // InternalSqlParser.g:21371:1: ( RULE_ID )
            // InternalSqlParser.g:21372:1: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getTypeIDTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__TypeAssignment_3"


    // $ANTLR start "rule__OpFunctionCast__PAssignment_4_1"
    // InternalSqlParser.g:21381:1: rule__OpFunctionCast__PAssignment_4_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__PAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21385:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:21386:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:21386:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:21387:1: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getPUNSIGNEDTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__PAssignment_4_1"


    // $ANTLR start "rule__OpFunctionCast__P2Assignment_4_2_1"
    // InternalSqlParser.g:21396:1: rule__OpFunctionCast__P2Assignment_4_2_1 : ( RULE_UNSIGNED ) ;
    public final void rule__OpFunctionCast__P2Assignment_4_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21400:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:21401:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:21401:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:21402:1: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOpFunctionCastAccess().getP2UNSIGNEDTerminalRuleCall_4_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OpFunctionCast__P2Assignment_4_2_1"


    // $ANTLR start "rule__XOperandFragment__ParamAssignment_0"
    // InternalSqlParser.g:21411:1: rule__XOperandFragment__ParamAssignment_0 : ( ruleParameterOperand ) ;
    public final void rule__XOperandFragment__ParamAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21415:1: ( ( ruleParameterOperand ) )
            // InternalSqlParser.g:21416:1: ( ruleParameterOperand )
            {
            // InternalSqlParser.g:21416:1: ( ruleParameterOperand )
            // InternalSqlParser.g:21417:1: ruleParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getParamParameterOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ParamAssignment_0"


    // $ANTLR start "rule__XOperandFragment__EparamAssignment_1"
    // InternalSqlParser.g:21426:1: rule__XOperandFragment__EparamAssignment_1 : ( ruleExclamationParameterOperand ) ;
    public final void rule__XOperandFragment__EparamAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21430:1: ( ( ruleExclamationParameterOperand ) )
            // InternalSqlParser.g:21431:1: ( ruleExclamationParameterOperand )
            {
            // InternalSqlParser.g:21431:1: ( ruleExclamationParameterOperand )
            // InternalSqlParser.g:21432:1: ruleExclamationParameterOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExclamationParameterOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getEparamExclamationParameterOperandParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__EparamAssignment_1"


    // $ANTLR start "rule__XOperandFragment__ScalarAssignment_2"
    // InternalSqlParser.g:21441:1: rule__XOperandFragment__ScalarAssignment_2 : ( ruleScalarNumberOperand ) ;
    public final void rule__XOperandFragment__ScalarAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21445:1: ( ( ruleScalarNumberOperand ) )
            // InternalSqlParser.g:21446:1: ( ruleScalarNumberOperand )
            {
            // InternalSqlParser.g:21446:1: ( ruleScalarNumberOperand )
            // InternalSqlParser.g:21447:1: ruleScalarNumberOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleScalarNumberOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXOperandFragmentAccess().getScalarScalarNumberOperandParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XOperandFragment__ScalarAssignment_2"


    // $ANTLR start "rule__ParameterOperand__PrmAssignment"
    // InternalSqlParser.g:21456:1: rule__ParameterOperand__PrmAssignment : ( RULE_JRPARAM ) ;
    public final void rule__ParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21460:1: ( ( RULE_JRPARAM ) )
            // InternalSqlParser.g:21461:1: ( RULE_JRPARAM )
            {
            // InternalSqlParser.g:21461:1: ( RULE_JRPARAM )
            // InternalSqlParser.g:21462:1: RULE_JRPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParameterOperandAccess().getPrmJRPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ExclamationParameterOperand__PrmAssignment"
    // InternalSqlParser.g:21471:1: rule__ExclamationParameterOperand__PrmAssignment : ( RULE_JRNPARAM ) ;
    public final void rule__ExclamationParameterOperand__PrmAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21475:1: ( ( RULE_JRNPARAM ) )
            // InternalSqlParser.g:21476:1: ( RULE_JRNPARAM )
            {
            // InternalSqlParser.g:21476:1: ( RULE_JRNPARAM )
            // InternalSqlParser.g:21477:1: RULE_JRNPARAM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }
            match(input,RULE_JRNPARAM,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclamationParameterOperandAccess().getPrmJRNPARAMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclamationParameterOperand__PrmAssignment"


    // $ANTLR start "rule__ColumnOperand__CfullAssignment_0"
    // InternalSqlParser.g:21486:1: rule__ColumnOperand__CfullAssignment_0 : ( ruleColumnFull ) ;
    public final void rule__ColumnOperand__CfullAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21490:1: ( ( ruleColumnFull ) )
            // InternalSqlParser.g:21491:1: ( ruleColumnFull )
            {
            // InternalSqlParser.g:21491:1: ( ruleColumnFull )
            // InternalSqlParser.g:21492:1: ruleColumnFull
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColumnFull();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getCfullColumnFullParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__CfullAssignment_0"


    // $ANTLR start "rule__ColumnOperand__OraAssignment_1"
    // InternalSqlParser.g:21501:1: rule__ColumnOperand__OraAssignment_1 : ( ( LeftParenthesisPlusSignRightParenthesis ) ) ;
    public final void rule__ColumnOperand__OraAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21505:1: ( ( ( LeftParenthesisPlusSignRightParenthesis ) ) )
            // InternalSqlParser.g:21506:1: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            {
            // InternalSqlParser.g:21506:1: ( ( LeftParenthesisPlusSignRightParenthesis ) )
            // InternalSqlParser.g:21507:1: ( LeftParenthesisPlusSignRightParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            // InternalSqlParser.g:21508:1: ( LeftParenthesisPlusSignRightParenthesis )
            // InternalSqlParser.g:21509:1: LeftParenthesisPlusSignRightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesisPlusSignRightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColumnOperandAccess().getOraLeftParenthesisPlusSignRightParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColumnOperand__OraAssignment_1"


    // $ANTLR start "rule__SubQueryOperand__SelAssignment_2"
    // InternalSqlParser.g:21524:1: rule__SubQueryOperand__SelAssignment_2 : ( ruleSelectQuery ) ;
    public final void rule__SubQueryOperand__SelAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21528:1: ( ( ruleSelectQuery ) )
            // InternalSqlParser.g:21529:1: ( ruleSelectQuery )
            {
            // InternalSqlParser.g:21529:1: ( ruleSelectQuery )
            // InternalSqlParser.g:21530:1: ruleSelectQuery
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSelectQuery();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubQueryOperandAccess().getSelSelectQueryParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubQueryOperand__SelAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SostrAssignment_0"
    // InternalSqlParser.g:21539:1: rule__ScalarOperand__SostrAssignment_0 : ( ruleStringOperand ) ;
    public final void rule__ScalarOperand__SostrAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21543:1: ( ( ruleStringOperand ) )
            // InternalSqlParser.g:21544:1: ( ruleStringOperand )
            {
            // InternalSqlParser.g:21544:1: ( ruleStringOperand )
            // InternalSqlParser.g:21545:1: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSostrStringOperandParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SostrAssignment_0"


    // $ANTLR start "rule__ScalarOperand__SodblAssignment_1"
    // InternalSqlParser.g:21554:1: rule__ScalarOperand__SodblAssignment_1 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarOperand__SodblAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21558:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSqlParser.g:21559:1: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSqlParser.g:21559:1: ( RULE_SIGNED_DOUBLE )
            // InternalSqlParser.g:21560:1: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodblAssignment_1"


    // $ANTLR start "rule__ScalarOperand__SodateAssignment_2"
    // InternalSqlParser.g:21569:1: rule__ScalarOperand__SodateAssignment_2 : ( RULE_DATE ) ;
    public final void rule__ScalarOperand__SodateAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21573:1: ( ( RULE_DATE ) )
            // InternalSqlParser.g:21574:1: ( RULE_DATE )
            {
            // InternalSqlParser.g:21574:1: ( RULE_DATE )
            // InternalSqlParser.g:21575:1: RULE_DATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }
            match(input,RULE_DATE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodateDATETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodateAssignment_2"


    // $ANTLR start "rule__ScalarOperand__SotimeAssignment_3"
    // InternalSqlParser.g:21584:1: rule__ScalarOperand__SotimeAssignment_3 : ( RULE_TIME ) ;
    public final void rule__ScalarOperand__SotimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21588:1: ( ( RULE_TIME ) )
            // InternalSqlParser.g:21589:1: ( RULE_TIME )
            {
            // InternalSqlParser.g:21589:1: ( RULE_TIME )
            // InternalSqlParser.g:21590:1: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSotimeTIMETerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SotimeAssignment_3"


    // $ANTLR start "rule__ScalarOperand__SodtAssignment_4"
    // InternalSqlParser.g:21599:1: rule__ScalarOperand__SodtAssignment_4 : ( RULE_TIMESTAMP ) ;
    public final void rule__ScalarOperand__SodtAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21603:1: ( ( RULE_TIMESTAMP ) )
            // InternalSqlParser.g:21604:1: ( RULE_TIMESTAMP )
            {
            // InternalSqlParser.g:21604:1: ( RULE_TIMESTAMP )
            // InternalSqlParser.g:21605:1: RULE_TIMESTAMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }
            match(input,RULE_TIMESTAMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarOperandAccess().getSodtTIMESTAMPTerminalRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarOperand__SodtAssignment_4"


    // $ANTLR start "rule__ScalarNumberOperand__SoUIntAssignment_0"
    // InternalSqlParser.g:21614:1: rule__ScalarNumberOperand__SoUIntAssignment_0 : ( RULE_UNSIGNED ) ;
    public final void rule__ScalarNumberOperand__SoUIntAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21618:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:21619:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:21619:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:21620:1: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSoUIntUNSIGNEDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SoUIntAssignment_0"


    // $ANTLR start "rule__ScalarNumberOperand__SointAssignment_1"
    // InternalSqlParser.g:21629:1: rule__ScalarNumberOperand__SointAssignment_1 : ( RULE_INT ) ;
    public final void rule__ScalarNumberOperand__SointAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21633:1: ( ( RULE_INT ) )
            // InternalSqlParser.g:21634:1: ( RULE_INT )
            {
            // InternalSqlParser.g:21634:1: ( RULE_INT )
            // InternalSqlParser.g:21635:1: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSointINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SointAssignment_1"


    // $ANTLR start "rule__ScalarNumberOperand__SodblAssignment_2"
    // InternalSqlParser.g:21644:1: rule__ScalarNumberOperand__SodblAssignment_2 : ( RULE_SIGNED_DOUBLE ) ;
    public final void rule__ScalarNumberOperand__SodblAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21648:1: ( ( RULE_SIGNED_DOUBLE ) )
            // InternalSqlParser.g:21649:1: ( RULE_SIGNED_DOUBLE )
            {
            // InternalSqlParser.g:21649:1: ( RULE_SIGNED_DOUBLE )
            // InternalSqlParser.g:21650:1: RULE_SIGNED_DOUBLE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }
            match(input,RULE_SIGNED_DOUBLE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSodblSIGNED_DOUBLETerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SodblAssignment_2"


    // $ANTLR start "rule__ScalarNumberOperand__SostrAssignment_3"
    // InternalSqlParser.g:21659:1: rule__ScalarNumberOperand__SostrAssignment_3 : ( ruleStringOperand ) ;
    public final void rule__ScalarNumberOperand__SostrAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21663:1: ( ( ruleStringOperand ) )
            // InternalSqlParser.g:21664:1: ( ruleStringOperand )
            {
            // InternalSqlParser.g:21664:1: ( ruleStringOperand )
            // InternalSqlParser.g:21665:1: ruleStringOperand
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStringOperand();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScalarNumberOperandAccess().getSostrStringOperandParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ScalarNumberOperand__SostrAssignment_3"


    // $ANTLR start "rule__SQLCASE__WopAssignment_1_0"
    // InternalSqlParser.g:21674:1: rule__SQLCASE__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SQLCASE__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21678:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:21679:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:21679:1: ( ruleOperandGroup )
            // InternalSqlParser.g:21680:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WopAssignment_1_0"


    // $ANTLR start "rule__SQLCASE__ExprAssignment_1_1"
    // InternalSqlParser.g:21689:1: rule__SQLCASE__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SQLCASE__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21693:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:21694:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:21694:1: ( ruleFullExpression )
            // InternalSqlParser.g:21695:1: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__ExprAssignment_1_1"


    // $ANTLR start "rule__SQLCASE__WhenAssignment_2"
    // InternalSqlParser.g:21704:1: rule__SQLCASE__WhenAssignment_2 : ( ruleSQLCaseWhens ) ;
    public final void rule__SQLCASE__WhenAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21708:1: ( ( ruleSQLCaseWhens ) )
            // InternalSqlParser.g:21709:1: ( ruleSQLCaseWhens )
            {
            // InternalSqlParser.g:21709:1: ( ruleSQLCaseWhens )
            // InternalSqlParser.g:21710:1: ruleSQLCaseWhens
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSQLCaseWhens();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCASEAccess().getWhenSQLCaseWhensParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCASE__WhenAssignment_2"


    // $ANTLR start "rule__SQLCaseWhens__EntriesAssignment_1_1"
    // InternalSqlParser.g:21719:1: rule__SQLCaseWhens__EntriesAssignment_1_1 : ( ruleSqlCaseWhen ) ;
    public final void rule__SQLCaseWhens__EntriesAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21723:1: ( ( ruleSqlCaseWhen ) )
            // InternalSqlParser.g:21724:1: ( ruleSqlCaseWhen )
            {
            // InternalSqlParser.g:21724:1: ( ruleSqlCaseWhen )
            // InternalSqlParser.g:21725:1: ruleSqlCaseWhen
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSqlCaseWhen();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSQLCaseWhensAccess().getEntriesSqlCaseWhenParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SQLCaseWhens__EntriesAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__WopAssignment_1_0"
    // InternalSqlParser.g:21734:1: rule__SqlCaseWhen__WopAssignment_1_0 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__WopAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21738:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:21739:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:21739:1: ( ruleOperandGroup )
            // InternalSqlParser.g:21740:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getWopOperandGroupParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__WopAssignment_1_0"


    // $ANTLR start "rule__SqlCaseWhen__ExprAssignment_1_1"
    // InternalSqlParser.g:21749:1: rule__SqlCaseWhen__ExprAssignment_1_1 : ( ruleFullExpression ) ;
    public final void rule__SqlCaseWhen__ExprAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21753:1: ( ( ruleFullExpression ) )
            // InternalSqlParser.g:21754:1: ( ruleFullExpression )
            {
            // InternalSqlParser.g:21754:1: ( ruleFullExpression )
            // InternalSqlParser.g:21755:1: ruleFullExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFullExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getExprFullExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__ExprAssignment_1_1"


    // $ANTLR start "rule__SqlCaseWhen__TexpAssignment_3"
    // InternalSqlParser.g:21764:1: rule__SqlCaseWhen__TexpAssignment_3 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__TexpAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21768:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:21769:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:21769:1: ( ruleOperandGroup )
            // InternalSqlParser.g:21770:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getTexpOperandGroupParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__TexpAssignment_3"


    // $ANTLR start "rule__SqlCaseWhen__EexpAssignment_4_1"
    // InternalSqlParser.g:21779:1: rule__SqlCaseWhen__EexpAssignment_4_1 : ( ruleOperandGroup ) ;
    public final void rule__SqlCaseWhen__EexpAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21783:1: ( ( ruleOperandGroup ) )
            // InternalSqlParser.g:21784:1: ( ruleOperandGroup )
            {
            // InternalSqlParser.g:21784:1: ( ruleOperandGroup )
            // InternalSqlParser.g:21785:1: ruleOperandGroup
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOperandGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSqlCaseWhenAccess().getEexpOperandGroupParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SqlCaseWhen__EexpAssignment_4_1"


    // $ANTLR start "rule__UnsignedValue__IntegerAssignment"
    // InternalSqlParser.g:21795:1: rule__UnsignedValue__IntegerAssignment : ( RULE_UNSIGNED ) ;
    public final void rule__UnsignedValue__IntegerAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // InternalSqlParser.g:21799:1: ( ( RULE_UNSIGNED ) )
            // InternalSqlParser.g:21800:1: ( RULE_UNSIGNED )
            {
            // InternalSqlParser.g:21800:1: ( RULE_UNSIGNED )
            // InternalSqlParser.g:21801:1: RULE_UNSIGNED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }
            match(input,RULE_UNSIGNED,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnsignedValueAccess().getIntegerUNSIGNEDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnsignedValue__IntegerAssignment"

    // $ANTLR start synpred86_InternalSqlParser
    public final void synpred86_InternalSqlParser_fragment() throws RecognitionException {   
        // InternalSqlParser.g:4469:1: ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) )
        // InternalSqlParser.g:4469:1: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        {
        // InternalSqlParser.g:4469:1: ( ( rule__SQLCASE__WopAssignment_1_0 ) )
        // InternalSqlParser.g:4470:1: ( rule__SQLCASE__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSQLCASEAccess().getWopAssignment_1_0()); 
        }
        // InternalSqlParser.g:4471:1: ( rule__SQLCASE__WopAssignment_1_0 )
        // InternalSqlParser.g:4471:2: rule__SQLCASE__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SQLCASE__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred86_InternalSqlParser

    // $ANTLR start synpred87_InternalSqlParser
    public final void synpred87_InternalSqlParser_fragment() throws RecognitionException {   
        // InternalSqlParser.g:4491:1: ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) )
        // InternalSqlParser.g:4491:1: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        {
        // InternalSqlParser.g:4491:1: ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) )
        // InternalSqlParser.g:4492:1: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSqlCaseWhenAccess().getWopAssignment_1_0()); 
        }
        // InternalSqlParser.g:4493:1: ( rule__SqlCaseWhen__WopAssignment_1_0 )
        // InternalSqlParser.g:4493:2: rule__SqlCaseWhen__WopAssignment_1_0
        {
        pushFollow(FOLLOW_2);
        rule__SqlCaseWhen__WopAssignment_1_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred87_InternalSqlParser

    // Delegated rules

    public final boolean synpred87_InternalSqlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalSqlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalSqlParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalSqlParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA19 dfa19 = new DFA19(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA48 dfa48 = new DFA48(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\5\uffff\1\11\4\uffff";
    static final String dfa_3s = "\1\42\1\51\1\uffff\1\42\1\uffff\1\11\4\uffff";
    static final String dfa_4s = "\1\u008f\1\166\1\uffff\1\u008f\1\uffff\1\u0084\4\uffff";
    static final String dfa_5s = "\2\uffff\1\1\1\uffff\1\2\1\uffff\1\3\1\5\1\6\1\4";
    static final String dfa_6s = "\12\uffff}>";
    static final String[] dfa_7s = {
            "\1\4\6\uffff\1\10\11\uffff\1\4\22\uffff\1\4\11\uffff\1\2\23\uffff\1\1\5\uffff\1\6\5\uffff\1\7\5\uffff\1\3\13\uffff\1\4\1\5\1\uffff\3\4\4\uffff\4\4",
            "\1\10\106\uffff\1\7\5\uffff\1\2",
            "",
            "\1\2\6\uffff\1\2\4\uffff\1\4\4\uffff\1\2\22\uffff\1\2\11\uffff\1\2\23\uffff\1\2\5\uffff\1\2\5\uffff\1\2\5\uffff\1\2\13\uffff\2\2\1\uffff\3\2\4\uffff\4\2",
            "",
            "\1\11\10\uffff\1\11\14\uffff\1\4\4\uffff\1\11\3\uffff\1\11\1\4\1\11\1\uffff\1\11\7\uffff\2\11\1\uffff\4\11\2\uffff\1\11\3\uffff\2\11\1\uffff\1\11\5\uffff\1\11\1\uffff\1\11\1\uffff\1\11\1\4\6\uffff\1\11\2\uffff\1\11\4\uffff\1\11\5\uffff\1\4\4\uffff\1\4\1\uffff\3\4\2\uffff\2\4\1\uffff\1\11\2\4\1\uffff\1\11\1\4\1\11\1\4\1\uffff\4\4\3\uffff\1\11\1\4",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "3600:1: rule__ExpressionFragment__Alternatives : ( ( ( rule__ExpressionFragment__ExpgroupAssignment_0 ) ) | ( ( rule__ExpressionFragment__ExpAssignment_1 ) ) | ( ( rule__ExpressionFragment__XexpAssignment_2 ) ) | ( ( rule__ExpressionFragment__NotPrmAssignment_3 ) ) | ( ( rule__ExpressionFragment__InAssignment_4 ) ) | ( ( rule__ExpressionFragment__ExistsAssignment_5 ) ) );";
        }
    }
    static final String dfa_8s = "\20\uffff";
    static final String dfa_9s = "\1\152\1\20\14\171\2\uffff";
    static final String dfa_10s = "\1\152\1\150\14\u0080\2\uffff";
    static final String dfa_11s = "\16\uffff\1\2\1\1";
    static final String dfa_12s = "\20\uffff}>";
    static final String[] dfa_13s = {
            "\1\1",
            "\1\13\5\uffff\1\15\1\5\1\14\1\10\3\uffff\1\12\1\11\21\uffff\1\4\1\7\1\3\22\uffff\1\6\42\uffff\1\2",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "\1\17\6\uffff\1\16",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "3646:1: rule__ExpressionFragment__XexpAlternatives_2_0 : ( ( ruleXExpression ) | ( ruleXExpression_ ) );";
        }
    }
    static final String dfa_14s = "\24\uffff";
    static final String dfa_15s = "\1\42\15\0\6\uffff";
    static final String dfa_16s = "\1\u008f\15\0\6\uffff";
    static final String dfa_17s = "\16\uffff\1\2\4\uffff\1\1";
    static final String dfa_18s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\6\uffff}>";
    static final String[] dfa_19s = {
            "\1\14\6\uffff\1\16\11\uffff\1\13\22\uffff\1\15\11\uffff\1\16\23\uffff\1\16\5\uffff\1\16\5\uffff\1\16\5\uffff\1\12\13\uffff\1\4\1\5\1\uffff\1\6\1\7\1\10\4\uffff\1\11\1\3\1\2\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4464:1: rule__SQLCASE__Alternatives_1 : ( ( ( rule__SQLCASE__WopAssignment_1_0 ) ) | ( ( rule__SQLCASE__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_1 = input.LA(1);

                         
                        int index47_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA47_2 = input.LA(1);

                         
                        int index47_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA47_3 = input.LA(1);

                         
                        int index47_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA47_4 = input.LA(1);

                         
                        int index47_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA47_5 = input.LA(1);

                         
                        int index47_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA47_6 = input.LA(1);

                         
                        int index47_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA47_7 = input.LA(1);

                         
                        int index47_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA47_8 = input.LA(1);

                         
                        int index47_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA47_9 = input.LA(1);

                         
                        int index47_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA47_10 = input.LA(1);

                         
                        int index47_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA47_11 = input.LA(1);

                         
                        int index47_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA47_12 = input.LA(1);

                         
                        int index47_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA47_13 = input.LA(1);

                         
                        int index47_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index47_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "4486:1: rule__SqlCaseWhen__Alternatives_1 : ( ( ( rule__SqlCaseWhen__WopAssignment_1_0 ) ) | ( ( rule__SqlCaseWhen__ExprAssignment_1_1 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_2 = input.LA(1);

                         
                        int index48_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA48_3 = input.LA(1);

                         
                        int index48_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA48_4 = input.LA(1);

                         
                        int index48_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA48_5 = input.LA(1);

                         
                        int index48_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA48_6 = input.LA(1);

                         
                        int index48_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA48_7 = input.LA(1);

                         
                        int index48_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA48_8 = input.LA(1);

                         
                        int index48_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA48_9 = input.LA(1);

                         
                        int index48_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA48_10 = input.LA(1);

                         
                        int index48_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA48_11 = input.LA(1);

                         
                        int index48_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA48_12 = input.LA(1);

                         
                        int index48_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA48_13 = input.LA(1);

                         
                        int index48_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalSqlParser()) ) {s = 19;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index48_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000400000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0040400000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000002000100000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0400010000040000L,0x0000000000000004L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0400010000040002L,0x0000000000000004L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000400000000000L,0x0000000024000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0008000408000000L,0x0040004000000040L,0x000000000000F0FCL});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x22A0140000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000002000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0008020400000000L,0x0041041000010040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000E020L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0110001000000200L,0x0000000000005402L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0110001000000202L,0x0000000000005402L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000008L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x8000008000000000L,0x0000400000000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L,0x00000000000010ECL});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0040008000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0040000080000000L,0x000000000000E000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000A00000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000080L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0008000040000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000002L,0x0008000040000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0040001000010000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0007000063C10000L,0x0000010000000020L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0008000400000000L,0x0040000000000040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0008020480000000L,0xE0533E1000018040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000001000020000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0008000400000000L,0x00400000A0200040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0008000000000000L,0x0000000000000000L,0x00000000000090ECL});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000001000008000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000080000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0001001000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000000017ECL});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x1520000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x1520000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0008000408000000L,0x00C0000020000040L,0x000000000000F0FCL});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x080028400400FDF0L,0x0000000209000800L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x2000000000080000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100001L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0008000580200000L,0x0040000000000040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000120000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x1000000000000000L,0x0000000100000080L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0040000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0008000408000000L,0x0040000020000040L,0x000000000000F0FCL});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0280000000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0008020400000000L,0x0041041002010040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0008020400000002L,0x0041041002010040L,0x000000000000F0ECL});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x4000000000000000L});

}